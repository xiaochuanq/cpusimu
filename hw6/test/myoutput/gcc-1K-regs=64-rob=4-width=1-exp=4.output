Processing trace...
1: 0 1 2 2, r13 -> p50 [p13] | SET ADD
2: 1 2 3 3, r49 -> p49, r13 -> p51 [p50] | SET ADD_IMM
3: 2 3 6 6, r5 -> p5, r45 -> p52 [p45] | CMP LOAD
4: 3 6 7 7, r45 -> p52, r3 -> p3, r44 -> p53 [p44], r49 -> p54 [p49] | CMP SUB
5: 4 5 8 8, r5 -> p5, r3 -> p55 [p3] | MOV LOAD
6: 5 7 8 9, r0 -> p56 [p0] | SET ADD
7: 6 8 9 10, r49 -> p54, r0 -> p57 [p56] | SET ADD_IMM
8: 7 9 10 11, r12 -> p58 [p12] | XOR ADD
9: 8 10 11 12, r13 -> p51, r0 -> p57, r13 -> p59 [p51], r49 -> p60 [p54] | OR OR
10: 9 11 12 13 | JMP JMP_IMM
11: 10 12 15 15, r3 -> p55, r0 -> p61 [p57] | MOV LOAD
12: 11 15 16 16, r0 -> p61, r0 -> p61, r44 -> p62 [p53], r49 -> p63 [p60] | TEST AND
13: 12 16 17 17, r49 -> p63 | J JMP_IMM
14: 13 17 20 20, r0 -> p61, r7 -> p13 [p7] | MOV LOAD
15: 15 20 23 23, r7 -> p13, r44 -> p50 [p62] | MOVZX LOAD
16: 16 23 24 24, r44 -> p50, r0 -> p45 [p61] | MOVZX ZEXT_WORD_TO_DWORD
17: 17 24 25 25, r0 -> p45, r44 -> p44 [p50], r49 -> p49 [p63] | CMP SUB_IMM
18: 20 25 26 26, r49 -> p49 | J JMP_IMM
19: 23 26 27 27, r6 -> p3 [p6] | XOR ADD
20: 24 27 28 28, r44 -> p0 [p44] | CALL SAVE_PC
21: 25 28 29 29, r4 -> p4, r4 -> p56 [p4] | CALL SUB_IMM
22: 26 29 30 30, r44 -> p0, r4 -> p56 | CALL STORE
23: 27 30 31 31 | CALL JMP_IMM
24: 28 31 32 32, r15 -> p15, r4 -> p56 | PUSH STORE
25: 29 32 33 33, r4 -> p56, r4 -> p12 [p56] | PUSH SUB_IMM
26: 30 33 34 34, r14 -> p14, r4 -> p12 | PUSH STORE
27: 31 34 35 35, r4 -> p12, r4 -> p51 [p12] | PUSH SUB_IMM
28: 32 35 36 36, r13 -> p59, r4 -> p51 | PUSH STORE
29: 33 36 37 37, r4 -> p51, r4 -> p54 [p51] | PUSH SUB_IMM
30: 34 37 38 38, r7 -> p13, r13 -> p57 [p59] | MOV ADD
31: 35 38 39 39, r12 -> p58, r4 -> p54 | PUSH STORE
32: 36 39 40 40, r4 -> p54, r4 -> p53 [p54] | PUSH SUB_IMM
33: 37 40 41 41, r6 -> p3, r12 -> p60 [p58] | MOV ADD
34: 38 41 42 42, r5 -> p5, r4 -> p53 | PUSH STORE
35: 39 42 43 43, r4 -> p53, r4 -> p7 [p53] | PUSH SUB_IMM
36: 40 43 44 44, r3 -> p55, r4 -> p7 | PUSH STORE
37: 41 44 45 45, r4 -> p7, r4 -> p62 [p7] | PUSH SUB_IMM
38: 42 45 46 46, r4 -> p62, r4 -> p61 [p62], r49 -> p50 [p49] | SUB SUB_IMM
39: 43 46 49 49, r7 -> p13, r44 -> p63 [p0] | MOVZX LOAD
40: 44 49 50 50, r44 -> p63, r0 -> p6 [p45] | MOVZX ZEXT_WORD_TO_DWORD
41: 45 50 51 51, r0 -> p6, r44 -> p44 [p63], r49 -> p4 [p50] | CMP SUB_IMM
42: 46 51 52 52, r49 -> p4 | J JMP_IMM
43: 56 57 60 60, r7 -> p13, r5 -> p56 [p5] | MOV LOAD
44: 57 60 61 61, r5 -> p56, r44 -> p12 [p44], r49 -> p51 [p4] | CMP SUB_IMM
45: 58 61 62 62, r49 -> p51 | J JMP_IMM
46: 59 62 63 63, r45 -> p59 [p52] | CMP SAVE_PC
47: 60 63 66 66, r45 -> p59, r45 -> p54 [p59] | CMP LOAD
48: 61 66 67 67, r5 -> p56, r45 -> p54, r44 -> p58 [p12], r49 -> p53 [p51] | CMP SUB
49: 62 67 68 68, r49 -> p53 | J JMP_IMM
50: 72 73 74 74, r44 -> p7 [p58] | MOV SAVE_PC
51: 73 74 77 77, r44 -> p7, r2 -> p62 [p2] | MOV LOAD
52: 74 77 78 78, r2 -> p62, r2 -> p62, r44 -> p49 [p7], r49 -> p0 [p53] | TEST AND
53: 75 78 79 79, r49 -> p0 | J JMP_IMM
54: 83 84 87 87, r2 -> p62, r12 -> p45 [p60] | MOV LOAD
55: 84 87 88 88, r12 -> p45, r12 -> p63 [p45], r49 -> p50 [p0] | AND AND_IMM
56: 85 86 87 89, r45 -> p5 [p54] | CMP SAVE_PC
57: 86 88 91 91, r45 -> p5, r45 -> p44 [p5] | CMP LOAD
58: 87 91 92 92, r5 -> p56, r45 -> p44, r44 -> p4 [p49], r49 -> p52 [p50] | CMP SUB
59: 88 92 93 93, r49 -> p52 | J JMP_IMM
60: 97 98 99 99, r44 -> p59 [p4] | MOV SAVE_PC
61: 98 99 102 102, r44 -> p59, r2 -> p12 [p62] | MOV LOAD
62: 99 102 103 103, r2 -> p12, r2 -> p12, r44 -> p51 [p59], r49 -> p58 [p52] | TEST AND
63: 100 103 104 104, r49 -> p58 | J JMP_IMM
64: 108 109 112 112, r2 -> p12, r0 -> p2 [p6] | MOV LOAD
65: 109 112 113 113, r5 -> p56, r0 -> p2, r44 -> p7 [p51], r49 -> p53 [p58] | CMP SUB
66: 110 113 114 114, r49 -> p53 | J JMP_IMM
67: 118 119 120 120, r45 -> p60 [p44] | CMP SAVE_PC
68: 119 120 123 123, r45 -> p60, r45 -> p45 [p60] | CMP LOAD
69: 120 123 124 124, r5 -> p56, r45 -> p45, r44 -> p0 [p7], r49 -> p54 [p53] | CMP SUB
70: 121 124 125 125, r49 -> p54 | J JMP_IMM
71: 129 130 131 131, r44 -> p5 [p0] | MOV SAVE_PC
72: 130 131 134 134, r44 -> p5, r2 -> p49 [p12] | MOV LOAD
73: 131 134 135 135, r2 -> p49, r2 -> p49, r44 -> p50 [p5], r49 -> p4 [p54] | TEST AND
74: 132 135 136 136, r49 -> p4 | J JMP_IMM
75: 140 141 144 144, r2 -> p49, r45 -> p62 [p45] | ADD LOAD
76: 141 144 145 145, r45 -> p62, r44 -> p59 [p50], r49 -> p52 [p4] | ADD ADD_IMM
77: 142 145 146 146, r44 -> p59, r2 -> p49 | ADD STORE
78: 143 146 147 147, r5 -> p56, r44 -> p6 [p59], r49 -> p51 [p52] | CMP SUB_IMM
79: 144 147 148 148, r12 -> p63, r12 -> p58 [p63] | MOV ADD
80: 145 148 149 149, r49 -> p51 | J JMP_IMM
81: 153 154 157 157, r13 -> p57, r45 -> p44 [p62] | CMP LOAD
82: 154 157 158 158, r45 -> p44, r44 -> p60 [p6], r49 -> p7 [p51] | CMP SUB_IMM
83: 155 156 159 159, r13 -> p57, r44 -> p53 [p60] | MOVZX LOAD
84: 156 159 160 160, r44 -> p53, r5 -> p0 [p56] | MOVZX ZEXT_BYTE_TO_DWORD
85: 157 158 159 161, r49 -> p7 | J JMP_IMM
86: 163 164 167 167, r12 -> p58, r3 -> p12 [p55] | MOV LOAD
87: 164 165 168 168, r13 -> p57, r2 -> p5 [p49] | MOV LOAD
88: 165 167 168 169, r3 -> p12, r3 -> p12, r44 -> p54 [p53], r49 -> p45 [p7] | TEST AND
89: 166 168 169 170, r49 -> p45 | J JMP_IMM
90: 173 174 177 177, r3 -> p12, r0 -> p50 [p2] | MOV LOAD
91: 174 177 180 180, r0 -> p50, r45 -> p4 [p44] | CMP LOAD
92: 175 180 181 181, r45 -> p4, r44 -> p59 [p54], r49 -> p52 [p45] | CMP SUB_IMM
93: 176 181 182 182, r49 -> p52 | J JMP_IMM
94: 186 187 190 190, r3 -> p12, r3 -> p63 [p12] | MOV LOAD
95: 187 190 191 191, r3 -> p63, r3 -> p63, r44 -> p62 [p59], r49 -> p6 [p52] | TEST AND
96: 188 191 192 192, r49 -> p6 | J JMP_IMM
97: 196 197 198 198, r4 -> p61, r4 -> p51 [p61], r49 -> p60 [p6] | ADD ADD_IMM
98: 197 198 201 201, r4 -> p51, r3 -> p56 [p63] | POP LOAD
99: 198 199 200 202, r4 -> p51, r4 -> p55 [p51] | POP ADD_IMM
100: 199 200 203 203, r4 -> p55, r5 -> p49 [p0] | POP LOAD
101: 200 201 202 204, r4 -> p55, r4 -> p53 [p55] | POP ADD_IMM
102: 201 202 205 205, r4 -> p53, r12 -> p7 [p58] | POP LOAD
103: 202 203 204 206, r4 -> p53, r4 -> p2 [p53] | POP ADD_IMM
104: 203 204 207 207, r4 -> p2, r13 -> p44 [p57] | POP LOAD
105: 204 205 206 208, r4 -> p2, r4 -> p54 [p2] | POP ADD_IMM
106: 205 206 209 209, r4 -> p54, r14 -> p45 [p14] | POP LOAD
107: 206 207 208 210, r4 -> p54, r4 -> p12 [p54] | POP ADD_IMM
108: 207 208 211 211, r4 -> p12, r15 -> p59 [p15] | POP LOAD
109: 208 209 210 212, r4 -> p12, r4 -> p52 [p12] | POP ADD_IMM
110: 209 210 213 213, r4 -> p52, r44 -> p61 [p62] | RET LOAD
111: 210 211 212 214, r4 -> p52, r4 -> p6 [p52] | RET ADD_IMM
112: 211 213 214 215, r44 -> p61 | RET JMP_REG
113: 212 214 215 216 | JMP JMP_IMM
114: 213 215 216 217, r12 -> p7, r12 -> p63 [p7], r49 -> p51 [p60] | ADD ADD_IMM
115: 214 216 217 218, r3 -> p56, r3 -> p0 [p56], r49 -> p55 [p51] | ADD ADD_IMM
116: 215 217 220 220, r5 -> p49, r45 -> p58 [p4] | CMP LOAD
117: 216 220 221 221, r12 -> p63, r45 -> p58, r44 -> p53 [p61], r49 -> p57 [p55] | CMP SUB
118: 217 221 222 222, r49 -> p57 | J JMP_IMM
119: 226 227 230 230, r5 -> p49, r0 -> p2 [p50] | MOV LOAD
120: 227 230 233 233, r0 -> p2, r45 -> p14 [p58] | CMP LOAD
121: 228 233 234 234, r45 -> p14, r44 -> p54 [p53], r49 -> p15 [p57] | CMP SUB_IMM
122: 229 234 235 235, r49 -> p15 | J JMP_IMM
123: 239 240 243 243, r0 -> p2, r0 -> p12 [p2] | MOV LOAD
124: 240 243 246 246, r0 -> p12, r0 -> p62 [p12] | MOV LOAD
125: 241 246 247 247, r0 -> p62, r0 -> p52 [p62], r49 -> p7 [p15] | AND AND_IMM
126: 242 247 248 248, r0 -> p52, r44 -> p60 [p54], r49 -> p56 [p7] | CMP SUB_IMM
127: 243 248 249 249, r49 -> p56 | J JMP_IMM
128: 253 254 257 257, r5 -> p49, r11 -> p51 [p11] | MOV LOAD
129: 254 257 258 258, r11 -> p51, r11 -> p51, r44 -> p4 [p60], r49 -> p61 [p56] | TEST AND
130: 255 258 259 259, r49 -> p61 | J JMP_IMM
131: 256 259 262 262, r5 -> p49, r1 -> p55 [p1] | MOV LOAD
132: 257 260 261 263, r5 -> p49 | MOV STORE
133: 258 262 263 264, r1 -> p55, r5 -> p49 | MOV STORE
134: 259 261 262 265 | JMP JMP_IMM
135: 262 263 266 266, r5 -> p49, r3 -> p50 [p0] | MOV LOAD
136: 263 266 269 269, r3 -> p50, r0 -> p58 [p52] | MOV LOAD
137: 264 269 270 270, r0 -> p58, r0 -> p58, r44 -> p53 [p4], r49 -> p57 [p61] | TEST AND
138: 265 270 271 271, r49 -> p57 | J JMP_IMM
139: 266 271 274 274, r0 -> p58, r7 -> p2 [p13] | MOV LOAD
140: 269 274 277 277, r7 -> p2, r45 -> p12 [p14] | CMP LOAD
141: 270 277 278 278, r45 -> p12, r44 -> p62 [p53], r49 -> p15 [p57] | CMP SUB_IMM
142: 271 278 279 279, r49 -> p15 | J JMP_IMM
143: 274 275 278 280, r7 -> p2, r1 -> p54 [p55] | MOV LOAD
144: 277 279 280 281, r1 -> p54, r44 -> p7 [p62], r49 -> p11 [p15] | CMP SUB_IMM
145: 278 280 281 282, r49 -> p11 | J JMP_IMM
146: 285 286 287 287, r0 -> p60 [p58] | MOV ADD_IMM
147: 286 287 288 288 | JMP JMP_IMM
148: 287 288 289 289, r0 -> p60, r1 -> p54, r0 -> p56 [p60], r49 -> p1 [p11] | ADD ADD
149: 288 289 290 290, r1 -> p54, r0 -> p56, r44 -> p0 [p7], r49 -> p52 [p1] | CMP SUB
150: 289 290 291 291, r49 -> p52 | J JMP_IMM
151: 290 291 292 292, r1 -> p54, r13 -> p4 [p44] | MOV ADD
152: 291 292 293 293, r45 -> p61 [p12] | CMP SAVE_PC
153: 292 293 296 296, r45 -> p61, r45 -> p13 [p61] | CMP LOAD
154: 293 296 297 297, r45 -> p13, r13 -> p4, r44 -> p14 [p0], r49 -> p53 [p52] | CMP SUB
155: 294 295 296 298, r0 -> p56, r5 -> p49 | MOV STORE
156: 295 297 298 299, r49 -> p53 | J JMP_IMM
157: 302 303 304 304, r44 -> p57 [p14] | MOV SAVE_PC
158: 303 304 307 307, r44 -> p57, r2 -> p55 [p5] | MOV LOAD
159: 304 307 308 308, r2 -> p55, r2 -> p55, r44 -> p62 [p57], r49 -> p15 [p53] | TEST AND
160: 305 308 309 309, r49 -> p15 | J JMP_IMM
161: 313 314 317 317, r2 -> p55, r10 -> p58 [p10] | MOV LOAD
162: 314 317 318 318, r10 -> p58, r10 -> p58, r44 -> p60 [p62], r49 -> p11 [p15] | TEST AND
163: 315 318 319 319, r49 -> p11 | J JMP_IMM
164: 323 324 325 325, r13 -> p4, r13 -> p7 [p4], r49 -> p1 [p11] | ADD ADD_IMM
165: 324 325 328 328, r5 -> p49, r45 -> p44 [p13] | CMP LOAD
166: 325 328 329 329, r45 -> p44, r13 -> p7, r44 -> p12 [p60], r49 -> p61 [p1] | CMP SUB
167: 326 329 330 330, r49 -> p61 | J JMP_IMM
168: 334 335 338 338, r5 -> p49, r45 -> p0 [p44] | ADD LOAD
169: 335 338 339 339, r45 -> p0, r44 -> p52 [p12], r49 -> p14 [p61] | ADD ADD_IMM
170: 336 339 340 340, r44 -> p52, r5 -> p49 | ADD STORE
171: 337 340 343 343, r5 -> p49, r45 -> p5 [p0] | ADD LOAD
172: 338 343 344 344, r45 -> p5, r44 -> p57 [p52], r49 -> p53 [p14] | ADD ADD_IMM
173: 339 344 345 345, r44 -> p57, r5 -> p49 | ADD STORE
174: 340 341 344 346, r5 -> p49, r0 -> p10 [p56] | MOV LOAD
175: 343 345 348 348, r5 -> p49, r45 -> p62 [p5] | CMP LOAD
176: 344 348 349 349, r45 -> p62, r0 -> p10, r44 -> p15 [p57], r49 -> p4 [p53] | CMP SUB
177: 345 349 350 350, r49 -> p4 | J JMP_IMM
178: 354 355 358 358, r5 -> p49, r1 -> p11 [p54] | MOV LOAD
179: 355 356 357 359, r6 -> p13 [p3] | XOR ADD
180: 356 357 358 360 | XCHG NOP
181: 357 358 359 361 | JMP JMP_IMM
182: 358 359 362 362, r1 -> p11, r45 -> p60 [p62] | CMP LOAD
183: 359 362 363 363, r45 -> p60, r44 -> p1 [p15], r49 -> p44 [p4] | CMP SUB
184: 360 363 364 364, r49 -> p44 | J JMP_IMM
185: 361 364 367 367, r1 -> p11, r0 -> p12 [p10] | MOV LOAD
186: 362 367 368 368, r0 -> p12, r0 -> p12, r44 -> p61 [p1], r49 -> p0 [p44] | TEST AND
187: 363 368 369 369, r49 -> p0 | J JMP_IMM
188: 364 369 372 372, r0 -> p12, r45 -> p52 [p60] | CMP LOAD
189: 367 372 373 373, r45 -> p52, r44 -> p14 [p61], r49 -> p56 [p0] | CMP SUB
190: 368 373 374 374, r49 -> p56 | J JMP_IMM
191: 378 379 380 380, r6 -> p13, r6 -> p5 [p13], r49 -> p57 [p56] | ADD ADD_IMM
192: 379 380 381 381, r1 -> p11, r1 -> p53 [p11], r49 -> p54 [p57] | ADD ADD_IMM
193: 380 381 384 384, r5 -> p49, r45 -> p3 [p52] | CMP LOAD
194: 381 384 385 385, r6 -> p5, r45 -> p3, r44 -> p62 [p14], r49 -> p15 [p54] | CMP SUB
195: 382 385 386 386, r49 -> p15 | J JMP_IMM
196: 390 391 394 394, r5 -> p49, r1 -> p4 [p53] | MOV LOAD
197: 391 392 393 395, r5 -> p49 | MOV STORE
198: 392 394 395 396, r1 -> p4, r5 -> p49 | MOV STORE
199: 393 395 396 397 | JMP JMP_IMM
200: 394 396 399 399, r5 -> p49, r2 -> p10 [p55] | MOV LOAD
201: 395 399 402 402, r2 -> p10, r0 -> p1 [p12] | MOV LOAD
202: 396 402 403 403, r0 -> p1, r0 -> p1, r44 -> p44 [p62], r49 -> p60 [p15] | TEST AND
203: 397 403 404 404, r49 -> p60 | J JMP_IMM
204: 399 400 401 405, r44 -> p61 [p44] | MOV SAVE_PC
205: 402 404 407 407, r44 -> p61, r9 -> p0 [p9] | MOV LOAD
206: 403 405 408 408, r0 -> p1, r12 -> p13 [p63] | MOV LOAD
207: 404 406 409 409, r2 -> p10, r14 -> p56 [p45] | MOV LOAD
208: 405 407 408 410, r9 -> p0, r9 -> p0, r44 -> p11 [p61], r49 -> p57 [p60] | TEST AND
209: 407 408 409 411, r49 -> p57 | J JMP_IMM
210: 413 414 417 417, r12 -> p13, r44 -> p52 [p11] | MOVZX LOAD
211: 414 417 418 418, r44 -> p52, r2 -> p14 [p10] | MOVZX ZEXT_BYTE_TO_DWORD
212: 415 418 419 419, r2 -> p14, r44 -> p54 [p52], r49 -> p53 [p57] | CMP SUB_IMM
213: 416 419 420 420, r49 -> p53 | J JMP_IMM
214: 417 420 423 423, r5 -> p49, r45 -> p55 [p3] | CMP LOAD
215: 418 423 424 424, r45 -> p55, r44 -> p12 [p54], r49 -> p62 [p53] | CMP SUB
216: 419 424 425 425, r49 -> p62 | J JMP_IMM
217: 429 430 433 433, r5 -> p49, r1 -> p15 [p4] | MOV LOAD
218: 430 433 436 436, r1 -> p15, r6 -> p44 [p5] | MOV LOAD
219: 431 436 437 437, r6 -> p44, r6 -> p44, r44 -> p9 [p12], r49 -> p63 [p62] | TEST AND
220: 432 434 435 438 | NOP NOP
221: 433 437 438 439, r49 -> p63 | J JMP_IMM
222: 436 438 441 441, r12 -> p13, r44 -> p45 [p9] | MOVZX LOAD
223: 437 441 442 442, r44 -> p45, r0 -> p61 [p1] | MOVZX ZEXT_WORD_TO_DWORD
224: 438 442 443 443, r0 -> p61, r44 -> p60 [p45], r49 -> p11 [p63] | CMP SUB_IMM
225: 439 443 444 444, r49 -> p11 | J JMP_IMM
226: 441 444 445 445, r0 -> p61, r44 -> p10 [p60], r49 -> p52 [p11] | CMP SUB_IMM
227: 442 445 446 446, r49 -> p52 | J JMP_IMM
228: 450 451 452 452, r0 -> p61, r44 -> p57 [p10], r49 -> p3 [p52] | CMP SUB_IMM
229: 451 452 453 453, r49 -> p3 | J JMP_IMM
230: 457 458 459 459, r2 -> p54 [p14] | MOV ADD_IMM
231: 458 459 460 460, r12 -> p13, r7 -> p53 [p2] | MOV ADD
232: 459 460 461 461, r44 -> p4 [p57] | CALL SAVE_PC
233: 460 461 462 462, r4 -> p6, r4 -> p5 [p6] | CALL SUB_IMM
234: 461 462 463 463, r44 -> p4, r4 -> p5 | CALL STORE
235: 462 463 464 464 | CALL JMP_IMM
236: 463 464 465 465, r14 -> p56, r4 -> p5 | PUSH STORE
237: 464 465 466 466, r4 -> p5, r4 -> p12 [p5] | PUSH SUB_IMM
238: 465 466 467 467, r2 -> p54, r14 -> p62 [p56] | MOV ADD
239: 466 467 468 468, r13 -> p7, r4 -> p12 | PUSH STORE
240: 467 468 469 469, r4 -> p12, r4 -> p9 [p12] | PUSH SUB_IMM
241: 468 469 470 470, r6 -> p44, r13 -> p1 [p7] | MOV ADD
242: 469 470 471 471, r12 -> p13, r4 -> p9 | PUSH STORE
243: 470 471 472 472, r4 -> p9, r4 -> p45 [p9] | PUSH SUB_IMM
244: 471 472 473 473, r5 -> p49, r4 -> p45 | PUSH STORE
245: 472 473 474 474, r4 -> p45, r4 -> p63 [p45] | PUSH SUB_IMM
246: 473 474 475 475, r7 -> p53, r5 -> p60 [p49] | MOV ADD
247: 474 475 476 476, r3 -> p50, r4 -> p63 | PUSH STORE
248: 475 476 477 477, r4 -> p63, r4 -> p11 [p63] | PUSH SUB_IMM
249: 476 477 480 480, r7 -> p53, r44 -> p10 [p4] | MOVZX LOAD
250: 477 480 481 481, r44 -> p10, r0 -> p52 [p61] | MOVZX ZEXT_WORD_TO_DWORD
251: 478 481 482 482, r0 -> p52, r44 -> p14 [p10], r49 -> p2 [p3] | CMP SUB_IMM
252: 479 482 483 483, r49 -> p2 | J JMP_IMM
253: 487 488 491 491, r7 -> p53, r3 -> p57 [p50] | MOV LOAD
254: 488 489 490 492, r45 -> p6 [p55] | CMP SAVE_PC
255: 489 490 493 493, r45 -> p6, r45 -> p5 [p6] | CMP LOAD
256: 490 493 494 494, r3 -> p57, r45 -> p5, r44 -> p56 [p14], r49 -> p12 [p2] | CMP SUB
257: 491 494 495 495, r49 -> p12 | J JMP_IMM
258: 499 500 501 501, r44 -> p7 [p56] | MOV SAVE_PC
259: 500 501 504 504, r44 -> p7, r2 -> p9 [p54] | MOV LOAD
260: 501 504 505 505, r2 -> p9, r2 -> p9, r44 -> p45 [p7], r49 -> p49 [p12] | TEST AND
261: 502 505 506 506, r49 -> p49 | J JMP_IMM
262: 510 511 514 514, r2 -> p9, r45 -> p63 [p5] | CMP LOAD
263: 511 514 515 515, r45 -> p63, r3 -> p57, r44 -> p4 [p45], r49 -> p61 [p49] | CMP SUB
264: 512 515 516 516, r49 -> p61 | J JMP_IMM
265: 520 521 522 522, r13 -> p1, r13 -> p1, r44 -> p10 [p4], r49 -> p3 [p61] | TEST AND
266: 521 522 523 523, r49 -> p3 | J JMP_IMM
267: 522 523 526 526, r13 -> p1, r1 -> p50 [p15] | MOV LOAD
268: 523 526 527 527, r1 -> p50, r1 -> p50, r44 -> p55 [p10], r49 -> p6 [p3] | TEST AND
269: 524 527 528 528, r49 -> p6 | J JMP_IMM
270: 532 533 536 536, r1 -> p50, r2 -> p14 [p9] | MOV LOAD
271: 533 536 539 539, r2 -> p14, r45 -> p2 [p63] | CMP LOAD
272: 534 539 540 540, r45 -> p2, r44 -> p56 [p55], r49 -> p54 [p6] | CMP SUB_IMM
273: 535 540 541 541, r49 -> p54 | J JMP_IMM
274: 545 546 549 549, r1 -> p50, r1 -> p7 [p50] | MOV LOAD
275: 546 549 550 550, r1 -> p7, r1 -> p7, r44 -> p12 [p56], r49 -> p5 [p54] | TEST AND
276: 547 550 551 551, r49 -> p5 | J JMP_IMM
277: 548 551 554 554, r1 -> p7, r2 -> p45 [p14] | MOV LOAD
278: 549 554 557 557, r2 -> p45, r45 -> p49 [p2] | CMP LOAD
279: 550 557 558 558, r45 -> p49, r44 -> p4 [p12], r49 -> p61 [p5] | CMP SUB_IMM
280: 551 558 559 559, r49 -> p61 | J JMP_IMM
281: 554 555 558 560, r2 -> p45, r44 -> p15 [p4] | MOVZX LOAD
282: 557 559 560 561, r44 -> p15, r0 -> p10 [p52] | MOVZX ZEXT_BYTE_TO_DWORD
283: 558 560 563 563, r5 -> p60, r45 -> p3 [p49] | CMP LOAD
284: 559 563 564 564, r0 -> p10, r45 -> p3, r44 -> p9 [p15], r49 -> p63 [p61] | CMP SUB
285: 560 564 565 565, r49 -> p63 | J JMP_IMM
286: 561 562 565 566, r2 -> p45, r5 -> p55 [p60] | MOV LOAD
287: 563 565 566 567, r45 -> p6 [p3] | CMP SAVE_PC
288: 564 566 569 569, r45 -> p6, r45 -> p50 [p6] | CMP LOAD
289: 565 569 570 570, r5 -> p55, r45 -> p50, r44 -> p56 [p9], r49 -> p54 [p63] | CMP SUB
290: 566 570 571 571, r49 -> p54 | J JMP_IMM
291: 567 568 569 572, r5 -> p55, r0 -> p14 [p10] | MOV ADD
292: 569 571 572 573, r0 -> p14, r0 -> p2 [p14], r49 -> p12 [p54] | SHR SHR_IMM
293: 570 572 573 574, r0 -> p2, r5 -> p55, r0 -> p5 [p2], r49 -> p4 [p12] | XOR XOR
294: 571 573 574 575, r0 -> p5, r0 -> p52 [p5], r49 -> p49 [p4] | AND AND_IMM
295: 572 574 575 576, r0 -> p52, r0 -> p15 [p52], r49 -> p61 [p49] | SHL SHL_IMM
296: 573 575 578 578, r0 -> p15, r2 -> p60 [p45] | MOV LOAD
297: 574 576 577 579, r0 -> p15, r12 -> p3 [p13] | LEA LEA
298: 575 578 579 580, r2 -> p60, r2 -> p60, r44 -> p6 [p56], r49 -> p9 [p61] | TEST AND
299: 576 579 580 581, r49 -> p9 | J JMP_IMM
300: 578 580 583 583, r2 -> p60, r45 -> p63 [p50] | CMP LOAD
301: 579 583 584 584, r45 -> p63, r5 -> p55, r44 -> p10 [p6], r49 -> p14 [p9] | CMP SUB
302: 580 584 585 585, r49 -> p14 | J JMP_IMM
303: 581 582 583 586 | JMP JMP_IMM
304: 583 585 588 588, r2 -> p60, r12 -> p54 [p3] | MOV LOAD
305: 584 586 587 589, r44 -> p2 [p10] | MOV SAVE_PC
306: 585 587 588 590, r5 -> p55, r44 -> p2 | MOV STORE
307: 586 588 589 591, r44 -> p12 [p2] | MOV SAVE_PC
308: 588 589 590 592, r2 -> p60, r44 -> p12 | MOV STORE
309: 589 590 591 593, r12 -> p54, r0 -> p5 [p15] | MOVSX SEXT_DWORD_TO_QWORD
310: 590 591 592 594, r0 -> p5, r0 -> p5, r14 -> p4 [p62] | LEA LEA
311: 591 592 593 595, r14 -> p4, r14 -> p52 [p4], r49 -> p49 [p14] | SHL SHL_IMM
312: 592 593 594 596, r14 -> p52, r13 -> p45 [p1] | MOV ADD
313: 593 594 595 597, r44 -> p13 [p12] | ADD SAVE_PC
314: 594 595 598 598, r44 -> p13, r44 -> p56 [p13] | ADD LOAD
315: 595 598 599 599, r13 -> p45, r44 -> p56, r13 -> p61 [p45], r49 -> p50 [p49] | ADD ADD
316: 596 597 600 600, r2 -> p60, r45 -> p6 [p63] | CMP LOAD
317: 597 600 601 601, r45 -> p6, r5 -> p55, r44 -> p9 [p56], r49 -> p3 [p50] | CMP SUB
318: 598 601 602 602, r49 -> p3 | J JMP_IMM
319: 599 602 603 603, r45 -> p10 [p6] | CMP SAVE_PC
320: 600 603 606 606, r45 -> p10, r45 -> p2 [p10] | CMP LOAD
321: 601 606 607 607, r3 -> p57, r45 -> p2, r44 -> p15 [p9], r49 -> p62 [p3] | CMP SUB
322: 602 607 608 608, r49 -> p62 | J JMP_IMM
323: 603 604 605 609, r3 -> p57, r0 -> p4 [p5] | MOV ADD
324: 606 608 609 610, r0 -> p4, r0 -> p14 [p4], r49 -> p1 [p62] | SHR SHR_IMM
325: 607 609 610 611, r0 -> p14, r3 -> p57, r0 -> p12 [p14], r49 -> p13 [p1] | XOR XOR
326: 608 610 611 612, r0 -> p12, r0 -> p45 [p12], r49 -> p49 [p13] | AND AND_IMM
327: 609 611 612 613, r0 -> p45, r0 -> p63 [p45], r49 -> p56 [p49] | SHL SHL_IMM
328: 610 612 615 615, r0 -> p63, r2 -> p50 [p60] | MOV LOAD
329: 611 613 614 616, r0 -> p63, r5 -> p6 [p55] | LEA LEA
330: 612 615 616 617, r2 -> p50, r2 -> p50, r44 -> p10 [p15], r49 -> p9 [p56] | TEST AND
331: 613 616 617 618, r49 -> p9 | J JMP_IMM
332: 621 622 625 625, r2 -> p50, r45 -> p3 [p2] | CMP LOAD
333: 622 625 626 626, r3 -> p57, r45 -> p3, r44 -> p5 [p10], r49 -> p4 [p9] | CMP SUB
334: 623 626 627 627, r49 -> p4 | J JMP_IMM
335: 624 627 628 628, r44 -> p62 [p5] | MOV SAVE_PC
336: 625 628 629 629, r3 -> p57, r44 -> p62 | MOV STORE
337: 626 629 630 630, r44 -> p14 [p62] | MOV SAVE_PC
338: 627 630 631 631, r2 -> p50, r44 -> p14 | MOV STORE
339: 628 631 632 632, r12 -> p54, r2 -> p50 | MOV STORE
340: 629 632 635 635, r13 -> p61, r2 -> p1 [p50] | MOV LOAD
341: 630 633 636 636, r13 -> p61, r7 -> p12 [p53] | MOV LOAD
342: 631 635 636 637, r2 -> p1, r44 -> p13 [p14], r49 -> p45 [p4] | CMP SUB_IMM
343: 632 636 637 638, r49 -> p45 | J JMP_IMM
344: 641 642 643 643, r3 -> p57, r44 -> p49 [p13], r49 -> p60 [p45] | CMP SUB_IMM
345: 642 643 644 644, r49 -> p60 | J JMP_IMM
346: 648 649 650 650, r2 -> p1, r44 -> p55 [p49], r49 -> p15 [p60] | CMP SUB_IMM
347: 649 650 651 651, r2 -> p1, r1 -> p56 [p7] | MOV ADD
348: 650 651 652 652, r3 -> p57, r8 -> p2 [p8] | MOV ADD
349: 651 652 653 653, r49 -> p15 | J JMP_IMM
350: 652 653 654 654, r44 -> p10 [p55] | MOV SAVE_PC
351: 653 654 657 657, r44 -> p10, r10 -> p9 [p58] | MOV LOAD
352: 654 655 656 658, r44 -> p5 [p10] | MOV SAVE_PC
353: 655 656 659 659, r44 -> p5, r6 -> p62 [p44] | MOV LOAD
354: 656 657 660 660, r8 -> p2, r10 -> p9, r1 -> p50 [p56] | MOV LOAD
355: 657 660 663 663, r1 -> p50, r44 -> p53 [p5] | MOVSX LOAD
356: 658 663 664 664, r44 -> p53, r0 -> p14 [p63] | MOVSX SEXT_DWORD_TO_QWORD
357: 659 664 667 667, r0 -> p14, r6 -> p62, r9 -> p4 [p0] | MOV LOAD
358: 660 661 662 668, r45 -> p13 [p3] | CMP SAVE_PC
359: 663 665 668 669, r45 -> p13, r45 -> p45 [p13] | CMP LOAD
360: 664 668 669 670, r9 -> p4, r45 -> p45, r44 -> p49 [p53], r49 -> p60 [p15] | CMP SUB
361: 667 669 670 671, r49 -> p60 | J JMP_IMM
362: 668 670 673 673, r1 -> p50, r44 -> p7 [p49] | MOVSX LOAD
363: 669 673 674 674, r44 -> p7, r0 -> p8 [p14] | MOVSX SEXT_DWORD_TO_QWORD
364: 670 674 677 677, r0 -> p8, r6 -> p62, r0 -> p55 [p8] | MOV LOAD
365: 671 672 673 678, r45 -> p58 [p45] | CMP SAVE_PC
366: 673 675 678 679, r45 -> p58, r45 -> p10 [p58] | CMP LOAD
367: 674 678 679 680, r0 -> p55, r45 -> p10, r44 -> p44 [p7], r49 -> p56 [p60] | CMP SUB
368: 677 679 680 681, r49 -> p56 | J JMP_IMM
369: 684 685 686 686, r7 -> p12, r44 -> p5 [p44], r49 -> p63 [p56] | CMP SUB_IMM
370: 685 686 687 687, r49 -> p63 | J JMP_IMM
371: 691 692 693 693, r44 -> p0 [p5] | MOV SAVE_PC
372: 692 693 696 696, r44 -> p0, r6 -> p3 [p62] | MOV LOAD
373: 693 694 695 697, r7 -> p12, r0 -> p13 [p55] | MOV ADD
374: 694 695 696 698, r0 -> p13, r0 -> p53 [p13], r49 -> p15 [p63] | SHL SHL_IMM
375: 695 696 697 699 | JMP JMP_IMM
376: 696 697 698 700, r0 -> p53, r6 -> p3, r2 -> p49 [p1] | LEA LEA
377: 697 698 699 701, r8 -> p2, r6 -> p3, r1 -> p14 [p50] | LEA LEA
378: 698 699 702 702, r2 -> p49, r0 -> p8 [p53] | MOV LOAD
379: 699 702 703 703, r0 -> p8, r1 -> p14 | MOV STORE
380: 700 701 704 704, r2 -> p49, r0 -> p45 [p8] | MOV LOAD
381: 701 704 705 705, r0 -> p45, r0 -> p45, r44 -> p58 [p0], r49 -> p7 [p15] | TEST AND
382: 702 705 706 706, r49 -> p7 | J JMP_IMM
383: 710 711 712 712, r44 -> p60 [p58] | MOV SAVE_PC
384: 711 712 715 715, r44 -> p60, r0 -> p44 [p45] | MOV LOAD
385: 712 715 716 716, r14 -> p52, r0 -> p44, r44 -> p56 [p60] | MOV LEA
386: 713 716 717 717, r3 -> p57, r44 -> p56 | MOV STORE
387: 714 717 718 718 | JMP JMP_IMM
388: 715 718 719 719, r0 -> p5 [p44] | MOV ADD_IMM
389: 716 719 720 720, r3 -> p57, r2 -> p49 | MOV STORE
390: 717 720 721 721, r7 -> p12, r1 -> p14 | MOV STORE
391: 718 721 722 722 | JMP JMP_IMM
392: 719 722 725 725, r4 -> p11, r3 -> p62 [p57] | POP LOAD
393: 720 723 724 726, r4 -> p11, r4 -> p55 [p11] | POP ADD_IMM
394: 721 724 727 727, r4 -> p55, r5 -> p13 [p6] | POP LOAD
395: 722 725 726 728, r4 -> p55, r4 -> p63 [p55] | POP ADD_IMM
396: 725 726 729 729, r4 -> p63, r12 -> p1 [p54] | POP LOAD
397: 726 727 728 730, r4 -> p63, r4 -> p50 [p63] | POP ADD_IMM
398: 727 728 731 731, r4 -> p50, r13 -> p53 [p61] | POP LOAD
399: 728 729 730 732, r4 -> p50, r4 -> p8 [p50] | POP ADD_IMM
400: 729 730 733 733, r4 -> p8, r14 -> p0 [p52] | POP LOAD
401: 730 731 732 734, r4 -> p8, r4 -> p15 [p8] | POP ADD_IMM
402: 731 732 735 735, r4 -> p15, r44 -> p58 [p56] | RET LOAD
403: 732 733 734 736, r4 -> p15, r4 -> p45 [p15] | RET ADD_IMM
404: 733 735 736 737, r44 -> p58 | RET JMP_REG
405: 734 736 737 738, r0 -> p5, r0 -> p5, r44 -> p60 [p58], r49 -> p44 [p7] | TEST AND
406: 735 737 738 739, r49 -> p44 | J JMP_IMM
407: 736 738 739 740, r12 -> p1, r7 -> p57 [p12] | MOV ADD
408: 737 739 740 741, r44 -> p11 [p60] | CALL SAVE_PC
409: 738 740 741 742, r4 -> p45, r4 -> p6 [p45] | CALL SUB_IMM
410: 739 741 742 743, r44 -> p11, r4 -> p6 | CALL STORE
411: 740 742 743 744 | CALL JMP_IMM
412: 741 743 744 745, r15 -> p59, r4 -> p6 | PUSH STORE
413: 742 744 745 746, r4 -> p6, r4 -> p55 [p6] | PUSH SUB_IMM
414: 743 745 746 747, r7 -> p57, r15 -> p54 [p59] | MOV ADD
415: 744 746 747 748, r14 -> p0, r4 -> p55 | PUSH STORE
416: 745 747 748 749, r4 -> p55, r4 -> p63 [p55] | PUSH SUB_IMM
417: 746 748 749 750, r13 -> p53, r4 -> p63 | PUSH STORE
418: 747 749 750 751, r4 -> p63, r4 -> p61 [p63] | PUSH SUB_IMM
419: 748 750 751 752, r12 -> p1, r4 -> p61 | PUSH STORE
420: 749 751 752 753, r4 -> p61, r4 -> p50 [p61] | PUSH SUB_IMM
421: 750 752 753 754, r5 -> p13, r4 -> p50 | PUSH STORE
422: 751 753 754 755, r4 -> p50, r4 -> p52 [p50] | PUSH SUB_IMM
423: 752 754 755 756, r3 -> p62, r4 -> p52 | PUSH STORE
424: 753 755 756 757, r4 -> p52, r4 -> p8 [p52] | PUSH SUB_IMM
425: 754 756 757 758, r4 -> p8, r4 -> p56 [p8], r49 -> p15 [p44] | SUB SUB_IMM
426: 755 757 760 760, r7 -> p57, r45 -> p58 [p10] | CMP LOAD
427: 756 760 761 761, r45 -> p58, r44 -> p7 [p11], r49 -> p12 [p15] | CMP SUB_IMM
428: 757 761 762 762, r49 -> p12 | J JMP_IMM
429: 758 759 762 763, r15 -> p54, r45 -> p60 [p58] | CMP LOAD
430: 760 762 763 764, r45 -> p60, r44 -> p45 [p7], r49 -> p6 [p12] | CMP SUB_IMM
431: 761 763 764 765, r49 -> p6 | J JMP_IMM
432: 768 769 772 772, r15 -> p54, r3 -> p59 [p62] | MOV LOAD
433: 769 770 771 773, r45 -> p55 [p60] | CMP SAVE_PC
434: 770 771 774 774, r45 -> p55, r45 -> p63 [p55] | CMP LOAD
435: 771 774 775 775, r3 -> p59, r45 -> p63, r44 -> p61 [p45], r49 -> p50 [p6] | CMP SUB
436: 772 775 776 776, r49 -> p50 | J JMP_IMM
437: 780 781 782 782, r44 -> p52 [p61] | MOV SAVE_PC
438: 781 782 785 785, r44 -> p52, r2 -> p8 [p49] | MOV LOAD
439: 782 785 786 786, r2 -> p8, r2 -> p8, r44 -> p44 [p52], r49 -> p10 [p50] | TEST AND
440: 783 786 787 787, r49 -> p10 | J JMP_IMM
441: 791 792 795 795, r2 -> p8, r5 -> p11 [p13] | MOV LOAD
442: 792 795 796 796, r5 -> p11, r5 -> p11, r44 -> p15 [p44], r49 -> p58 [p10] | TEST AND
443: 793 796 797 797, r49 -> p58 | J JMP_IMM
444: 801 802 803 803, r4 -> p56, r4 -> p7 [p56], r49 -> p12 [p58] | ADD ADD_IMM
445: 802 803 806 806, r4 -> p7, r3 -> p62 [p59] | POP LOAD
446: 803 804 805 807, r4 -> p7, r4 -> p60 [p7] | POP ADD_IMM
447: 804 805 808 808, r4 -> p60, r5 -> p55 [p11] | POP LOAD
448: 805 806 807 809, r4 -> p60, r4 -> p45 [p60] | POP ADD_IMM
449: 806 807 810 810, r4 -> p45, r12 -> p6 [p1] | POP LOAD
450: 807 808 809 811, r4 -> p45, r4 -> p61 [p45] | POP ADD_IMM
451: 808 809 812 812, r4 -> p61, r13 -> p49 [p53] | POP LOAD
452: 809 810 811 813, r4 -> p61, r4 -> p52 [p61] | POP ADD_IMM
453: 810 811 814 814, r4 -> p52, r14 -> p50 [p0] | POP LOAD
454: 811 812 813 815, r4 -> p52, r4 -> p13 [p52] | POP ADD_IMM
455: 812 813 816 816, r4 -> p13, r15 -> p44 [p54] | POP LOAD
456: 813 814 815 817, r4 -> p13, r4 -> p10 [p13] | POP ADD_IMM
457: 814 815 818 818, r4 -> p10, r44 -> p56 [p15] | RET LOAD
458: 815 816 817 819, r4 -> p10, r4 -> p58 [p10] | RET ADD_IMM
459: 816 818 819 820, r44 -> p56 | RET JMP_REG
460: 817 819 822 822, r12 -> p6, r45 -> p59 [p63] | CMP LOAD
461: 818 822 823 823, r45 -> p59, r44 -> p7 [p56], r49 -> p11 [p12] | CMP SUB_IMM
462: 819 823 824 824, r49 -> p11 | J JMP_IMM
463: 820 821 824 825, r12 -> p6, r3 -> p60 [p62] | MOV LOAD
464: 822 824 825 826, r3 -> p60, r44 -> p1 [p7], r49 -> p45 [p11] | CMP SUB_IMM
465: 823 825 826 827, r49 -> p45 | J JMP_IMM
466: 824 826 827 828, r45 -> p53 [p59] | CMP SAVE_PC
467: 825 827 830 830, r45 -> p53, r45 -> p61 [p53] | CMP LOAD
468: 826 830 831 831, r3 -> p60, r45 -> p61, r44 -> p0 [p1], r49 -> p52 [p45] | CMP SUB
469: 827 831 832 832, r49 -> p52 | J JMP_IMM
470: 836 837 838 838, r44 -> p54 [p0] | MOV SAVE_PC
471: 837 838 841 841, r44 -> p54, r2 -> p13 [p8] | MOV LOAD
472: 838 841 842 842, r2 -> p13, r2 -> p13, r44 -> p15 [p54], r49 -> p10 [p52] | TEST AND
473: 839 842 843 843, r49 -> p10 | J JMP_IMM
474: 847 848 851 851, r2 -> p13, r0 -> p63 [p5] | MOV LOAD
475: 848 851 852 852, r0 -> p63, r0 -> p56 [p63], r49 -> p12 [p10] | AND AND_IMM
476: 849 850 853 853, r5 -> p55, r2 -> p62 [p13] | MOV LOAD
477: 850 853 854 854, r0 -> p56, r2 -> p62 | MOV STORE
478: 851 852 853 855 | JMP JMP_IMM
479: 852 854 857 857, r14 -> p50, r45 -> p7 [p61] | CMP LOAD
480: 853 857 858 858, r45 -> p7, r44 -> p11 [p15], r49 -> p59 [p12] | CMP SUB_IMM
481: 854 858 859 859, r49 -> p59 | J JMP_IMM
482: 863 864 867 867, r5 -> p55, r0 -> p53 [p56] | MOV LOAD
483: 864 865 868 868, r12 -> p6, r44 -> p1 [p11] | MOVZX LOAD
484: 865 868 869 869, r44 -> p1, r1 -> p45 [p14] | MOVZX ZEXT_BYTE_TO_DWORD
485: 866 867 868 870, r12 -> p6, r7 -> p0 [p57] | MOV ADD
486: 867 869 872 872, r0 -> p53, r2 -> p8 [p62] | MOV LOAD
487: 868 870 873 873, r0 -> p53, r6 -> p54 [p3] | MOV LOAD
488: 869 871 872 874, r44 -> p52 [p1] | CALL SAVE_PC
489: 870 872 873 875, r4 -> p58, r4 -> p5 [p58] | CALL SUB_IMM
490: 872 873 874 876, r44 -> p52, r4 -> p5 | CALL STORE
491: 873 874 875 877 | CALL JMP_IMM
492: 874 875 876 878, r15 -> p44, r4 -> p5 | PUSH STORE
493: 875 876 877 879, r4 -> p5, r4 -> p63 [p5] | PUSH SUB_IMM
494: 876 877 878 880, r2 -> p8, r15 -> p10 [p44] | MOV ADD
495: 877 878 879 881, r14 -> p50, r4 -> p63 | PUSH STORE
496: 878 879 880 882, r4 -> p63, r4 -> p13 [p63] | PUSH SUB_IMM
497: 879 880 881 883, r6 -> p54, r14 -> p61 [p50] | MOV ADD
498: 880 881 882 884, r13 -> p49, r4 -> p13 | PUSH STORE
499: 881 882 883 885, r4 -> p13, r4 -> p15 [p13] | PUSH SUB_IMM
500: 882 883 884 886, r12 -> p6, r4 -> p15 | PUSH STORE
501: 883 884 885 887, r4 -> p15, r4 -> p12 [p15] | PUSH SUB_IMM
502: 884 885 886 888, r5 -> p55, r4 -> p12 | PUSH STORE
503: 885 886 887 889, r4 -> p12, r4 -> p56 [p12] | PUSH SUB_IMM
504: 886 887 888 890, r7 -> p0, r5 -> p11 [p55] | MOV ADD
505: 887 888 889 891, r3 -> p60, r4 -> p56 | PUSH STORE
506: 888 889 890 892, r4 -> p56, r4 -> p14 [p56] | PUSH SUB_IMM
507: 889 890 891 893, r4 -> p14, r4 -> p57 [p14], r49 -> p62 [p59] | SUB SUB_IMM
508: 890 891 894 894, r7 -> p0, r45 -> p3 [p7] | CMP LOAD
509: 891 894 895 895, r45 -> p3, r44 -> p1 [p52], r49 -> p58 [p62] | CMP SUB_IMM
510: 892 893 894 896, r1 -> p45, r4 -> p57 | MOV STORE
511: 893 895 896 897, r49 -> p58 | J JMP_IMM
512: 900 901 904 904, r7 -> p0, r3 -> p5 [p60] | MOV LOAD
513: 901 902 903 905, r45 -> p44 [p3] | CMP SAVE_PC
514: 902 903 906 906, r45 -> p44, r45 -> p63 [p44] | CMP LOAD
515: 903 906 907 907, r3 -> p5, r45 -> p63, r44 -> p50 [p1], r49 -> p13 [p58] | CMP SUB
516: 904 907 908 908, r49 -> p13 | J JMP_IMM
517: 912 913 914 914, r44 -> p15 [p50] | MOV SAVE_PC
518: 913 914 917 917, r44 -> p15, r2 -> p12 [p8] | MOV LOAD
519: 914 917 918 918, r2 -> p12, r2 -> p12, r44 -> p55 [p15], r49 -> p56 [p13] | TEST AND
520: 915 918 919 919, r49 -> p56 | J JMP_IMM
521: 923 924 927 927, r2 -> p12, r45 -> p14 [p63] | CMP LOAD
522: 924 927 928 928, r45 -> p14, r3 -> p5, r44 -> p59 [p55], r49 -> p7 [p56] | CMP SUB
523: 925 928 929 929, r49 -> p7 | J JMP_IMM
524: 926 929 932 932, r5 -> p11, r45 -> p52 [p14] | CMP LOAD
525: 927 932 933 933, r45 -> p52, r44 -> p62 [p59], r49 -> p60 [p7] | CMP SUB_IMM
526: 928 933 934 934, r49 -> p60 | J JMP_IMM
527: 929 930 931 935, r3 -> p5, r44 -> p3 [p62], r49 -> p44 [p60] | CMP SUB_IMM
528: 932 934 935 936, r49 -> p44 | J JMP_IMM
529: 939 940 941 941, r44 -> p1 [p3] | MOV SAVE_PC
530: 940 941 944 944, r44 -> p1, r13 -> p58 [p49] | MOV LOAD
531: 941 944 945 945, r13 -> p58, r13 -> p58, r44 -> p50 [p1], r49 -> p8 [p44] | TEST AND
532: 942 945 946 946, r49 -> p8 | J JMP_IMM
533: 943 946 949 949, r13 -> p58, r0 -> p15 [p53] | MOV LOAD
534: 944 947 948 950, r44 -> p13 [p50] | MOV SAVE_PC
535: 945 949 950 951, r0 -> p15, r44 -> p13 | MOV STORE
536: 946 948 949 952, r5 -> p11, r13 -> p58 | MOV STORE
537: 949 950 951 953, r13 -> p58 | MOV STORE
538: 950 951 954 954, r5 -> p11, r44 -> p63 [p13] | MOVZX LOAD
539: 951 954 955 955, r44 -> p63, r0 -> p55 [p15] | MOVZX ZEXT_WORD_TO_DWORD
540: 952 955 956 956, r0 -> p55, r44 -> p56 [p63], r49 -> p14 [p8] | CMP SUB_IMM
541: 953 956 957 957, r49 -> p14 | J JMP_IMM
542: 961 962 963 963, r0 -> p59 [p55] | XOR ADD
543: 962 963 964 964 | JMP JMP_IMM
544: 963 964 965 965, r0 -> p59, r13 -> p58 | MOV STORE
545: 964 965 966 966, r5 -> p11, r7 -> p7 [p0] | MOV ADD
546: 965 966 967 967, r44 -> p62 [p56] | CALL SAVE_PC
547: 966 967 968 968, r4 -> p57, r4 -> p60 [p57] | CALL SUB_IMM
548: 967 968 969 969, r44 -> p62, r4 -> p60 | CALL STORE
549: 968 969 970 970 | CALL JMP_IMM
550: 969 970 971 971, r12 -> p6, r4 -> p60 | PUSH STORE
551: 970 971 972 972, r4 -> p60, r4 -> p3 [p60] | PUSH SUB_IMM
552: 971 972 973 973, r5 -> p11, r4 -> p3 | PUSH STORE
553: 972 973 974 974, r4 -> p3, r4 -> p49 [p3] | PUSH SUB_IMM
554: 973 974 975 975, r5 -> p1 [p11] | XOR ADD
555: 974 975 976 976, r3 -> p5, r4 -> p49 | PUSH STORE
556: 975 976 977 977, r4 -> p49, r4 -> p44 [p49] | PUSH SUB_IMM
557: 976 977 978 978, r3 -> p53 [p5] | XOR ADD
558: 977 978 979 979, r4 -> p44, r4 -> p50 [p44], r49 -> p13 [p14] | SUB SUB_IMM
559: 978 979 980 980, r4 -> p50, r12 -> p15 [p6] | LEA LEA
560: 979 980 981 981, r7 -> p7, r4 -> p50 | MOV STORE
561: 980 981 982 982, r12 -> p15, r7 -> p63 [p7] | MOV ADD
562: 981 982 983 983, r44 -> p8 [p62] | CALL SAVE_PC
563: 982 983 984 984, r4 -> p50, r4 -> p55 [p50] | CALL SUB_IMM
564: 983 984 985 985, r44 -> p8, r4 -> p55 | CALL STORE
565: 984 985 986 986 | CALL JMP_IMM
566: 985 986 987 987, r7 -> p63, r0 -> p0 [p59] | MOV ADD
567: 986 987 988 988, r7 -> p63 | MOV STORE
568: 987 988 989 989, r7 -> p63 | MOV STORE
569: 988 989 992 992, r4 -> p55, r44 -> p56 [p8] | RET LOAD
570: 989 990 991 993, r4 -> p55, r4 -> p57 [p55] | RET ADD_IMM
571: 990 992 993 994, r44 -> p56 | RET JMP_REG
572: 991 993 994 995, r4 -> p57, r7 -> p60 [p63] | LEA LEA
573: 992 994 995 996, r12 -> p15, r2 -> p3 [p12] | MOV ADD
574: 993 995 996 997, r6 -> p11 [p54] | MOV ADD_IMM
575: 994 996 997 998, r44 -> p49 [p56] | CALL SAVE_PC
576: 995 997 998 999, r4 -> p57, r4 -> p5 [p57] | CALL SUB_IMM
577: 996 998 999 1000, r44 -> p49, r4 -> p5 | CALL STORE
578: 997 999 1000 1001 | CALL JMP_IMM
579: 998 1000 1001 1002, r15 -> p10, r4 -> p5 | PUSH STORE
580: 999 1001 1002 1003, r4 -> p5, r4 -> p44 [p5] | PUSH SUB_IMM
581: 1000 1002 1003 1004, r6 -> p11, r15 -> p14 [p10] | MOV ADD
582: 1001 1003 1004 1005, r2 -> p3, r6 -> p6 [p11] | MOV ADD
583: 1002 1004 1005 1006, r14 -> p61, r4 -> p44 | PUSH STORE
584: 1003 1005 1006 1007, r4 -> p44, r4 -> p7 [p44] | PUSH SUB_IMM
585: 1004 1006 1007 1008, r2 -> p3, r14 -> p62 [p61] | MOV ADD
586: 1005 1007 1008 1009, r13 -> p58, r4 -> p7 | PUSH STORE
587: 1006 1008 1009 1010, r4 -> p7, r4 -> p50 [p7] | PUSH SUB_IMM
588: 1007 1009 1010 1011, r12 -> p15, r4 -> p50 | PUSH STORE
589: 1008 1010 1011 1012, r4 -> p50, r4 -> p59 [p50] | PUSH SUB_IMM
590: 1009 1011 1012 1013, r5 -> p1, r4 -> p59 | PUSH STORE
591: 1010 1012 1013 1014, r4 -> p59, r4 -> p8 [p59] | PUSH SUB_IMM
592: 1011 1013 1014 1015, r3 -> p53, r4 -> p8 | PUSH STORE
593: 1012 1014 1015 1016, r4 -> p8, r4 -> p55 [p8] | PUSH SUB_IMM
594: 1013 1015 1016 1017, r4 -> p55, r4 -> p63 [p55], r49 -> p12 [p13] | SUB SUB_IMM
595: 1014 1016 1017 1018, r7 -> p60, r4 -> p63 | MOV STORE
596: 1015 1017 1018 1019, r44 -> p54 [p49] | CALL SAVE_PC
597: 1016 1018 1019 1020, r4 -> p63, r4 -> p56 [p63] | CALL SUB_IMM
598: 1017 1019 1020 1021, r44 -> p54, r4 -> p56 | CALL STORE
599: 1018 1020 1021 1022, r15 -> p14 | CALL JMP_REG
600: 1019 1021 1022 1023, r4 -> p56, r4 -> p57 [p56], r49 -> p5 [p12] | SUB SUB_IMM
601: 1020 1022 1025 1025, r7 -> p60, r0 -> p10 [p0] | MOV LOAD
602: 1021 1023 1024 1026, r6 -> p6, r2 -> p11 [p3] | MOV ADD
603: 1022 1025 1026 1027, r0 -> p10, r0 -> p10, r44 -> p44 [p54], r49 -> p61 [p5] | TEST AND
604: 1023 1026 1027 1028, r49 -> p61 | J JMP_IMM
605: 1025 1027 1030 1030, r0 -> p10, r45 -> p7 [p52] | CMP LOAD
606: 1026 1030 1031 1031, r45 -> p7, r44 -> p50 [p44], r49 -> p59 [p61] | CMP SUB_IMM
607: 1027 1031 1032 1032, r49 -> p59 | J JMP_IMM
608: 1036 1037 1040 1040, r0 -> p10, r6 -> p8 [p6] | MOV LOAD
609: 1037 1038 1039 1041, r2 -> p11, r7 -> p55 [p60] | MOV ADD
610: 1038 1039 1040 1042, r44 -> p13 [p50] | CALL SAVE_PC
611: 1039 1040 1041 1043, r4 -> p57, r4 -> p49 [p57] | CALL SUB_IMM
612: 1040 1041 1042 1044, r44 -> p13, r4 -> p49 | CALL STORE
613: 1041 1042 1043 1045 | CALL JMP_IMM
614: 1042 1043 1044 1046, r12 -> p15, r4 -> p49 | PUSH STORE
615: 1043 1044 1045 1047, r4 -> p49, r4 -> p63 [p49] | PUSH SUB_IMM
616: 1044 1045 1046 1048, r6 -> p8, r12 -> p56 [p15] | MOV ADD
617: 1045 1046 1047 1049, r12 -> p56, r12 -> p12 [p56], r49 -> p0 [p59] | SHR SHR_IMM
618: 1046 1047 1048 1050, r5 -> p1, r4 -> p63 | PUSH STORE
619: 1047 1048 1049 1051, r4 -> p63, r4 -> p3 [p63] | PUSH SUB_IMM
620: 1048 1049 1050 1052, r7 -> p55, r5 -> p54 [p1] | MOV ADD
621: 1049 1050 1051 1053, r3 -> p53, r4 -> p3 | PUSH STORE
622: 1050 1051 1052 1054, r4 -> p3, r4 -> p5 [p3] | PUSH SUB_IMM
623: 1051 1052 1055 1055, r7 -> p55, r7 -> p52 [p55] | MOV LOAD
624: 1052 1053 1054 1056, r6 -> p8, r3 -> p44 [p53] | MOV ADD
625: 1053 1055 1056 1057, r7 -> p52, r7 -> p52, r44 -> p61 [p13], r49 -> p6 [p0] | TEST AND
626: 1054 1056 1057 1058, r49 -> p6 | J JMP_IMM
627: 1061 1062 1063 1063, r44 -> p60 [p61] | MOV SAVE_PC
628: 1062 1063 1066 1066, r44 -> p60, r6 -> p50 [p8] | MOV LOAD
629: 1063 1066 1067 1067, r6 -> p50, r6 -> p50, r44 -> p57 [p60], r49 -> p49 [p6] | TEST AND
630: 1064 1067 1068 1068, r49 -> p49 | J JMP_IMM
631: 1065 1068 1071 1071, r6 -> p50, r0 -> p15 [p10] | MOV LOAD
632: 1066 1069 1070 1072, r44 -> p56 [p57] | MOV SAVE_PC
633: 1067 1071 1072 1073, r0 -> p15, r44 -> p56 | MOV STORE
634: 1068 1070 1071 1074, r3 -> p44, r2 -> p59 [p11] | MOV ADD
635: 1071 1072 1073 1075, r3 -> p44, r3 -> p63 [p44], r49 -> p1 [p49] | AND AND_IMM
636: 1072 1073 1074 1076, r0 -> p3 [p15] | MOV ADD_IMM
637: 1073 1074 1075 1077, r2 -> p59, r2 -> p55 [p59], r49 -> p53 [p1] | SHR SHR_IMM
638: 1074 1075 1076 1078, r3 -> p63, r1 -> p13 [p45] | MOV ADD
639: 1075 1076 1077 1079, r6 -> p50 | MOV STORE
640: 1076 1077 1078 1080, r6 -> p50 | MOV STORE
641: 1077 1078 1079 1081, r2 -> p55, r2 -> p0 [p55], r49 -> p61 [p53] | AND AND_IMM
642: 1078 1079 1080 1082, r0 -> p3, r1 -> p13, r0 -> p8 [p3], r49 -> p60 [p61] | SHL SHL
643: 1079 1080 1083 1083, r5 -> p54, r45 -> p6 [p7] | CMP LOAD
644: 1080 1083 1084 1084, r45 -> p6, r44 -> p10 [p56], r49 -> p57 [p60] | CMP SUB
645: 1081 1082 1083 1085, r12 -> p12, r6 -> p50 | MOV STORE
646: 1082 1084 1085 1086, r2 -> p0, r6 -> p50, r44 -> p11 [p10] | MOV LEA
647: 1083 1085 1086 1087, r0 -> p8, r44 -> p11 | MOV STORE
648: 1084 1086 1087 1088, r49 -> p57 | J JMP_IMM
649: 1091 1092 1093 1093, r6 -> p50 | MOV STORE
650: 1092 1093 1094 1094, r6 -> p50 | MOV STORE
651: 1093 1094 1095 1095, r6 -> p50, r5 -> p54 | MOV STORE
652: 1094 1095 1096 1096 | JMP JMP_IMM
653: 1095 1096 1097 1097, r6 -> p50, r5 -> p54 | MOV STORE
654: 1096 1097 1098 1098, r12 -> p12, r5 -> p54 | MOV STORE
655: 1097 1098 1101 1101, r4 -> p5, r3 -> p44 [p63] | POP LOAD
656: 1098 1099 1100 1102, r4 -> p5, r4 -> p49 [p5] | POP ADD_IMM
657: 1099 1100 1103 1103, r4 -> p49, r5 -> p15 [p54] | POP LOAD
658: 1100 1101 1102 1104, r4 -> p49, r4 -> p59 [p49] | POP ADD_IMM
659: 1101 1102 1105 1105, r4 -> p59, r12 -> p1 [p12] | POP LOAD
660: 1102 1103 1104 1106, r4 -> p59, r4 -> p45 [p59] | POP ADD_IMM
661: 1103 1104 1107 1107, r4 -> p45, r44 -> p55 [p11] | RET LOAD
662: 1104 1105 1106 1108, r4 -> p45, r4 -> p53 [p45] | RET ADD_IMM
663: 1105 1107 1108 1109, r44 -> p55 | RET JMP_REG
664: 1106 1108 1109 1110, r0 -> p3 [p8] | XOR ADD
665: 1107 1109 1110 1111, r4 -> p53, r4 -> p61 [p53], r49 -> p7 [p57] | ADD ADD_IMM
666: 1108 1110 1113 1113, r4 -> p61, r44 -> p56 [p55] | RET LOAD
667: 1109 1111 1112 1114, r4 -> p61, r4 -> p60 [p61] | RET ADD_IMM
668: 1110 1113 1114 1115, r44 -> p56 | RET JMP_REG
669: 1111 1112 1113 1116, r0 -> p3, r4 -> p60 | MOV STORE
670: 1113 1114 1115 1117, r0 -> p3, r0 -> p10 [p3], r49 -> p63 [p7] | ADD ADD_IMM
671: 1114 1115 1116 1118, r49 -> p63 | J JMP_IMM
672: 1115 1116 1119 1119, r4 -> p60, r11 -> p5 [p51] | MOV LOAD
673: 1116 1119 1120 1120, r11 -> p5, r11 -> p5, r44 -> p54 [p56], r49 -> p49 [p63] | TEST AND
674: 1117 1120 1121 1121, r49 -> p49 | J JMP_IMM
675: 1118 1121 1124 1124, r4 -> p60, r2 -> p12 [p0] | MOV LOAD
676: 1119 1124 1127 1127, r2 -> p12, r0 -> p59 [p10] | MOV LOAD
677: 1120 1127 1128 1128, r0 -> p59, r0 -> p59, r44 -> p11 [p54], r49 -> p45 [p49] | TEST AND
678: 1121 1128 1129 1129, r49 -> p45 | J JMP_IMM
679: 1124 1129 1132 1132, r0 -> p59, r44 -> p8 [p11] | MOVZX LOAD
680: 1127 1132 1133 1133, r44 -> p8, r0 -> p53 [p59] | MOVZX ZEXT_WORD_TO_DWORD
681: 1128 1133 1136 1136, r0 -> p53, r1 -> p57 [p13] | MOV LOAD
682: 1129 1134 1137 1137, r0 -> p53, r44 -> p55 [p8] | MOVZX LOAD
683: 1132 1137 1138 1138, r44 -> p55, r0 -> p61 [p53] | MOVZX ZEXT_BYTE_TO_DWORD
684: 1133 1136 1137 1139, r1 -> p57, r4 -> p60 | MOV STORE
685: 1136 1138 1139 1140, r0 -> p61, r0 -> p61, r44 -> p3 [p55], r49 -> p7 [p45] | TEST AND
686: 1137 1139 1140 1141, r49 -> p7 | J JMP_IMM
687: 1138 1140 1141 1142, r0 -> p61, r0 -> p51 [p61], r49 -> p56 [p7] | SUB SUB_IMM
688: 1139 1141 1142 1143, r4 -> p60 | MOV STORE
689: 1140 1142 1143 1144, r0 -> p51, r0 -> p63 [p51], r49 -> p0 [p56] | ADD ADD_IMM
690: 1141 1143 1144 1145, r0 -> p63, r4 -> p60 | MOV STORE
691: 1142 1144 1147 1147, r4 -> p60, r3 -> p10 [p44] | MOV LOAD
692: 1143 1145 1148 1148, r4 -> p60, r1 -> p54 [p57] | MOV LOAD
693: 1144 1146 1149 1149, r4 -> p60, r2 -> p49 [p12] | MOV LOAD
694: 1145 1148 1151 1151, r1 -> p54, r3 -> p10, r44 -> p11 [p3] | MOVZX LOAD
695: 1147 1151 1152 1152, r44 -> p11, r0 -> p59 [p63] | MOVZX ZEXT_BYTE_TO_DWORD
696: 1148 1152 1153 1153, r0 -> p59, r44 -> p13 [p11], r49 -> p8 [p0] | CMP SUB_IMM
697: 1149 1153 1154 1154, r49 -> p8 | J JMP_IMM
698: 1151 1154 1155 1155, r0 -> p59, r44 -> p53 [p13], r49 -> p55 [p8] | CMP SUB_IMM
699: 1152 1155 1156 1156, r49 -> p55 | J JMP_IMM
700: 1153 1156 1157 1157, r0 -> p59, r44 -> p45 [p53], r49 -> p61 [p55] | CMP SUB_IMM
701: 1154 1157 1158 1158, r49 -> p61 | J JMP_IMM
702: 1155 1158 1161 1161, r4 -> p60, r45 -> p7 [p6] | ADD LOAD
703: 1156 1161 1162 1162, r45 -> p7, r44 -> p51 [p45], r49 -> p56 [p61] | ADD ADD_IMM
704: 1157 1162 1163 1163, r44 -> p51, r4 -> p60 | ADD STORE
705: 1158 1159 1162 1164, r4 -> p60, r0 -> p44 [p59] | MOV LOAD
706: 1161 1163 1166 1166, r4 -> p60, r45 -> p57 [p7] | CMP LOAD
707: 1162 1166 1167 1167, r45 -> p57, r0 -> p44, r44 -> p12 [p51], r49 -> p3 [p56] | CMP SUB
708: 1163 1167 1168 1168, r49 -> p3 | J JMP_IMM
709: 1172 1173 1176 1176, r4 -> p60, r3 -> p63 [p10] | MOV LOAD
710: 1173 1174 1177 1177, r4 -> p60, r1 -> p11 [p54] | MOV LOAD
711: 1174 1175 1178 1178, r4 -> p60, r2 -> p0 [p49] | MOV LOAD
712: 1175 1177 1180 1180, r1 -> p11, r3 -> p63, r44 -> p13 [p12] | MOVZX LOAD
713: 1176 1180 1181 1181, r44 -> p13, r0 -> p8 [p44] | MOVZX ZEXT_BYTE_TO_DWORD
714: 1177 1181 1182 1182, r0 -> p8, r44 -> p53 [p13], r49 -> p55 [p3] | CMP SUB_IMM
715: 1178 1182 1183 1183, r49 -> p55 | J JMP_IMM
716: 1180 1183 1184 1184, r0 -> p8, r44 -> p6 [p53], r49 -> p45 [p55] | CMP SUB_IMM
717: 1181 1184 1185 1185, r49 -> p45 | J JMP_IMM
718: 1182 1185 1186 1186, r0 -> p8, r44 -> p61 [p6], r49 -> p59 [p45] | CMP SUB_IMM
719: 1183 1186 1187 1187, r49 -> p59 | J JMP_IMM
720: 1184 1187 1190 1190, r4 -> p60, r45 -> p7 [p57] | ADD LOAD
721: 1185 1190 1191 1191, r45 -> p7, r44 -> p51 [p61], r49 -> p56 [p59] | ADD ADD_IMM
722: 1186 1191 1192 1192, r44 -> p51, r4 -> p60 | ADD STORE
723: 1187 1188 1191 1193, r4 -> p60, r0 -> p10 [p8] | MOV LOAD
724: 1190 1192 1195 1195, r4 -> p60, r45 -> p54 [p7] | CMP LOAD
725: 1191 1195 1196 1196, r45 -> p54, r0 -> p10, r44 -> p49 [p51], r49 -> p12 [p56] | CMP SUB
726: 1192 1196 1197 1197, r49 -> p12 | J JMP_IMM
727: 1193 1194 1195 1198 | NOP NOP
728: 1195 1197 1200 1200, r4 -> p60, r0 -> p44 [p10] | MOV LOAD
729: 1196 1198 1199 1201, r4 -> p60, r4 -> p13 [p60], r49 -> p3 [p12] | ADD ADD_IMM
730: 1197 1199 1202 1202, r4 -> p13, r3 -> p53 [p63] | POP LOAD
731: 1198 1200 1201 1203, r4 -> p13, r4 -> p55 [p13] | POP ADD_IMM
732: 1200 1201 1204 1204, r4 -> p55, r5 -> p6 [p15] | POP LOAD
733: 1201 1202 1203 1205, r4 -> p55, r4 -> p45 [p55] | POP ADD_IMM
734: 1202 1203 1206 1206, r4 -> p45, r12 -> p57 [p1] | POP LOAD
735: 1203 1204 1205 1207, r4 -> p45, r4 -> p61 [p45] | POP ADD_IMM
736: 1204 1205 1208 1208, r4 -> p61, r13 -> p59 [p58] | POP LOAD
737: 1205 1206 1207 1209, r4 -> p61, r4 -> p8 [p61] | POP ADD_IMM
738: 1206 1207 1210 1210, r4 -> p8, r14 -> p7 [p62] | POP LOAD
739: 1207 1208 1209 1211, r4 -> p8, r4 -> p51 [p8] | POP ADD_IMM
740: 1208 1209 1212 1212, r4 -> p51, r15 -> p56 [p14] | POP LOAD
741: 1209 1210 1211 1213, r4 -> p51, r4 -> p10 [p51] | POP ADD_IMM
742: 1210 1211 1214 1214, r4 -> p10, r44 -> p60 [p49] | RET LOAD
743: 1211 1212 1213 1215, r4 -> p10, r4 -> p12 [p10] | RET ADD_IMM
744: 1212 1214 1215 1216, r44 -> p60 | RET JMP_REG
745: 1213 1215 1218 1218, r4 -> p12, r8 -> p63 [p2] | MOV LOAD
746: 1214 1218 1219 1219, r8 -> p63, r8 -> p63, r44 -> p13 [p60], r49 -> p15 [p3] | TEST AND
747: 1215 1219 1220 1220, r49 -> p15 | J JMP_IMM
748: 1216 1217 1218 1221, r9 -> p55 [p4] | XOR ADD
749: 1218 1220 1223 1223, r9 -> p55, r8 -> p63, r6 -> p1 [p50] | MOV LOAD
750: 1219 1221 1222 1224, r9 -> p55, r10 -> p45 [p9] | MOV ADD
751: 1220 1223 1224 1225, r6 -> p1, r6 -> p1, r44 -> p58 [p13], r49 -> p61 [p15] | TEST AND
752: 1221 1224 1225 1226, r49 -> p61 | J JMP_IMM
753: 1223 1225 1226 1227, r7 -> p62 [p52] | XOR ADD
754: 1224 1226 1227 1228, r11 -> p8 [p5] | MOV ADD_IMM
755: 1225 1227 1228 1229 | NOP NOP
756: 1226 1228 1229 1230, r7 -> p62, r1 -> p14 [p11] | MOV ADD
757: 1227 1229 1230 1231, r11 -> p8, r0 -> p51 [p44] | MOV ADD
758: 1228 1230 1231 1232, r0 -> p51, r1 -> p14, r0 -> p49 [p51], r49 -> p10 [p61] | SHL SHL
759: 1229 1231 1232 1233, r0 -> p49, r6 -> p1, r44 -> p2 [p58], r49 -> p60 [p10] | TEST AND
760: 1230 1232 1233 1234, r49 -> p60 | J JMP_IMM
761: 1231 1233 1234 1235, r0 -> p49, r0 -> p3 [p49] | NOT NOT
762: 1232 1234 1235 1236, r6 -> p1, r0 -> p3, r6 -> p4 [p1], r49 -> p50 [p60] | AND AND
763: 1233 1235 1238 1238, r8 -> p63, r0 -> p9 [p3] | MOV LOAD
764: 1234 1238 1239 1239, r0 -> p9, r10 -> p45, r0 -> p13 [p9] | LEA LEA
765: 1235 1239 1240 1240, r0 -> p13, r0 -> p15 [p13], r49 -> p52 [p50] | SHL SHL_IMM
766: 1236 1240 1241 1241, r1 -> p14, r0 -> p15, r2 -> p5 [p0] | LEA LEA
767: 1238 1241 1242 1242, r2 -> p5, r44 -> p11 [p2], r49 -> p44 [p52] | CMP SUB_IMM
768: 1239 1242 1243 1243, r49 -> p44 | J JMP_IMM
769: 1240 1243 1244 1244, r2 -> p5, r44 -> p51 [p11], r49 -> p61 [p44] | CMP SUB_IMM
770: 1241 1244 1245 1245, r49 -> p61 | J JMP_IMM
771: 1242 1245 1246 1246, r2 -> p5, r44 -> p58 [p51], r49 -> p10 [p61] | CMP SUB_IMM
772: 1243 1246 1247 1247, r49 -> p10 | J JMP_IMM
773: 1244 1247 1248 1248, r2 -> p5, r44 -> p49 [p58], r49 -> p1 [p10] | CMP SUB_IMM
774: 1245 1248 1249 1249, r49 -> p1 | J JMP_IMM
775: 1246 1249 1250 1250, r2 -> p5, r0 -> p60 [p15] | LEA LEA
776: 1247 1250 1251 1251, r0 -> p60, r44 -> p3 [p49], r49 -> p9 [p1] | CMP SUB_IMM
777: 1248 1251 1252 1252, r49 -> p9 | J JMP_IMM
778: 1249 1252 1253 1253, r2 -> p5, r44 -> p13 [p3], r49 -> p50 [p9] | CMP SUB_IMM
779: 1250 1253 1254 1254, r0 -> p0 [p60] | MOV ADD_IMM
780: 1251 1254 1255 1255, r49 -> p50 | J JMP_IMM
781: 1259 1260 1261 1261, r3 -> p53, r0 -> p0, r3 -> p2 [p53], r49 -> p52 [p50] | ADD ADD
782: 1260 1261 1262 1262, r6 -> p4, r6 -> p4, r44 -> p11 [p13], r49 -> p44 [p52] | TEST AND
783: 1261 1262 1263 1263, r49 -> p44 | J JMP_IMM
784: 1267 1268 1269 1269, r9 -> p55, r9 -> p51 [p55], r49 -> p61 [p44] | ADD ADD_IMM
785: 1268 1269 1270 1270, r9 -> p51, r44 -> p58 [p11], r49 -> p10 [p61] | CMP SUB_IMM
786: 1269 1270 1271 1271, r49 -> p10 | J JMP_IMM
787: 1275 1276 1279 1279, r9 -> p51, r8 -> p63, r6 -> p15 [p4] | MOV LOAD
788: 1276 1277 1278 1280, r9 -> p51, r10 -> p49 [p45] | MOV ADD
789: 1277 1279 1280 1281, r6 -> p15, r6 -> p15, r44 -> p1 [p58], r49 -> p3 [p10] | TEST AND
790: 1278 1280 1281 1282, r49 -> p3 | J JMP_IMM
791: 1285 1286 1287 1287, r9 -> p51, r9 -> p9 [p51], r49 -> p60 [p3] | ADD ADD_IMM
792: 1286 1287 1288 1288, r9 -> p9, r44 -> p53 [p1], r49 -> p50 [p60] | CMP SUB_IMM
793: 1287 1288 1289 1289, r49 -> p50 | J JMP_IMM
794: 1288 1289 1292 1292, r8 -> p63, r8 -> p13 [p63] | MOV LOAD
795: 1289 1292 1293 1293, r8 -> p13, r8 -> p13, r44 -> p52 [p53], r49 -> p55 [p50] | TEST AND
796: 1290 1293 1294 1294, r49 -> p55 | J JMP_IMM
797: 1291 1294 1295 1295, r12 -> p57, r7 -> p44 [p62] | MOV ADD
798: 1292 1295 1296 1296, r44 -> p11 [p52] | CALL SAVE_PC
799: 1293 1296 1297 1297, r4 -> p12, r4 -> p61 [p12] | CALL SUB_IMM
800: 1294 1297 1298 1298, r44 -> p11, r4 -> p61 | CALL STORE
801: 1295 1298 1299 1299 | CALL JMP_IMM
802: 1296 1299 1302 1302, r7 -> p44, r0 -> p4 [p0] | MOV LOAD
803: 1297 1302 1303 1303, r0 -> p4, r0 -> p4, r44 -> p45 [p11], r49 -> p58 [p55] | TEST AND
804: 1298 1303 1304 1304, r49 -> p58 | J JMP_IMM
805: 1299 1300 1301 1305, r44 -> p10 [p45] | MOV SAVE_PC
806: 1302 1304 1307 1307, r44 -> p10, r1 -> p51 [p14] | MOV LOAD
807: 1303 1305 1306 1308 | JMP JMP_IMM
808: 1304 1306 1309 1309, r0 -> p4, r2 -> p3 [p5] | MOV LOAD
809: 1305 1307 1308 1310, r1 -> p51, r0 -> p4 | MOV STORE
810: 1307 1309 1310 1311, r2 -> p3, r2 -> p3, r44 -> p1 [p10], r49 -> p60 [p58] | TEST AND
811: 1308 1310 1311 1312, r49 -> p60 | J JMP_IMM
812: 1309 1311 1312 1313, r44 -> p63 [p1] | MOV SAVE_PC
813: 1310 1312 1313 1314, r0 -> p4, r44 -> p63 | MOV STORE
814: 1311 1313 1314 1315, r7 -> p44 | MOV STORE
815: 1312 1314 1315 1316, r7 -> p44 | MOV STORE
816: 1313 1315 1318 1318, r4 -> p61, r44 -> p53 [p63] | RET LOAD
817: 1314 1316 1317 1319, r4 -> p61, r4 -> p50 [p61] | RET ADD_IMM
818: 1315 1318 1319 1320, r44 -> p53 | RET JMP_REG
819: 1316 1317 1318 1321, r5 -> p6, r5 -> p6, r44 -> p62 [p53], r49 -> p52 [p60] | TEST AND
820: 1318 1319 1320 1322, r49 -> p52 | J JMP_IMM
821: 1324 1325 1326 1326, r4 -> p50, r4 -> p12 [p50], r49 -> p0 [p52] | ADD ADD_IMM
822: 1325 1326 1327 1327, r3 -> p2, r0 -> p11 [p4] | MOV ADD
823: 1326 1327 1330 1330, r4 -> p12, r3 -> p55 [p2] | POP LOAD
824: 1327 1328 1329 1331, r4 -> p12, r4 -> p45 [p12] | POP ADD_IMM
825: 1328 1329 1332 1332, r4 -> p45, r5 -> p14 [p6] | POP LOAD
826: 1329 1330 1331 1333, r4 -> p45, r4 -> p5 [p45] | POP ADD_IMM
827: 1330 1331 1334 1334, r4 -> p5, r12 -> p10 [p57] | POP LOAD
828: 1331 1332 1333 1335, r4 -> p5, r4 -> p58 [p5] | POP ADD_IMM
829: 1332 1333 1336 1336, r4 -> p58, r44 -> p1 [p62] | RET LOAD
830: 1333 1334 1335 1337, r4 -> p58, r4 -> p63 [p58] | RET ADD_IMM
831: 1334 1336 1337 1338, r44 -> p1 | RET JMP_REG
832: 1335 1337 1338 1339, r15 -> p56, r2 -> p61 [p3] | MOV ADD
833: 1336 1338 1339 1340, r0 -> p11, r13 -> p59 | MOV STORE
834: 1337 1339 1340 1341, r13 -> p59 | MOV STORE
835: 1338 1340 1341 1342, r13 -> p59 | MOV STORE
836: 1339 1341 1344 1344, r2 -> p61, r6 -> p53 [p15] | MOV LOAD
837: 1340 1342 1343 1345, r13 -> p59 | MOV STORE
838: 1341 1343 1346 1346, r4 -> p63, r0 -> p60 [p11] | MOV LOAD
839: 1342 1344 1345 1347, r13 -> p59 | MOV STORE
840: 1344 1345 1346 1348, r13 -> p59 | MOV STORE
841: 1345 1346 1347 1349, r6 -> p53, r13 -> p59 | MOV STORE
842: 1346 1347 1348 1350, r0 -> p60, r13 -> p59 | MOV STORE
843: 1347 1348 1351 1351, r5 -> p14, r44 -> p50 [p1] | MOVZX LOAD
844: 1348 1351 1352 1352, r44 -> p50, r1 -> p52 [p51] | MOVZX ZEXT_WORD_TO_DWORD
845: 1349 1352 1353 1353, r1 -> p52, r0 -> p4 [p60] | LEA LEA
846: 1350 1353 1354 1354, r0 -> p4, r44 -> p2 [p50], r49 -> p12 [p0] | CMP SUB_IMM
847: 1351 1354 1355 1355, r49 -> p12 | J JMP_IMM
848: 1359 1360 1361 1361, r1 -> p52, r44 -> p6 [p2], r49 -> p45 [p12] | CMP SUB_IMM
849: 1360 1361 1362 1362, r49 -> p45 | J JMP_IMM
850: 1361 1362 1363 1363, r1 -> p52, r44 -> p57 [p6], r49 -> p5 [p45] | CMP SUB_IMM
851: 1362 1363 1364 1364, r49 -> p5 | J JMP_IMM
852: 1363 1364 1365 1365, r1 -> p52, r44 -> p62 [p57], r49 -> p58 [p5] | CMP SUB_IMM
853: 1364 1365 1366 1366 | NOP NOP
854: 1365 1366 1367 1367, r49 -> p58 | J JMP_IMM
855: 1366 1367 1368 1368, r1 -> p52, r44 -> p3 [p62], r49 -> p15 [p58] | CMP SUB_IMM
856: 1367 1368 1369 1369 | NOP NOP
857: 1368 1369 1370 1370, r49 -> p15 | J JMP_IMM
858: 1369 1370 1371 1371, r1 -> p52, r44 -> p11 [p3], r49 -> p1 [p15] | CMP SUB_IMM
859: 1370 1371 1372 1372, r49 -> p1 | J JMP_IMM
860: 1371 1372 1373 1373, r1 -> p52, r44 -> p51 [p11], r49 -> p60 [p1] | CMP SUB_IMM
861: 1372 1373 1374 1374, r49 -> p60 | J JMP_IMM
862: 1373 1374 1377 1377, r5 -> p14, r0 -> p50 [p4] | MOV LOAD
863: 1374 1377 1378 1378, r0 -> p50, r0 -> p0 [p50], r49 -> p2 [p60] | AND AND_IMM
864: 1375 1378 1379 1379, r0 -> p0, r44 -> p12 [p51], r49 -> p6 [p2] | CMP SUB_IMM
865: 1376 1379 1380 1380, r49 -> p6 | J JMP_IMM
866: 1377 1380 1381 1381, r44 -> p45 [p12] | MOV SAVE_PC
867: 1378 1381 1384 1384, r44 -> p45, r8 -> p57 [p13] | MOV LOAD
868: 1379 1384 1385 1385, r5 -> p14, r8 -> p57, r44 -> p5 [p45], r49 -> p62 [p6] | CMP SUB
869: 1380 1385 1386 1386, r49 -> p62 | J JMP_IMM
870: 1381 1382 1383 1387, r44 -> p58 [p5] | MOV SAVE_PC
871: 1384 1386 1389 1389, r44 -> p58, r7 -> p3 [p44] | MOV LOAD
872: 1385 1389 1390 1390, r5 -> p14, r7 -> p3, r44 -> p15 [p58], r49 -> p11 [p62] | CMP SUB
873: 1386 1390 1391 1391, r49 -> p11 | J JMP_IMM
874: 1387 1388 1389 1392, r44 -> p1 [p15] | MOV SAVE_PC
875: 1389 1391 1394 1394, r44 -> p1, r11 -> p4 [p8] | MOV LOAD
876: 1390 1394 1395 1395, r5 -> p14, r11 -> p4, r44 -> p50 [p1], r49 -> p60 [p11] | CMP SUB
877: 1391 1395 1396 1396, r49 -> p60 | J JMP_IMM
878: 1392 1393 1394 1397, r44 -> p51 [p50] | MOV SAVE_PC
879: 1394 1396 1399 1399, r44 -> p51, r9 -> p2 [p9] | MOV LOAD
880: 1395 1399 1400 1400, r5 -> p14, r9 -> p2, r44 -> p12 [p51], r49 -> p13 [p60] | CMP SUB
881: 1396 1400 1401 1401, r49 -> p13 | J JMP_IMM
882: 1397 1398 1399 1402, r44 -> p45 [p12] | MOV SAVE_PC
883: 1399 1401 1404 1404, r44 -> p45, r10 -> p6 [p49] | MOV LOAD
884: 1400 1404 1405 1405, r5 -> p14, r10 -> p6, r44 -> p5 [p45], r49 -> p44 [p13] | CMP SUB
885: 1401 1405 1406 1406, r49 -> p44 | J JMP_IMM
886: 1402 1403 1404 1407, r1 -> p52, r44 -> p58 [p5], r49 -> p62 [p44] | CMP SUB_IMM
887: 1404 1406 1407 1408, r49 -> p62 | J JMP_IMM
888: 1405 1407 1408 1409, r1 -> p52, r44 -> p15 [p58], r49 -> p8 [p62] | CMP SUB_IMM
889: 1406 1408 1409 1410, r1 -> p1 [p52] | SET ADD
890: 1407 1409 1410 1411, r49 -> p8, r1 -> p11 [p1] | SET ADD_IMM
891: 1408 1410 1411 1412 | JMP JMP_IMM
892: 1409 1411 1412 1413, r6 -> p53, r6 -> p53, r44 -> p50 [p15], r49 -> p9 [p8] | TEST AND
893: 1410 1412 1413 1414, r1 -> p11, r13 -> p59 | MOV STORE
894: 1411 1413 1414 1415, r49 -> p9 | J JMP_IMM
895: 1412 1414 1415 1416, r13 -> p59, r6 -> p53 | MOV STORE
896: 1413 1415 1416 1417, r14 -> p7, r14 -> p7, r44 -> p51 [p50], r49 -> p60 [p9] | TEST AND
897: 1414 1416 1417 1418, r2 -> p61, r44 -> p12 [p51] | MOV LEA
898: 1415 1417 1418 1419, r13 -> p59, r44 -> p12 | MOV STORE
899: 1416 1418 1419 1420, r49 -> p60 | J JMP_IMM
900: 1417 1419 1422 1422, r14 -> p7, r12 -> p49 [p10] | MOV LOAD
901: 1418 1420 1423 1423, r13 -> p59, r6 -> p45 [p53] | MOV LOAD
902: 1419 1421 1424 1424, r13 -> p59, r8 -> p13 [p57] | MOV LOAD
903: 1420 1422 1425 1425, r12 -> p49, r0 -> p5 [p0] | MOV LOAD
904: 1422 1423 1426 1426, r12 -> p49, r2 -> p44 [p61] | MOV LOAD
905: 1423 1425 1426 1427, r0 -> p5, r6 -> p45, r44 -> p58 [p12], r49 -> p62 [p60] | CMP SUB
906: 1424 1426 1427 1428, r49 -> p62 | J JMP_IMM
907: 1431 1432 1433 1433, r2 -> p44, r8 -> p13, r44 -> p52 [p58], r49 -> p1 [p62] | CMP SUB
908: 1432 1433 1434 1434, r49 -> p1 | J JMP_IMM
909: 1433 1434 1435 1435, r8 -> p13, r44 -> p15 [p52], r49 -> p8 [p1] | CMP SUB_IMM
910: 1434 1435 1436 1436, r49 -> p8 | J JMP_IMM
911: 1435 1436 1437 1437, r2 -> p44, r44 -> p50 [p15], r49 -> p9 [p8] | CMP SUB_IMM
912: 1436 1437 1438 1438, r49 -> p9 | J JMP_IMM
913: 1437 1438 1439 1439, r0 -> p5, r6 -> p45, r44 -> p51 [p50], r49 -> p10 [p9] | CMP SUB
914: 1438 1439 1440 1440 | XCHG NOP
915: 1439 1440 1441 1441, r49 -> p10 | J JMP_IMM
916: 1445 1446 1447 1447, r2 -> p44, r8 -> p13, r44 -> p53 [p51], r49 -> p57 [p10] | CMP SUB
917: 1446 1447 1448 1448 | NOP NOP
918: 1447 1448 1449 1449, r49 -> p57 | J JMP_IMM
919: 1448 1449 1450 1450, r8 -> p13, r0 -> p0 [p5] | MOV ADD
920: 1449 1450 1451 1451, r0 -> p0, r2 -> p44, r0 -> p61 [p0], r49 -> p12 [p57] | SUB SUB
921: 1450 1451 1452 1452 | NOP NOP
922: 1451 1452 1453 1453 | JMP JMP_IMM
923: 1452 1453 1454 1454, r0 -> p61, r0 -> p61, r44 -> p60 [p53], r49 -> p58 [p12] | TEST AND
924: 1453 1454 1455 1455, r49 -> p58 | J JMP_IMM
925: 1454 1455 1456 1456, r8 -> p13, r44 -> p62 [p60], r49 -> p52 [p58] | CMP SUB_IMM
926: 1455 1456 1457 1457, r49 -> p52 | J JMP_IMM
927: 1456 1457 1458 1458, r6 -> p45, r44 -> p1 [p62], r49 -> p15 [p52] | CMP SUB_IMM
928: 1457 1458 1459 1459, r49 -> p15 | J JMP_IMM
929: 1458 1459 1460 1460, r12 -> p49, r7 -> p8 [p3] | MOV ADD
930: 1459 1460 1461 1461 | JMP JMP_IMM
931: 1460 1461 1464 1464, r7 -> p8, r1 -> p50 [p11] | MOV LOAD
932: 1461 1464 1465 1465, r1 -> p50, r1 -> p50, r44 -> p9 [p1], r49 -> p51 [p15] | TEST AND
933: 1462 1465 1466 1466, r49 -> p51 | J JMP_IMM
934: 1463 1466 1469 1469, r1 -> p50, r0 -> p10 [p61] | MOV LOAD
935: 1464 1467 1470 1470, r1 -> p50, r2 -> p5 [p44] | MOV LOAD
936: 1465 1469 1470 1471, r0 -> p10, r6 -> p45, r44 -> p0 [p9], r49 -> p57 [p51] | CMP SUB
937: 1466 1470 1471 1472, r49 -> p57 | J JMP_IMM
938: 1475 1476 1477 1477, r8 -> p13, r2 -> p5, r44 -> p53 [p0], r49 -> p12 [p57] | CMP SUB
939: 1476 1477 1478 1478, r49 -> p12 | J JMP_IMM
940: 1482 1483 1484 1484, r0 -> p10, r6 -> p45, r44 -> p60 [p53], r49 -> p58 [p12] | CMP SUB
941: 1483 1484 1485 1485, r49 -> p58 | J JMP_IMM
942: 1484 1485 1486 1486, r8 -> p13, r2 -> p5, r44 -> p62 [p60], r49 -> p52 [p58] | CMP SUB
943: 1485 1486 1487 1487 | NOP NOP
944: 1486 1487 1488 1488, r49 -> p52 | J JMP_IMM
945: 1492 1493 1494 1494, r1 -> p50, r13 -> p59 | MOV STORE
946: 1493 1494 1495 1495, r13 -> p59, r1 -> p50 | MOV STORE
947: 1494 1495 1496 1496, r7 -> p8, r13 -> p59 | MOV STORE
948: 1495 1496 1497 1497, r13 -> p59, r7 -> p8 | MOV STORE
949: 1496 1497 1498 1498, r12 -> p49, r13 -> p59 | MOV STORE
950: 1497 1498 1501 1501, r13 -> p59, r45 -> p3 [p54] | CMP LOAD
951: 1498 1501 1502 1502, r45 -> p3, r44 -> p11 [p62], r49 -> p1 [p52] | CMP SUB
952: 1499 1502 1503 1503, r49 -> p1 | J JMP_IMM
953: 1507 1508 1511 1511, r5 -> p14, r45 -> p15 [p3] | CMP LOAD
954: 1508 1511 1512 1512, r45 -> p15, r44 -> p61 [p11], r49 -> p44 [p1] | CMP SUB_IMM
955: 1509 1512 1513 1513, r49 -> p44 | J JMP_IMM
956: 1510 1513 1516 1516, r5 -> p14, r3 -> p9 [p55] | MOV LOAD
957: 1511 1514 1515 1517, r45 -> p51 [p15] | CMP SAVE_PC
958: 1512 1515 1518 1518, r45 -> p51, r45 -> p0 [p51] | CMP LOAD
959: 1513 1518 1519 1519, r3 -> p9, r45 -> p0, r44 -> p57 [p61], r49 -> p53 [p44] | CMP SUB
960: 1516 1519 1520 1520, r49 -> p53 | J JMP_IMM
961: 1524 1525 1526 1526, r44 -> p12 [p57] | MOV SAVE_PC
962: 1525 1526 1529 1529, r44 -> p12, r2 -> p60 [p5] | MOV LOAD
963: 1526 1529 1530 1530, r2 -> p60, r2 -> p60, r44 -> p58 [p12], r49 -> p54 [p53] | TEST AND
964: 1527 1530 1531 1531, r49 -> p54 | J JMP_IMM
965: 1535 1536 1539 1539, r2 -> p60, r44 -> p62 [p58] | MOVSX LOAD
966: 1536 1539 1540 1540, r44 -> p62, r0 -> p52 [p10] | MOVSX SEXT_DWORD_TO_QWORD
967: 1537 1538 1539 1541, r44 -> p3 [p62] | MOV SAVE_PC
968: 1538 1540 1543 1543, r44 -> p3, r2 -> p11 [p60] | MOV LOAD
969: 1539 1541 1542 1544, r0 -> p52, r0 -> p52, r0 -> p1 [p52] | LEA LEA
970: 1540 1542 1543 1545, r0 -> p1, r0 -> p55 [p1], r49 -> p15 [p54] | SHL SHL_IMM
971: 1541 1543 1546 1546, r2 -> p11, r0 -> p55, r45 -> p51 [p0] | CMP LOAD
972: 1543 1546 1547 1547, r45 -> p51, r44 -> p61 [p3], r49 -> p44 [p15] | CMP SUB
973: 1544 1547 1548 1548, r49 -> p44 | J JMP_IMM
974: 1545 1548 1551 1551, r5 -> p14, r45 -> p57 [p51] | CMP LOAD
975: 1546 1551 1552 1552, r45 -> p57, r44 -> p5 [p61], r49 -> p12 [p44] | CMP SUB_IMM
976: 1547 1552 1553 1553, r49 -> p12 | J JMP_IMM
977: 1557 1558 1561 1561, r5 -> p14, r3 -> p53 [p9] | MOV LOAD
978: 1558 1559 1560 1562, r45 -> p58 [p57] | CMP SAVE_PC
979: 1559 1560 1563 1563, r45 -> p58, r45 -> p10 [p58] | CMP LOAD
980: 1560 1563 1564 1564, r3 -> p53, r45 -> p10, r44 -> p62 [p5], r49 -> p60 [p12] | CMP SUB
981: 1561 1564 1565 1565, r49 -> p60 | J JMP_IMM
982: 1569 1570 1571 1571, r44 -> p52 [p62] | MOV SAVE_PC
983: 1570 1571 1574 1574, r44 -> p52, r2 -> p1 [p11] | MOV LOAD
984: 1571 1574 1575 1575, r2 -> p1, r2 -> p1, r44 -> p54 [p52], r49 -> p0 [p60] | TEST AND
985: 1572 1575 1576 1576, r49 -> p0 | J JMP_IMM
986: 1580 1581 1584 1584, r2 -> p1, r44 -> p3 [p54] | MOVSX LOAD
987: 1581 1584 1585 1585, r44 -> p3, r0 -> p15 [p55] | MOVSX SEXT_DWORD_TO_QWORD
988: 1582 1583 1584 1586, r44 -> p51 [p3] | MOV SAVE_PC
989: 1583 1585 1588 1588, r44 -> p51, r6 -> p61 [p45] | MOV LOAD
990: 1584 1586 1587 1589, r0 -> p15, r0 -> p15, r0 -> p44 [p15] | LEA LEA
991: 1585 1587 1588 1590, r0 -> p44, r0 -> p9 [p44], r49 -> p57 [p0] | SHL SHL_IMM
992: 1586 1588 1591 1591, r6 -> p61, r0 -> p9, r45 -> p58 [p10] | CMP LOAD
993: 1588 1591 1592 1592, r45 -> p58, r44 -> p5 [p51], r49 -> p12 [p57] | CMP SUB
994: 1589 1592 1593 1593, r49 -> p12 | J JMP_IMM
995: 1590 1593 1596 1596, r5 -> p14, r3 -> p62 [p53] | MOV LOAD
996: 1591 1594 1595 1597, r45 -> p11 [p58] | CMP SAVE_PC
997: 1592 1595 1598 1598, r45 -> p11, r45 -> p52 [p11] | CMP LOAD
998: 1593 1598 1599 1599, r3 -> p62, r45 -> p52, r44 -> p60 [p5], r49 -> p54 [p12] | CMP SUB
999: 1596 1597 1600 1600, r5 -> p14, r44 -> p55 [p60] | MOVZX LOAD
1000: 1597 1600 1601 1601, r44 -> p55, r14 -> p3 [p7] | MOVZX ZEXT_BYTE_TO_DWORD
Processed 1000 trace records.
Micro-ops: 1000
Macro-ops: 754
TotalCycles: 1602
uIPC: 0.62422
