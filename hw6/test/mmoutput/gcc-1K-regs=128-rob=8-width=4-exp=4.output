Processing trace...
1: 0 1 2 2, r13 -> p50 [p13] | SET ADD
2: 0 1 2 2, r49 -> p49, r13 -> p51 [p50] | SET ADD_IMM
3: 0 1 4 4, r5 -> p5, r45 -> p52 [p45] | CMP LOAD
4: 0 4 5 5, r45 -> p52, r3 -> p3, r44 -> p53 [p44], r49 -> p54 [p49] | CMP SUB
5: 1 2 5 5, r5 -> p5, r3 -> p55 [p3] | MOV LOAD
6: 1 2 3 5, r0 -> p56 [p0] | SET ADD
7: 1 5 6 6, r49 -> p54, r0 -> p57 [p56] | SET ADD_IMM
8: 1 2 3 6, r12 -> p58 [p12] | XOR ADD
9: 2 6 7 7, r13 -> p51, r0 -> p57, r13 -> p59 [p51], r49 -> p60 [p54] | OR OR
10: 2 3 4 7 | JMP JMP_IMM
11: 4 5 8 8, r3 -> p55, r0 -> p61 [p57] | MOV LOAD
12: 5 8 9 9, r0 -> p61, r0 -> p61, r44 -> p62 [p53], r49 -> p63 [p60] | TEST AND
13: 5 9 10 10, r49 -> p63 | J JMP_IMM
14: 5 8 11 11, r0 -> p61, r7 -> p64 [p7] | MOV LOAD
15: 6 11 14 14, r7 -> p64, r44 -> p65 [p62] | MOVZX LOAD
16: 6 14 15 15, r44 -> p65, r0 -> p66 [p61] | MOVZX ZEXT_WORD_TO_DWORD
17: 7 15 16 16, r0 -> p66, r44 -> p67 [p65], r49 -> p68 [p63] | CMP SUB_IMM
18: 7 16 17 17, r49 -> p68 | J JMP_IMM
19: 8 9 10 17, r6 -> p69 [p6] | XOR ADD
20: 9 10 11 17, r44 -> p70 [p67] | CALL SAVE_PC
21: 10 11 12 17, r4 -> p4, r4 -> p71 [p4] | CALL SUB_IMM
22: 11 12 13 18, r44 -> p70, r4 -> p71 | CALL STORE
23: 14 15 16 18 | CALL JMP_IMM
24: 15 16 17 18, r15 -> p15, r4 -> p71 | PUSH STORE
25: 16 17 18 18, r4 -> p71, r4 -> p72 [p71] | PUSH SUB_IMM
26: 17 18 19 19, r14 -> p14, r4 -> p72 | PUSH STORE
27: 17 18 19 19, r4 -> p72, r4 -> p73 [p72] | PUSH SUB_IMM
28: 17 19 20 20, r13 -> p59, r4 -> p73 | PUSH STORE
29: 17 19 20 20, r4 -> p73, r4 -> p74 [p73] | PUSH SUB_IMM
30: 18 19 20 20, r7 -> p64, r13 -> p75 [p59] | MOV ADD
31: 18 20 21 21, r12 -> p58, r4 -> p74 | PUSH STORE
32: 18 20 21 21, r4 -> p74, r4 -> p76 [p74] | PUSH SUB_IMM
33: 18 19 20 21, r6 -> p69, r12 -> p77 [p58] | MOV ADD
34: 19 21 22 22, r5 -> p5, r4 -> p76 | PUSH STORE
35: 19 21 22 22, r4 -> p76, r4 -> p78 [p76] | PUSH SUB_IMM
36: 20 22 23 23, r3 -> p55, r4 -> p78 | PUSH STORE
37: 20 22 23 23, r4 -> p78, r4 -> p79 [p78] | PUSH SUB_IMM
38: 20 23 24 24, r4 -> p79, r4 -> p80 [p79], r49 -> p81 [p68] | SUB SUB_IMM
39: 21 22 25 25, r7 -> p64, r44 -> p82 [p70] | MOVZX LOAD
40: 21 25 26 26, r44 -> p82, r0 -> p83 [p66] | MOVZX ZEXT_WORD_TO_DWORD
41: 21 26 27 27, r0 -> p83, r44 -> p84 [p82], r49 -> p85 [p81] | CMP SUB_IMM
42: 22 27 28 28, r49 -> p85 | J JMP_IMM
43: 32 33 36 36, r7 -> p64, r5 -> p86 [p5] | MOV LOAD
44: 32 36 37 37, r5 -> p86, r44 -> p87 [p84], r49 -> p88 [p85] | CMP SUB_IMM
45: 32 37 38 38, r49 -> p88 | J JMP_IMM
46: 32 33 34 38, r45 -> p89 [p52] | CMP SAVE_PC
47: 33 34 37 38, r45 -> p89, r45 -> p90 [p89] | CMP LOAD
48: 33 37 38 38, r5 -> p86, r45 -> p90, r44 -> p91 [p87], r49 -> p92 [p88] | CMP SUB
49: 33 38 39 39, r49 -> p92 | J JMP_IMM
50: 43 44 45 45, r44 -> p93 [p91] | MOV SAVE_PC
51: 43 45 48 48, r44 -> p93, r2 -> p94 [p2] | MOV LOAD
52: 43 48 49 49, r2 -> p94, r2 -> p94, r44 -> p95 [p93], r49 -> p96 [p92] | TEST AND
53: 43 49 50 50, r49 -> p96 | J JMP_IMM
54: 54 55 58 58, r2 -> p94, r12 -> p97 [p77] | MOV LOAD
55: 54 58 59 59, r12 -> p97, r12 -> p98 [p97], r49 -> p99 [p96] | AND AND_IMM
56: 54 55 56 59, r45 -> p100 [p90] | CMP SAVE_PC
57: 54 56 59 59, r45 -> p100, r45 -> p101 [p100] | CMP LOAD
58: 55 59 60 60, r5 -> p86, r45 -> p101, r44 -> p102 [p95], r49 -> p103 [p99] | CMP SUB
59: 55 60 61 61, r49 -> p103 | J JMP_IMM
60: 65 66 67 67, r44 -> p104 [p102] | MOV SAVE_PC
61: 65 67 70 70, r44 -> p104, r2 -> p105 [p94] | MOV LOAD
62: 65 70 71 71, r2 -> p105, r2 -> p105, r44 -> p106 [p104], r49 -> p107 [p103] | TEST AND
63: 65 71 72 72, r49 -> p107 | J JMP_IMM
64: 76 77 80 80, r2 -> p105, r0 -> p108 [p83] | MOV LOAD
65: 76 80 81 81, r5 -> p86, r0 -> p108, r44 -> p109 [p106], r49 -> p110 [p107] | CMP SUB
66: 76 81 82 82, r49 -> p110 | J JMP_IMM
67: 86 87 88 88, r45 -> p111 [p101] | CMP SAVE_PC
68: 86 88 91 91, r45 -> p111, r45 -> p112 [p111] | CMP LOAD
69: 86 91 92 92, r5 -> p86, r45 -> p112, r44 -> p113 [p109], r49 -> p114 [p110] | CMP SUB
70: 86 92 93 93, r49 -> p114 | J JMP_IMM
71: 97 98 99 99, r44 -> p115 [p113] | MOV SAVE_PC
72: 97 99 102 102, r44 -> p115, r2 -> p116 [p105] | MOV LOAD
73: 97 102 103 103, r2 -> p116, r2 -> p116, r44 -> p117 [p115], r49 -> p118 [p114] | TEST AND
74: 97 103 104 104, r49 -> p118 | J JMP_IMM
75: 108 109 112 112, r2 -> p116, r45 -> p119 [p112] | ADD LOAD
76: 108 112 113 113, r45 -> p119, r44 -> p120 [p117], r49 -> p121 [p118] | ADD ADD_IMM
77: 108 113 114 114, r44 -> p120, r2 -> p116 | ADD STORE
78: 108 109 110 114, r5 -> p86, r44 -> p122 [p120], r49 -> p123 [p121] | CMP SUB_IMM
79: 109 110 111 114, r12 -> p98, r12 -> p124 [p98] | MOV ADD
80: 109 110 111 114, r49 -> p123 | J JMP_IMM
81: 115 116 119 119, r13 -> p75, r45 -> p125 [p119] | CMP LOAD
82: 115 119 120 120, r45 -> p125, r44 -> p126 [p122], r49 -> p127 [p123] | CMP SUB_IMM
83: 115 116 119 120, r13 -> p75, r44 -> p13 [p126] | MOVZX LOAD
84: 115 119 120 120, r44 -> p13, r5 -> p50 [p86] | MOVZX ZEXT_BYTE_TO_DWORD
85: 116 120 121 121, r49 -> p127 | J JMP_IMM
86: 125 126 129 129, r12 -> p124, r3 -> p45 [p55] | MOV LOAD
87: 125 126 129 129, r13 -> p75, r2 -> p44 [p116] | MOV LOAD
88: 125 129 130 130, r3 -> p45, r3 -> p45, r44 -> p49 [p13], r49 -> p3 [p127] | TEST AND
89: 125 130 131 131, r49 -> p3 | J JMP_IMM
90: 135 136 139 139, r3 -> p45, r0 -> p0 [p108] | MOV LOAD
91: 135 139 142 142, r0 -> p0, r45 -> p56 [p125] | CMP LOAD
92: 135 142 143 143, r45 -> p56, r44 -> p12 [p49], r49 -> p51 [p3] | CMP SUB_IMM
93: 135 143 144 144, r49 -> p51 | J JMP_IMM
94: 148 149 152 152, r3 -> p45, r3 -> p54 [p45] | MOV LOAD
95: 148 152 153 153, r3 -> p54, r3 -> p54, r44 -> p57 [p12], r49 -> p53 [p51] | TEST AND
96: 148 153 154 154, r49 -> p53 | J JMP_IMM
97: 158 159 160 160, r4 -> p80, r4 -> p60 [p80], r49 -> p7 [p53] | ADD ADD_IMM
98: 158 160 163 163, r4 -> p60, r3 -> p62 [p54] | POP LOAD
99: 158 160 161 163, r4 -> p60, r4 -> p61 [p60] | POP ADD_IMM
100: 158 161 164 164, r4 -> p61, r5 -> p65 [p50] | POP LOAD
101: 159 161 162 164, r4 -> p61, r4 -> p63 [p61] | POP ADD_IMM
102: 159 162 165 165, r4 -> p63, r12 -> p6 [p124] | POP LOAD
103: 159 162 163 165, r4 -> p63, r4 -> p67 [p63] | POP ADD_IMM
104: 159 163 166 166, r4 -> p67, r13 -> p4 [p75] | POP LOAD
105: 160 163 164 166, r4 -> p67, r4 -> p71 [p67] | POP ADD_IMM
106: 163 164 167 167, r4 -> p71, r14 -> p72 [p14] | POP LOAD
107: 163 164 165 167, r4 -> p71, r4 -> p73 [p71] | POP ADD_IMM
108: 164 165 168 168, r4 -> p73, r15 -> p59 [p15] | POP LOAD
109: 164 165 166 168, r4 -> p73, r4 -> p74 [p73] | POP ADD_IMM
110: 165 166 169 169, r4 -> p74, r44 -> p58 [p57] | RET LOAD
111: 165 166 167 169, r4 -> p74, r4 -> p76 [p74] | RET ADD_IMM
112: 166 169 170 170, r44 -> p58 | RET JMP_REG
113: 166 167 168 170 | JMP JMP_IMM
114: 167 168 169 170, r12 -> p6, r12 -> p78 [p6], r49 -> p79 [p7] | ADD ADD_IMM
115: 167 168 169 170, r3 -> p62, r3 -> p68 [p62], r49 -> p70 [p79] | ADD ADD_IMM
116: 168 169 172 172, r5 -> p65, r45 -> p66 [p56] | CMP LOAD
117: 168 172 173 173, r12 -> p78, r45 -> p66, r44 -> p82 [p58], r49 -> p81 [p70] | CMP SUB
118: 169 173 174 174, r49 -> p81 | J JMP_IMM
119: 178 179 182 182, r5 -> p65, r0 -> p5 [p0] | MOV LOAD
120: 178 182 185 185, r0 -> p5, r45 -> p84 [p66] | CMP LOAD
121: 178 185 186 186, r45 -> p84, r44 -> p85 [p82], r49 -> p52 [p81] | CMP SUB_IMM
122: 178 186 187 187, r49 -> p52 | J JMP_IMM
123: 191 192 195 195, r0 -> p5, r0 -> p89 [p5] | MOV LOAD
124: 191 195 198 198, r0 -> p89, r0 -> p87 [p89] | MOV LOAD
125: 191 198 199 199, r0 -> p87, r0 -> p88 [p87], r49 -> p91 [p52] | AND AND_IMM
126: 191 199 200 200, r0 -> p88, r44 -> p2 [p85], r49 -> p93 [p91] | CMP SUB_IMM
127: 192 200 201 201, r49 -> p93 | J JMP_IMM
128: 205 206 209 209, r5 -> p65, r11 -> p92 [p11] | MOV LOAD
129: 205 209 210 210, r11 -> p92, r11 -> p92, r44 -> p77 [p2], r49 -> p97 [p93] | TEST AND
130: 205 210 211 211, r49 -> p97 | J JMP_IMM
131: 205 206 209 211, r5 -> p65, r1 -> p96 [p1] | MOV LOAD
132: 206 207 208 211, r5 -> p65 | MOV STORE
133: 206 209 210 211, r1 -> p96, r5 -> p65 | MOV STORE
134: 206 207 208 212 | JMP JMP_IMM
135: 206 210 213 213, r5 -> p65, r3 -> p90 [p68] | MOV LOAD
136: 209 213 216 216, r3 -> p90, r0 -> p100 [p88] | MOV LOAD
137: 210 216 217 217, r0 -> p100, r0 -> p100, r44 -> p95 [p77], r49 -> p99 [p97] | TEST AND
138: 211 217 218 218, r49 -> p99 | J JMP_IMM
139: 211 216 219 219, r0 -> p100, r7 -> p102 [p64] | MOV LOAD
140: 211 219 222 222, r7 -> p102, r45 -> p94 [p84] | CMP LOAD
141: 211 222 223 223, r45 -> p94, r44 -> p104 [p95], r49 -> p103 [p99] | CMP SUB_IMM
142: 212 223 224 224, r49 -> p103 | J JMP_IMM
143: 213 219 222 224, r7 -> p102, r1 -> p83 [p96] | MOV LOAD
144: 216 222 223 224, r1 -> p83, r44 -> p106 [p104], r49 -> p107 [p103] | CMP SUB_IMM
145: 217 223 224 224, r49 -> p107 | J JMP_IMM
146: 228 229 230 230, r0 -> p101 [p100] | MOV ADD_IMM
147: 228 229 230 230 | JMP JMP_IMM
148: 228 230 231 231, r0 -> p101, r1 -> p83, r0 -> p111 [p101], r49 -> p109 [p107] | ADD ADD
149: 228 231 232 232, r1 -> p83, r0 -> p111, r44 -> p110 [p106], r49 -> p113 [p109] | CMP SUB
150: 229 232 233 233, r49 -> p113 | J JMP_IMM
151: 229 230 231 233, r1 -> p83, r13 -> p105 [p4] | MOV ADD
152: 229 230 231 233, r45 -> p115 [p94] | CMP SAVE_PC
153: 229 231 234 234, r45 -> p115, r45 -> p114 [p115] | CMP LOAD
154: 230 234 235 235, r45 -> p114, r13 -> p105, r44 -> p112 [p110], r49 -> p117 [p113] | CMP SUB
155: 230 231 232 235, r0 -> p111, r5 -> p65 | MOV STORE
156: 231 235 236 236, r49 -> p117 | J JMP_IMM
157: 240 241 242 242, r44 -> p118 [p112] | MOV SAVE_PC
158: 240 242 245 245, r44 -> p118, r2 -> p120 [p44] | MOV LOAD
159: 240 245 246 246, r2 -> p120, r2 -> p120, r44 -> p121 [p118], r49 -> p98 [p117] | TEST AND
160: 240 246 247 247, r49 -> p98 | J JMP_IMM
161: 251 252 255 255, r2 -> p120, r10 -> p119 [p10] | MOV LOAD
162: 251 255 256 256, r10 -> p119, r10 -> p119, r44 -> p122 [p121], r49 -> p123 [p98] | TEST AND
163: 251 256 257 257, r49 -> p123 | J JMP_IMM
164: 261 262 263 263, r13 -> p105, r13 -> p126 [p105], r49 -> p86 [p123] | ADD ADD_IMM
165: 261 262 265 265, r5 -> p65, r45 -> p55 [p114] | CMP LOAD
166: 261 265 266 266, r45 -> p55, r13 -> p126, r44 -> p116 [p122], r49 -> p13 [p86] | CMP SUB
167: 261 266 267 267, r49 -> p13 | J JMP_IMM
168: 271 272 275 275, r5 -> p65, r45 -> p127 [p55] | ADD LOAD
169: 271 275 276 276, r45 -> p127, r44 -> p108 [p116], r49 -> p125 [p13] | ADD ADD_IMM
170: 271 276 277 277, r44 -> p108, r5 -> p65 | ADD STORE
171: 271 272 275 277, r5 -> p65, r45 -> p49 [p127] | ADD LOAD
172: 272 275 276 277, r45 -> p49, r44 -> p3 [p108], r49 -> p45 [p125] | ADD ADD_IMM
173: 272 276 277 277, r44 -> p3, r5 -> p65 | ADD STORE
174: 272 273 276 278, r5 -> p65, r0 -> p12 [p111] | MOV LOAD
175: 272 277 280 280, r5 -> p65, r45 -> p51 [p49] | CMP LOAD
176: 275 280 281 281, r45 -> p51, r0 -> p12, r44 -> p80 [p3], r49 -> p53 [p45] | CMP SUB
177: 276 281 282 282, r49 -> p53 | J JMP_IMM
178: 286 287 290 290, r5 -> p65, r1 -> p54 [p83] | MOV LOAD
179: 286 287 288 290, r6 -> p60 [p69] | XOR ADD
180: 286 287 288 290 | XCHG NOP
181: 286 287 288 290 | JMP JMP_IMM
182: 287 290 293 293, r1 -> p54, r45 -> p50 [p51] | CMP LOAD
183: 287 293 294 294, r45 -> p50, r44 -> p61 [p80], r49 -> p124 [p53] | CMP SUB
184: 287 294 295 295, r49 -> p124 | J JMP_IMM
185: 287 290 293 295, r1 -> p54, r0 -> p63 [p12] | MOV LOAD
186: 290 293 294 295, r0 -> p63, r0 -> p63, r44 -> p75 [p61], r49 -> p67 [p124] | TEST AND
187: 290 294 295 295, r49 -> p67 | J JMP_IMM
188: 290 293 296 296, r0 -> p63, r45 -> p14 [p50] | CMP LOAD
189: 290 296 297 297, r45 -> p14, r44 -> p71 [p75], r49 -> p15 [p67] | CMP SUB
190: 293 297 298 298, r49 -> p15 | J JMP_IMM
191: 302 303 304 304, r6 -> p60, r6 -> p73 [p60], r49 -> p57 [p15] | ADD ADD_IMM
192: 302 303 304 304, r1 -> p54, r1 -> p74 [p54], r49 -> p6 [p57] | ADD ADD_IMM
193: 302 303 306 306, r5 -> p65, r45 -> p7 [p14] | CMP LOAD
194: 302 306 307 307, r6 -> p73, r45 -> p7, r44 -> p62 [p71], r49 -> p79 [p6] | CMP SUB
195: 303 307 308 308, r49 -> p79 | J JMP_IMM
196: 312 313 316 316, r5 -> p65, r1 -> p56 [p74] | MOV LOAD
197: 312 313 314 316, r5 -> p65 | MOV STORE
198: 312 316 317 317, r1 -> p56, r5 -> p65 | MOV STORE
199: 312 313 314 317 | JMP JMP_IMM
200: 313 317 320 320, r5 -> p65, r2 -> p58 [p120] | MOV LOAD
201: 313 320 323 323, r2 -> p58, r0 -> p70 [p63] | MOV LOAD
202: 313 323 324 324, r0 -> p70, r0 -> p70, r44 -> p0 [p62], r49 -> p66 [p79] | TEST AND
203: 313 324 325 325, r49 -> p66 | J JMP_IMM
204: 316 317 318 325, r44 -> p82 [p0] | MOV SAVE_PC
205: 316 318 321 325, r44 -> p82, r9 -> p81 [p9] | MOV LOAD
206: 317 323 326 326, r0 -> p70, r12 -> p5 [p78] | MOV LOAD
207: 317 320 323 326, r2 -> p58, r14 -> p89 [p72] | MOV LOAD
208: 320 321 322 326, r9 -> p81, r9 -> p81, r44 -> p87 [p82], r49 -> p52 [p66] | TEST AND
209: 323 324 325 326, r49 -> p52 | J JMP_IMM
210: 329 330 333 333, r12 -> p5, r44 -> p85 [p87] | MOVZX LOAD
211: 329 333 334 334, r44 -> p85, r2 -> p91 [p58] | MOVZX ZEXT_BYTE_TO_DWORD
212: 329 334 335 335, r2 -> p91, r44 -> p11 [p85], r49 -> p2 [p52] | CMP SUB_IMM
213: 329 335 336 336, r49 -> p2 | J JMP_IMM
214: 330 331 334 336, r5 -> p65, r45 -> p93 [p7] | CMP LOAD
215: 330 334 335 336, r45 -> p93, r44 -> p1 [p11], r49 -> p68 [p2] | CMP SUB
216: 330 335 336 336, r49 -> p68 | J JMP_IMM
217: 340 341 344 344, r5 -> p65, r1 -> p88 [p56] | MOV LOAD
218: 340 344 347 347, r1 -> p88, r6 -> p77 [p73] | MOV LOAD
219: 340 347 348 348, r6 -> p77, r6 -> p77, r44 -> p97 [p1], r49 -> p64 [p68] | TEST AND
220: 340 341 342 348 | NOP NOP
221: 341 348 349 349, r49 -> p64 | J JMP_IMM
222: 341 342 345 349, r12 -> p5, r44 -> p84 [p97] | MOVZX LOAD
223: 341 345 346 349, r44 -> p84, r0 -> p95 [p70] | MOVZX ZEXT_WORD_TO_DWORD
224: 341 346 347 349, r0 -> p95, r44 -> p99 [p84], r49 -> p96 [p64] | CMP SUB_IMM
225: 344 347 348 350, r49 -> p96 | J JMP_IMM
226: 347 348 349 350, r0 -> p95, r44 -> p104 [p99], r49 -> p103 [p96] | CMP SUB_IMM
227: 348 349 350 350, r49 -> p103 | J JMP_IMM
228: 354 355 356 356, r0 -> p95, r44 -> p100 [p104], r49 -> p101 [p103] | CMP SUB_IMM
229: 354 356 357 357, r49 -> p101 | J JMP_IMM
230: 361 362 363 363, r2 -> p107 [p91] | MOV ADD_IMM
231: 361 362 363 363, r12 -> p5, r7 -> p106 [p102] | MOV ADD
232: 361 362 363 363, r44 -> p109 [p100] | CALL SAVE_PC
233: 361 362 363 363, r4 -> p76, r4 -> p4 [p76] | CALL SUB_IMM
234: 362 363 364 364, r44 -> p109, r4 -> p4 | CALL STORE
235: 362 363 364 364 | CALL JMP_IMM
236: 362 363 364 364, r14 -> p89, r4 -> p4 | PUSH STORE
237: 362 363 364 364, r4 -> p4, r4 -> p94 [p4] | PUSH SUB_IMM
238: 363 364 365 365, r2 -> p107, r14 -> p115 [p89] | MOV ADD
239: 363 364 365 365, r13 -> p126, r4 -> p94 | PUSH STORE
240: 363 364 365 365, r4 -> p94, r4 -> p110 [p94] | PUSH SUB_IMM
241: 363 364 365 365, r6 -> p77, r13 -> p113 [p126] | MOV ADD
242: 364 365 366 366, r12 -> p5, r4 -> p110 | PUSH STORE
243: 364 365 366 366, r4 -> p110, r4 -> p112 [p110] | PUSH SUB_IMM
244: 364 366 367 367, r5 -> p65, r4 -> p112 | PUSH STORE
245: 364 366 367 367, r4 -> p112, r4 -> p44 [p112] | PUSH SUB_IMM
246: 365 366 367 367, r7 -> p106, r5 -> p118 [p65] | MOV ADD
247: 365 367 368 368, r3 -> p90, r4 -> p44 | PUSH STORE
248: 365 367 368 368, r4 -> p44, r4 -> p117 [p44] | PUSH SUB_IMM
249: 365 366 369 369, r7 -> p106, r44 -> p10 [p109] | MOVZX LOAD
250: 366 369 370 370, r44 -> p10, r0 -> p121 [p95] | MOVZX ZEXT_WORD_TO_DWORD
251: 366 370 371 371, r0 -> p121, r44 -> p98 [p10], r49 -> p105 [p101] | CMP SUB_IMM
252: 367 371 372 372, r49 -> p105 | J JMP_IMM
253: 376 377 380 380, r7 -> p106, r3 -> p123 [p90] | MOV LOAD
254: 376 377 378 380, r45 -> p114 [p93] | CMP SAVE_PC
255: 376 378 381 381, r45 -> p114, r45 -> p122 [p114] | CMP LOAD
256: 376 381 382 382, r3 -> p123, r45 -> p122, r44 -> p86 [p98], r49 -> p55 [p105] | CMP SUB
257: 377 382 383 383, r49 -> p55 | J JMP_IMM
258: 387 388 389 389, r44 -> p116 [p86] | MOV SAVE_PC
259: 387 389 392 392, r44 -> p116, r2 -> p13 [p107] | MOV LOAD
260: 387 392 393 393, r2 -> p13, r2 -> p13, r44 -> p127 [p116], r49 -> p108 [p55] | TEST AND
261: 387 393 394 394, r49 -> p108 | J JMP_IMM
262: 398 399 402 402, r2 -> p13, r45 -> p125 [p122] | CMP LOAD
263: 398 402 403 403, r45 -> p125, r3 -> p123, r44 -> p111 [p127], r49 -> p49 [p108] | CMP SUB
264: 398 403 404 404, r49 -> p49 | J JMP_IMM
265: 408 409 410 410, r13 -> p113, r13 -> p113, r44 -> p3 [p111], r49 -> p45 [p49] | TEST AND
266: 408 410 411 411, r49 -> p45 | J JMP_IMM
267: 408 409 412 412, r13 -> p113, r1 -> p83 [p88] | MOV LOAD
268: 408 412 413 413, r1 -> p83, r1 -> p83, r44 -> p69 [p3], r49 -> p51 [p45] | TEST AND
269: 409 413 414 414, r49 -> p51 | J JMP_IMM
270: 418 419 422 422, r1 -> p83, r2 -> p80 [p13] | MOV LOAD
271: 418 422 425 425, r2 -> p80, r45 -> p53 [p125] | CMP LOAD
272: 418 425 426 426, r45 -> p53, r44 -> p12 [p69], r49 -> p61 [p51] | CMP SUB_IMM
273: 418 426 427 427, r49 -> p61 | J JMP_IMM
274: 431 432 435 435, r1 -> p83, r1 -> p124 [p83] | MOV LOAD
275: 431 435 436 436, r1 -> p124, r1 -> p124, r44 -> p50 [p12], r49 -> p75 [p61] | TEST AND
276: 431 436 437 437, r49 -> p75 | J JMP_IMM
277: 431 435 438 438, r1 -> p124, r2 -> p67 [p80] | MOV LOAD
278: 432 438 441 441, r2 -> p67, r45 -> p60 [p53] | CMP LOAD
279: 432 441 442 442, r45 -> p60, r44 -> p15 [p50], r49 -> p54 [p75] | CMP SUB_IMM
280: 432 442 443 443, r49 -> p54 | J JMP_IMM
281: 432 438 441 443, r2 -> p67, r44 -> p57 [p15] | MOVZX LOAD
282: 435 441 442 443, r44 -> p57, r0 -> p14 [p121] | MOVZX ZEXT_BYTE_TO_DWORD
283: 436 437 440 443, r5 -> p118, r45 -> p71 [p60] | CMP LOAD
284: 437 442 443 444, r0 -> p14, r45 -> p71, r44 -> p6 [p57], r49 -> p74 [p54] | CMP SUB
285: 438 443 444 444, r49 -> p74 | J JMP_IMM
286: 441 442 445 445, r2 -> p67, r5 -> p120 [p118] | MOV LOAD
287: 442 443 444 445, r45 -> p63 [p71] | CMP SAVE_PC
288: 443 444 447 447, r45 -> p63, r45 -> p62 [p63] | CMP LOAD
289: 443 447 448 448, r5 -> p120, r45 -> p62, r44 -> p79 [p6], r49 -> p0 [p74] | CMP SUB
290: 443 448 449 449, r49 -> p0 | J JMP_IMM
291: 443 445 446 449, r5 -> p120, r0 -> p9 [p14] | MOV ADD
292: 444 446 447 449, r0 -> p9, r0 -> p78 [p9], r49 -> p72 [p0] | SHR SHR_IMM
293: 444 447 448 449, r0 -> p78, r5 -> p120, r0 -> p82 [p78], r49 -> p66 [p72] | XOR XOR
294: 445 448 449 450, r0 -> p82, r0 -> p87 [p82], r49 -> p58 [p66] | AND AND_IMM
295: 445 449 450 450, r0 -> p87, r0 -> p85 [p87], r49 -> p52 [p58] | SHL SHL_IMM
296: 447 450 453 453, r0 -> p85, r2 -> p7 [p67] | MOV LOAD
297: 448 450 451 453, r0 -> p85, r12 -> p11 [p5] | LEA LEA
298: 449 453 454 454, r2 -> p7, r2 -> p7, r44 -> p2 [p79], r49 -> p56 [p52] | TEST AND
299: 449 454 455 455, r49 -> p56 | J JMP_IMM
300: 449 453 456 456, r2 -> p7, r45 -> p73 [p62] | CMP LOAD
301: 449 456 457 457, r45 -> p73, r5 -> p120, r44 -> p1 [p2], r49 -> p68 [p56] | CMP SUB
302: 450 457 458 458, r49 -> p68 | J JMP_IMM
303: 450 451 452 458 | JMP JMP_IMM
304: 453 454 457 458, r2 -> p7, r12 -> p97 [p11] | MOV LOAD
305: 453 454 455 458, r44 -> p70 [p1] | MOV SAVE_PC
306: 454 455 456 459, r5 -> p120, r44 -> p70 | MOV STORE
307: 455 456 457 459, r44 -> p84 [p70] | MOV SAVE_PC
308: 456 457 458 459, r2 -> p7, r44 -> p84 | MOV STORE
309: 457 458 459 459, r12 -> p97, r0 -> p64 [p85] | MOVSX SEXT_DWORD_TO_QWORD
310: 458 459 460 460, r0 -> p64, r0 -> p64, r14 -> p99 [p115] | LEA LEA
311: 458 460 461 461, r14 -> p99, r14 -> p96 [p99], r49 -> p104 [p68] | SHL SHL_IMM
312: 458 461 462 462, r14 -> p96, r13 -> p103 [p113] | MOV ADD
313: 458 459 460 462, r44 -> p91 [p84] | ADD SAVE_PC
314: 459 460 463 463, r44 -> p91, r44 -> p102 [p91] | ADD LOAD
315: 459 463 464 464, r13 -> p103, r44 -> p102, r13 -> p100 [p103], r49 -> p76 [p104] | ADD ADD
316: 459 460 463 464, r2 -> p7, r45 -> p4 [p73] | CMP LOAD
317: 459 463 464 464, r45 -> p4, r5 -> p120, r44 -> p89 [p102], r49 -> p94 [p76] | CMP SUB
318: 460 464 465 465, r49 -> p94 | J JMP_IMM
319: 461 462 463 465, r45 -> p126 [p4] | CMP SAVE_PC
320: 462 463 466 466, r45 -> p126, r45 -> p110 [p126] | CMP LOAD
321: 462 466 467 467, r3 -> p123, r45 -> p110, r44 -> p112 [p89], r49 -> p65 [p94] | CMP SUB
322: 463 467 468 468, r49 -> p65 | J JMP_IMM
323: 464 465 466 468, r3 -> p123, r0 -> p44 [p64] | MOV ADD
324: 464 466 467 468, r0 -> p44, r0 -> p109 [p44], r49 -> p95 [p65] | SHR SHR_IMM
325: 464 467 468 468, r0 -> p109, r3 -> p123, r0 -> p10 [p109], r49 -> p101 [p95] | XOR XOR
326: 465 468 469 469, r0 -> p10, r0 -> p90 [p10], r49 -> p93 [p101] | AND AND_IMM
327: 465 469 470 470, r0 -> p90, r0 -> p114 [p90], r49 -> p98 [p93] | SHL SHL_IMM
328: 466 470 473 473, r0 -> p114, r2 -> p105 [p7] | MOV LOAD
329: 467 470 471 473, r0 -> p114, r5 -> p86 [p120] | LEA LEA
330: 468 473 474 474, r2 -> p105, r2 -> p105, r44 -> p107 [p112], r49 -> p116 [p98] | TEST AND
331: 468 474 475 475, r49 -> p116 | J JMP_IMM
332: 479 480 483 483, r2 -> p105, r45 -> p55 [p110] | CMP LOAD
333: 479 483 484 484, r3 -> p123, r45 -> p55, r44 -> p122 [p107], r49 -> p127 [p116] | CMP SUB
334: 479 484 485 485, r49 -> p127 | J JMP_IMM
335: 479 480 481 485, r44 -> p108 [p122] | MOV SAVE_PC
336: 480 481 482 485, r3 -> p123, r44 -> p108 | MOV STORE
337: 480 481 482 485, r44 -> p111 [p108] | MOV SAVE_PC
338: 480 482 483 486, r2 -> p105, r44 -> p111 | MOV STORE
339: 480 481 482 486, r12 -> p97, r2 -> p105 | MOV STORE
340: 483 484 487 487, r13 -> p100, r2 -> p49 [p105] | MOV LOAD
341: 484 485 488 488, r13 -> p100, r7 -> p88 [p106] | MOV LOAD
342: 485 487 488 488, r2 -> p49, r44 -> p3 [p111], r49 -> p45 [p127] | CMP SUB_IMM
343: 485 488 489 489, r49 -> p45 | J JMP_IMM
344: 493 494 495 495, r3 -> p123, r44 -> p13 [p3], r49 -> p125 [p45] | CMP SUB_IMM
345: 493 495 496 496, r49 -> p125 | J JMP_IMM
346: 500 501 502 502, r2 -> p49, r44 -> p69 [p13], r49 -> p51 [p125] | CMP SUB_IMM
347: 500 501 502 502, r2 -> p49, r1 -> p83 [p124] | MOV ADD
348: 500 501 502 502, r3 -> p123, r8 -> p12 [p8] | MOV ADD
349: 500 502 503 503, r49 -> p51 | J JMP_IMM
350: 501 502 503 503, r44 -> p61 [p69] | MOV SAVE_PC
351: 501 503 506 506, r44 -> p61, r10 -> p80 [p119] | MOV LOAD
352: 501 502 503 506, r44 -> p53 [p61] | MOV SAVE_PC
353: 501 503 506 506, r44 -> p53, r6 -> p50 [p77] | MOV LOAD
354: 502 506 509 509, r8 -> p12, r10 -> p80, r1 -> p75 [p83] | MOV LOAD
355: 502 509 512 512, r1 -> p75, r44 -> p15 [p53] | MOVSX LOAD
356: 502 512 513 513, r44 -> p15, r0 -> p121 [p114] | MOVSX SEXT_DWORD_TO_QWORD
357: 503 513 516 516, r0 -> p121, r6 -> p50, r9 -> p60 [p81] | MOV LOAD
358: 503 504 505 516, r45 -> p57 [p55] | CMP SAVE_PC
359: 506 507 510 516, r45 -> p57, r45 -> p54 [p57] | CMP LOAD
360: 506 516 517 517, r9 -> p60, r45 -> p54, r44 -> p118 [p15], r49 -> p71 [p51] | CMP SUB
361: 506 517 518 518, r49 -> p71 | J JMP_IMM
362: 509 510 513 518, r1 -> p75, r44 -> p63 [p118] | MOVSX LOAD
363: 512 513 514 518, r44 -> p63, r0 -> p6 [p121] | MOVSX SEXT_DWORD_TO_QWORD
364: 513 514 517 518, r0 -> p6, r6 -> p50, r0 -> p74 [p6] | MOV LOAD
365: 516 517 518 519, r45 -> p14 [p54] | CMP SAVE_PC
366: 516 518 521 521, r45 -> p14, r45 -> p9 [p14] | CMP LOAD
367: 516 521 522 522, r0 -> p74, r45 -> p9, r44 -> p0 [p63], r49 -> p78 [p71] | CMP SUB
368: 517 522 523 523, r49 -> p78 | J JMP_IMM
369: 527 528 529 529, r7 -> p88, r44 -> p72 [p0], r49 -> p82 [p78] | CMP SUB_IMM
370: 527 529 530 530, r49 -> p82 | J JMP_IMM
371: 534 535 536 536, r44 -> p66 [p72] | MOV SAVE_PC
372: 534 536 539 539, r44 -> p66, r6 -> p87 [p50] | MOV LOAD
373: 534 535 536 539, r7 -> p88, r0 -> p58 [p74] | MOV ADD
374: 534 536 537 539, r0 -> p58, r0 -> p67 [p58], r49 -> p5 [p82] | SHL SHL_IMM
375: 535 536 537 539 | JMP JMP_IMM
376: 535 539 540 540, r0 -> p67, r6 -> p87, r2 -> p79 [p49] | LEA LEA
377: 535 539 540 540, r8 -> p12, r6 -> p87, r1 -> p52 [p75] | LEA LEA
378: 535 540 543 543, r2 -> p79, r0 -> p62 [p67] | MOV LOAD
379: 536 543 544 544, r0 -> p62, r1 -> p52 | MOV STORE
380: 539 540 543 544, r2 -> p79, r0 -> p2 [p62] | MOV LOAD
381: 539 543 544 544, r0 -> p2, r0 -> p2, r44 -> p56 [p66], r49 -> p11 [p5] | TEST AND
382: 539 544 545 545, r49 -> p11 | J JMP_IMM
383: 549 550 551 551, r44 -> p1 [p56] | MOV SAVE_PC
384: 549 551 554 554, r44 -> p1, r0 -> p70 [p2] | MOV LOAD
385: 549 554 555 555, r14 -> p96, r0 -> p70, r44 -> p85 [p1] | MOV LEA
386: 549 555 556 556, r3 -> p123, r44 -> p85 | MOV STORE
387: 550 551 552 556 | JMP JMP_IMM
388: 550 551 552 556, r0 -> p115 [p70] | MOV ADD_IMM
389: 550 551 552 556, r3 -> p123, r2 -> p79 | MOV STORE
390: 550 552 553 557, r7 -> p88, r1 -> p52 | MOV STORE
391: 551 552 553 557 | JMP JMP_IMM
392: 554 555 558 558, r4 -> p117, r3 -> p99 [p123] | POP LOAD
393: 555 556 557 558, r4 -> p117, r4 -> p68 [p117] | POP ADD_IMM
394: 556 557 560 560, r4 -> p68, r5 -> p113 [p86] | POP LOAD
395: 556 557 558 560, r4 -> p68, r4 -> p84 [p68] | POP ADD_IMM
396: 556 558 561 561, r4 -> p84, r12 -> p91 [p97] | POP LOAD
397: 556 558 559 561, r4 -> p84, r4 -> p103 [p84] | POP ADD_IMM
398: 557 559 562 562, r4 -> p103, r13 -> p104 [p100] | POP LOAD
399: 557 559 560 562, r4 -> p103, r4 -> p73 [p103] | POP ADD_IMM
400: 558 560 563 563, r4 -> p73, r14 -> p102 [p96] | POP LOAD
401: 558 560 561 563, r4 -> p73, r4 -> p76 [p73] | POP ADD_IMM
402: 560 561 564 564, r4 -> p76, r44 -> p4 [p85] | RET LOAD
403: 560 561 562 564, r4 -> p76, r4 -> p126 [p76] | RET ADD_IMM
404: 561 564 565 565, r44 -> p4 | RET JMP_REG
405: 561 562 563 565, r0 -> p115, r0 -> p115, r44 -> p89 [p4], r49 -> p94 [p11] | TEST AND
406: 562 563 564 565, r49 -> p94 | J JMP_IMM
407: 562 563 564 565, r12 -> p91, r7 -> p64 [p88] | MOV ADD
408: 563 564 565 566, r44 -> p44 [p89] | CALL SAVE_PC
409: 563 564 565 566, r4 -> p126, r4 -> p65 [p126] | CALL SUB_IMM
410: 564 565 566 566, r44 -> p44, r4 -> p65 | CALL STORE
411: 564 565 566 566 | CALL JMP_IMM
412: 565 566 567 567, r15 -> p59, r4 -> p65 | PUSH STORE
413: 565 566 567 567, r4 -> p65, r4 -> p109 [p65] | PUSH SUB_IMM
414: 565 566 567 567, r7 -> p64, r15 -> p95 [p59] | MOV ADD
415: 565 567 568 568, r14 -> p102, r4 -> p109 | PUSH STORE
416: 566 567 568 568, r4 -> p109, r4 -> p10 [p109] | PUSH SUB_IMM
417: 566 568 569 569, r13 -> p104, r4 -> p10 | PUSH STORE
418: 566 568 569 569, r4 -> p10, r4 -> p101 [p10] | PUSH SUB_IMM
419: 566 569 570 570, r12 -> p91, r4 -> p101 | PUSH STORE
420: 567 569 570 570, r4 -> p101, r4 -> p90 [p101] | PUSH SUB_IMM
421: 567 570 571 571, r5 -> p113, r4 -> p90 | PUSH STORE
422: 567 570 571 571, r4 -> p90, r4 -> p93 [p90] | PUSH SUB_IMM
423: 568 571 572 572, r3 -> p99, r4 -> p93 | PUSH STORE
424: 568 571 572 572, r4 -> p93, r4 -> p7 [p93] | PUSH SUB_IMM
425: 569 572 573 573, r4 -> p7, r4 -> p120 [p7], r49 -> p112 [p94] | SUB SUB_IMM
426: 569 570 573 573, r7 -> p64, r45 -> p98 [p9] | CMP LOAD
427: 570 573 574 574, r45 -> p98, r44 -> p110 [p44], r49 -> p107 [p112] | CMP SUB_IMM
428: 570 574 575 575, r49 -> p107 | J JMP_IMM
429: 571 572 575 575, r15 -> p95, r45 -> p116 [p98] | CMP LOAD
430: 571 575 576 576, r45 -> p116, r44 -> p122 [p110], r49 -> p108 [p107] | CMP SUB_IMM
431: 572 576 577 577, r49 -> p108 | J JMP_IMM
432: 581 582 585 585, r15 -> p95, r3 -> p105 [p99] | MOV LOAD
433: 581 582 583 585, r45 -> p106 [p116] | CMP SAVE_PC
434: 581 583 586 586, r45 -> p106, r45 -> p111 [p106] | CMP LOAD
435: 581 586 587 587, r3 -> p105, r45 -> p111, r44 -> p127 [p122], r49 -> p3 [p108] | CMP SUB
436: 582 587 588 588, r49 -> p3 | J JMP_IMM
437: 592 593 594 594, r44 -> p45 [p127] | MOV SAVE_PC
438: 592 594 597 597, r44 -> p45, r2 -> p13 [p79] | MOV LOAD
439: 592 597 598 598, r2 -> p13, r2 -> p13, r44 -> p125 [p45], r49 -> p124 [p3] | TEST AND
440: 592 598 599 599, r49 -> p124 | J JMP_IMM
441: 603 604 607 607, r2 -> p13, r5 -> p8 [p113] | MOV LOAD
442: 603 607 608 608, r5 -> p8, r5 -> p8, r44 -> p69 [p125], r49 -> p119 [p124] | TEST AND
443: 603 608 609 609, r49 -> p119 | J JMP_IMM
444: 613 614 615 615, r4 -> p120, r4 -> p61 [p120], r49 -> p77 [p119] | ADD ADD_IMM
445: 613 615 618 618, r4 -> p61, r3 -> p83 [p105] | POP LOAD
446: 613 615 616 618, r4 -> p61, r4 -> p53 [p61] | POP ADD_IMM
447: 613 616 619 619, r4 -> p53, r5 -> p114 [p8] | POP LOAD
448: 614 616 617 619, r4 -> p53, r4 -> p81 [p53] | POP ADD_IMM
449: 614 617 620 620, r4 -> p81, r12 -> p55 [p91] | POP LOAD
450: 614 617 618 620, r4 -> p81, r4 -> p57 [p81] | POP ADD_IMM
451: 614 618 621 621, r4 -> p57, r13 -> p15 [p104] | POP LOAD
452: 615 618 619 621, r4 -> p57, r4 -> p51 [p57] | POP ADD_IMM
453: 618 619 622 622, r4 -> p51, r14 -> p118 [p102] | POP LOAD
454: 618 619 620 622, r4 -> p51, r4 -> p121 [p51] | POP ADD_IMM
455: 619 620 623 623, r4 -> p121, r15 -> p6 [p95] | POP LOAD
456: 619 620 621 623, r4 -> p121, r4 -> p54 [p121] | POP ADD_IMM
457: 620 621 624 624, r4 -> p54, r44 -> p14 [p69] | RET LOAD
458: 620 621 622 624, r4 -> p54, r4 -> p63 [p54] | RET ADD_IMM
459: 621 624 625 625, r44 -> p14 | RET JMP_REG
460: 621 622 625 625, r12 -> p55, r45 -> p71 [p111] | CMP LOAD
461: 622 625 626 626, r45 -> p71, r44 -> p0 [p14], r49 -> p78 [p77] | CMP SUB_IMM
462: 622 626 627 627, r49 -> p78 | J JMP_IMM
463: 623 624 627 627, r12 -> p55, r3 -> p72 [p83] | MOV LOAD
464: 623 627 628 628, r3 -> p72, r44 -> p50 [p0], r49 -> p74 [p78] | CMP SUB_IMM
465: 624 628 629 629, r49 -> p74 | J JMP_IMM
466: 624 625 626 629, r45 -> p58 [p71] | CMP SAVE_PC
467: 625 626 629 629, r45 -> p58, r45 -> p82 [p58] | CMP LOAD
468: 625 629 630 630, r3 -> p72, r45 -> p82, r44 -> p49 [p50], r49 -> p75 [p74] | CMP SUB
469: 626 630 631 631, r49 -> p75 | J JMP_IMM
470: 635 636 637 637, r44 -> p67 [p49] | MOV SAVE_PC
471: 635 637 640 640, r44 -> p67, r2 -> p62 [p13] | MOV LOAD
472: 635 640 641 641, r2 -> p62, r2 -> p62, r44 -> p66 [p67], r49 -> p5 [p75] | TEST AND
473: 635 641 642 642, r49 -> p5 | J JMP_IMM
474: 646 647 650 650, r2 -> p62, r0 -> p56 [p115] | MOV LOAD
475: 646 650 651 651, r0 -> p56, r0 -> p2 [p56], r49 -> p1 [p5] | AND AND_IMM
476: 646 647 650 651, r5 -> p114, r2 -> p70 [p62] | MOV LOAD
477: 646 651 652 652, r0 -> p2, r2 -> p70 | MOV STORE
478: 647 648 649 652 | JMP JMP_IMM
479: 647 648 651 652, r14 -> p118, r45 -> p123 [p82] | CMP LOAD
480: 647 651 652 652, r45 -> p123, r44 -> p117 [p66], r49 -> p86 [p1] | CMP SUB_IMM
481: 647 652 653 653, r49 -> p86 | J JMP_IMM
482: 657 658 661 661, r5 -> p114, r0 -> p68 [p2] | MOV LOAD
483: 657 658 661 661, r12 -> p55, r44 -> p97 [p117] | MOVZX LOAD
484: 657 661 662 662, r44 -> p97, r1 -> p84 [p52] | MOVZX ZEXT_BYTE_TO_DWORD
485: 657 658 659 662, r12 -> p55, r7 -> p100 [p64] | MOV ADD
486: 658 661 664 664, r0 -> p68, r2 -> p103 [p70] | MOV LOAD
487: 658 661 664 664, r0 -> p68, r6 -> p96 [p87] | MOV LOAD
488: 658 659 660 664, r44 -> p73 [p97] | CALL SAVE_PC
489: 658 659 660 664, r4 -> p63, r4 -> p85 [p63] | CALL SUB_IMM
490: 661 662 663 665, r44 -> p73, r4 -> p85 | CALL STORE
491: 661 662 663 665 | CALL JMP_IMM
492: 662 663 664 665, r15 -> p6, r4 -> p85 | PUSH STORE
493: 662 663 664 665, r4 -> p85, r4 -> p76 [p85] | PUSH SUB_IMM
494: 664 665 666 666, r2 -> p103, r15 -> p4 [p6] | MOV ADD
495: 664 665 666 666, r14 -> p118, r4 -> p76 | PUSH STORE
496: 664 665 666 666, r4 -> p76, r4 -> p11 [p76] | PUSH SUB_IMM
497: 664 665 666 666, r6 -> p96, r14 -> p88 [p118] | MOV ADD
498: 665 666 667 667, r13 -> p15, r4 -> p11 | PUSH STORE
499: 665 666 667 667, r4 -> p11, r4 -> p89 [p11] | PUSH SUB_IMM
500: 665 667 668 668, r12 -> p55, r4 -> p89 | PUSH STORE
501: 665 667 668 668, r4 -> p89, r4 -> p126 [p89] | PUSH SUB_IMM
502: 666 668 669 669, r5 -> p114, r4 -> p126 | PUSH STORE
503: 666 668 669 669, r4 -> p126, r4 -> p65 [p126] | PUSH SUB_IMM
504: 666 667 668 669, r7 -> p100, r5 -> p59 [p114] | MOV ADD
505: 666 669 670 670, r3 -> p72, r4 -> p65 | PUSH STORE
506: 667 669 670 670, r4 -> p65, r4 -> p109 [p65] | PUSH SUB_IMM
507: 667 670 671 671, r4 -> p109, r4 -> p10 [p109], r49 -> p101 [p86] | SUB SUB_IMM
508: 668 669 672 672, r7 -> p100, r45 -> p90 [p123] | CMP LOAD
509: 668 672 673 673, r45 -> p90, r44 -> p93 [p73], r49 -> p7 [p101] | CMP SUB_IMM
510: 669 671 672 673, r1 -> p84, r4 -> p10 | MOV STORE
511: 669 673 674 674, r49 -> p7 | J JMP_IMM
512: 678 679 682 682, r7 -> p100, r3 -> p94 [p72] | MOV LOAD
513: 678 679 680 682, r45 -> p9 [p90] | CMP SAVE_PC
514: 678 680 683 683, r45 -> p9, r45 -> p44 [p9] | CMP LOAD
515: 678 683 684 684, r3 -> p94, r45 -> p44, r44 -> p112 [p93], r49 -> p98 [p7] | CMP SUB
516: 679 684 685 685, r49 -> p98 | J JMP_IMM
517: 689 690 691 691, r44 -> p110 [p112] | MOV SAVE_PC
518: 689 691 694 694, r44 -> p110, r2 -> p107 [p103] | MOV LOAD
519: 689 694 695 695, r2 -> p107, r2 -> p107, r44 -> p99 [p110], r49 -> p116 [p98] | TEST AND
520: 689 695 696 696, r49 -> p116 | J JMP_IMM
521: 700 701 704 704, r2 -> p107, r45 -> p106 [p44] | CMP LOAD
522: 700 704 705 705, r45 -> p106, r3 -> p94, r44 -> p122 [p99], r49 -> p108 [p116] | CMP SUB
523: 700 705 706 706, r49 -> p108 | J JMP_IMM
524: 700 701 704 706, r5 -> p59, r45 -> p127 [p106] | CMP LOAD
525: 701 704 705 706, r45 -> p127, r44 -> p79 [p122], r49 -> p45 [p108] | CMP SUB_IMM
526: 701 705 706 706, r49 -> p45 | J JMP_IMM
527: 701 702 703 707, r3 -> p94, r44 -> p3 [p79], r49 -> p113 [p45] | CMP SUB_IMM
528: 701 703 704 707, r49 -> p113 | J JMP_IMM
529: 708 709 710 710, r44 -> p125 [p3] | MOV SAVE_PC
530: 708 710 713 713, r44 -> p125, r13 -> p124 [p15] | MOV LOAD
531: 708 713 714 714, r13 -> p124, r13 -> p124, r44 -> p120 [p125], r49 -> p119 [p113] | TEST AND
532: 708 714 715 715, r49 -> p119 | J JMP_IMM
533: 709 713 716 716, r13 -> p124, r0 -> p105 [p68] | MOV LOAD
534: 709 710 711 716, r44 -> p61 [p120] | MOV SAVE_PC
535: 709 716 717 717, r0 -> p105, r44 -> p61 | MOV STORE
536: 709 713 714 717, r5 -> p59, r13 -> p124 | MOV STORE
537: 710 713 714 717, r13 -> p124 | MOV STORE
538: 713 714 717 717, r5 -> p59, r44 -> p8 [p61] | MOVZX LOAD
539: 714 717 718 718, r44 -> p8, r0 -> p53 [p105] | MOVZX ZEXT_WORD_TO_DWORD
540: 715 718 719 719, r0 -> p53, r44 -> p91 [p8], r49 -> p81 [p119] | CMP SUB_IMM
541: 716 719 720 720, r49 -> p81 | J JMP_IMM
542: 724 725 726 726, r0 -> p104 [p53] | XOR ADD
543: 724 725 726 726 | JMP JMP_IMM
544: 724 726 727 727, r0 -> p104, r13 -> p124 | MOV STORE
545: 724 725 726 727, r5 -> p59, r7 -> p57 [p100] | MOV ADD
546: 725 726 727 727, r44 -> p102 [p91] | CALL SAVE_PC
547: 725 726 727 727, r4 -> p10, r4 -> p51 [p10] | CALL SUB_IMM
548: 725 727 728 728, r44 -> p102, r4 -> p51 | CALL STORE
549: 725 726 727 728 | CALL JMP_IMM
550: 726 727 728 728, r12 -> p55, r4 -> p51 | PUSH STORE
551: 726 727 728 728, r4 -> p51, r4 -> p95 [p51] | PUSH SUB_IMM
552: 727 728 729 729, r5 -> p59, r4 -> p95 | PUSH STORE
553: 727 728 729 729, r4 -> p95, r4 -> p121 [p95] | PUSH SUB_IMM
554: 727 728 729 729, r5 -> p69 [p59] | XOR ADD
555: 727 729 730 730, r3 -> p94, r4 -> p121 | PUSH STORE
556: 728 729 730 730, r4 -> p121, r4 -> p54 [p121] | PUSH SUB_IMM
557: 728 729 730 730, r3 -> p111 [p94] | XOR ADD
558: 728 730 731 731, r4 -> p54, r4 -> p14 [p54], r49 -> p77 [p81] | SUB SUB_IMM
559: 728 731 732 732, r4 -> p14, r12 -> p83 [p55] | LEA LEA
560: 729 731 732 732, r7 -> p57, r4 -> p14 | MOV STORE
561: 729 732 733 733, r12 -> p83, r7 -> p0 [p57] | MOV ADD
562: 729 730 731 733, r44 -> p78 [p102] | CALL SAVE_PC
563: 730 731 732 733, r4 -> p14, r4 -> p71 [p14] | CALL SUB_IMM
564: 730 732 733 733, r44 -> p78, r4 -> p71 | CALL STORE
565: 730 731 732 734 | CALL JMP_IMM
566: 731 733 734 734, r7 -> p0, r0 -> p58 [p104] | MOV ADD
567: 732 733 734 734, r7 -> p0 | MOV STORE
568: 732 733 734 734, r7 -> p0 | MOV STORE
569: 733 734 737 737, r4 -> p71, r44 -> p50 [p78] | RET LOAD
570: 733 734 735 737, r4 -> p71, r4 -> p74 [p71] | RET ADD_IMM
571: 733 737 738 738, r44 -> p50 | RET JMP_REG
572: 733 735 736 738, r4 -> p74, r7 -> p49 [p0] | LEA LEA
573: 734 735 736 738, r12 -> p83, r2 -> p13 [p107] | MOV ADD
574: 734 735 736 738, r6 -> p67 [p96] | MOV ADD_IMM
575: 734 735 736 739, r44 -> p75 [p50] | CALL SAVE_PC
576: 734 736 737 739, r4 -> p74, r4 -> p115 [p74] | CALL SUB_IMM
577: 737 738 739 739, r44 -> p75, r4 -> p115 | CALL STORE
578: 737 738 739 739 | CALL JMP_IMM
579: 738 739 740 740, r15 -> p4, r4 -> p115 | PUSH STORE
580: 738 739 740 740, r4 -> p115, r4 -> p56 [p115] | PUSH SUB_IMM
581: 738 739 740 740, r6 -> p67, r15 -> p5 [p4] | MOV ADD
582: 738 739 740 740, r2 -> p13, r6 -> p62 [p67] | MOV ADD
583: 739 740 741 741, r14 -> p88, r4 -> p56 | PUSH STORE
584: 739 740 741 741, r4 -> p56, r4 -> p82 [p56] | PUSH SUB_IMM
585: 739 740 741 741, r2 -> p13, r14 -> p66 [p88] | MOV ADD
586: 739 741 742 742, r13 -> p124, r4 -> p82 | PUSH STORE
587: 740 741 742 742, r4 -> p82, r4 -> p1 [p82] | PUSH SUB_IMM
588: 740 742 743 743, r12 -> p83, r4 -> p1 | PUSH STORE
589: 740 742 743 743, r4 -> p1, r4 -> p2 [p1] | PUSH SUB_IMM
590: 740 743 744 744, r5 -> p69, r4 -> p2 | PUSH STORE
591: 741 743 744 744, r4 -> p2, r4 -> p117 [p2] | PUSH SUB_IMM
592: 741 744 745 745, r3 -> p111, r4 -> p117 | PUSH STORE
593: 741 744 745 745, r4 -> p117, r4 -> p52 [p117] | PUSH SUB_IMM
594: 742 745 746 746, r4 -> p52, r4 -> p64 [p52], r49 -> p70 [p77] | SUB SUB_IMM
595: 742 746 747 747, r7 -> p49, r4 -> p64 | MOV STORE
596: 743 744 745 747, r44 -> p87 [p75] | CALL SAVE_PC
597: 743 746 747 747, r4 -> p64, r4 -> p97 [p64] | CALL SUB_IMM
598: 744 747 748 748, r44 -> p87, r4 -> p97 | CALL STORE
599: 744 745 746 748, r15 -> p5 | CALL JMP_REG
600: 745 747 748 748, r4 -> p97, r4 -> p63 [p97], r49 -> p85 [p70] | SUB SUB_IMM
601: 745 746 749 749, r7 -> p49, r0 -> p6 [p58] | MOV LOAD
602: 746 747 748 749, r6 -> p62, r2 -> p76 [p13] | MOV ADD
603: 747 749 750 750, r0 -> p6, r0 -> p6, r44 -> p118 [p87], r49 -> p11 [p85] | TEST AND
604: 747 750 751 751, r49 -> p11 | J JMP_IMM
605: 747 749 752 752, r0 -> p6, r45 -> p89 [p127] | CMP LOAD
606: 748 752 753 753, r45 -> p89, r44 -> p126 [p118], r49 -> p114 [p11] | CMP SUB_IMM
607: 748 753 754 754, r49 -> p114 | J JMP_IMM
608: 758 759 762 762, r0 -> p6, r6 -> p65 [p62] | MOV LOAD
609: 758 759 760 762, r2 -> p76, r7 -> p109 [p49] | MOV ADD
610: 758 759 760 762, r44 -> p86 [p126] | CALL SAVE_PC
611: 758 759 760 762, r4 -> p63, r4 -> p123 [p63] | CALL SUB_IMM
612: 759 760 761 763, r44 -> p86, r4 -> p123 | CALL STORE
613: 759 760 761 763 | CALL JMP_IMM
614: 759 760 761 763, r12 -> p83, r4 -> p123 | PUSH STORE
615: 759 760 761 763, r4 -> p123, r4 -> p73 [p123] | PUSH SUB_IMM
616: 762 763 764 764, r6 -> p65, r12 -> p101 [p83] | MOV ADD
617: 762 764 765 765, r12 -> p101, r12 -> p72 [p101], r49 -> p90 [p114] | SHR SHR_IMM
618: 762 763 764 765, r5 -> p69, r4 -> p73 | PUSH STORE
619: 762 763 764 765, r4 -> p73, r4 -> p9 [p73] | PUSH SUB_IMM
620: 763 764 765 765, r7 -> p109, r5 -> p93 [p69] | MOV ADD
621: 763 764 765 766, r3 -> p111, r4 -> p9 | PUSH STORE
622: 763 764 765 766, r4 -> p9, r4 -> p7 [p9] | PUSH SUB_IMM
623: 763 765 768 768, r7 -> p109, r7 -> p112 [p109] | MOV LOAD
624: 764 765 766 768, r6 -> p65, r3 -> p103 [p111] | MOV ADD
625: 765 768 769 769, r7 -> p112, r7 -> p112, r44 -> p110 [p86], r49 -> p98 [p90] | TEST AND
626: 765 769 770 770, r49 -> p98 | J JMP_IMM
627: 774 775 776 776, r44 -> p44 [p110] | MOV SAVE_PC
628: 774 776 779 779, r44 -> p44, r6 -> p99 [p65] | MOV LOAD
629: 774 779 780 780, r6 -> p99, r6 -> p99, r44 -> p116 [p44], r49 -> p106 [p98] | TEST AND
630: 774 780 781 781, r49 -> p106 | J JMP_IMM
631: 775 779 782 782, r6 -> p99, r0 -> p122 [p6] | MOV LOAD
632: 775 776 777 782, r44 -> p108 [p116] | MOV SAVE_PC
633: 775 782 783 783, r0 -> p122, r44 -> p108 | MOV STORE
634: 775 776 777 783, r3 -> p103, r2 -> p79 [p76] | MOV ADD
635: 776 777 778 783, r3 -> p103, r3 -> p45 [p103], r49 -> p3 [p106] | AND AND_IMM
636: 779 780 781 783, r0 -> p15 [p122] | MOV ADD_IMM
637: 780 781 782 784, r2 -> p79, r2 -> p125 [p79], r49 -> p113 [p3] | SHR SHR_IMM
638: 781 782 783 784, r3 -> p45, r1 -> p68 [p84] | MOV ADD
639: 782 783 784 784, r6 -> p99 | MOV STORE
640: 782 783 784 784, r6 -> p99 | MOV STORE
641: 783 784 785 785, r2 -> p125, r2 -> p120 [p125], r49 -> p61 [p113] | AND AND_IMM
642: 783 784 785 785, r0 -> p15, r1 -> p68, r0 -> p105 [p15], r49 -> p8 [p61] | SHL SHL
643: 783 784 787 787, r5 -> p93, r45 -> p119 [p89] | CMP LOAD
644: 783 787 788 788, r45 -> p119, r44 -> p53 [p108], r49 -> p100 [p8] | CMP SUB
645: 784 785 786 788, r12 -> p72, r6 -> p99 | MOV STORE
646: 784 785 786 788, r2 -> p120, r6 -> p99, r44 -> p91 [p53] | MOV LEA
647: 784 786 787 788, r0 -> p105, r44 -> p91 | MOV STORE
648: 784 788 789 789, r49 -> p100 | J JMP_IMM
649: 793 794 795 795, r6 -> p99 | MOV STORE
650: 793 794 795 795, r6 -> p99 | MOV STORE
651: 793 794 795 795, r6 -> p99, r5 -> p93 | MOV STORE
652: 793 794 795 795 | JMP JMP_IMM
653: 794 795 796 796, r6 -> p99, r5 -> p93 | MOV STORE
654: 794 795 796 796, r12 -> p72, r5 -> p93 | MOV STORE
655: 794 795 798 798, r4 -> p7, r3 -> p10 [p45] | POP LOAD
656: 794 795 796 798, r4 -> p7, r4 -> p51 [p7] | POP ADD_IMM
657: 795 796 799 799, r4 -> p51, r5 -> p95 [p93] | POP LOAD
658: 795 796 797 799, r4 -> p51, r4 -> p59 [p51] | POP ADD_IMM
659: 795 797 800 800, r4 -> p59, r12 -> p121 [p72] | POP LOAD
660: 795 797 798 800, r4 -> p59, r4 -> p94 [p59] | POP ADD_IMM
661: 796 798 801 801, r4 -> p94, r44 -> p54 [p91] | RET LOAD
662: 796 798 799 801, r4 -> p94, r4 -> p81 [p94] | RET ADD_IMM
663: 798 801 802 802, r44 -> p54 | RET JMP_REG
664: 798 799 800 802, r0 -> p55 [p105] | XOR ADD
665: 799 800 801 802, r4 -> p81, r4 -> p57 [p81], r49 -> p102 [p100] | ADD ADD_IMM
666: 799 801 804 804, r4 -> p57, r44 -> p14 [p54] | RET LOAD
667: 800 801 802 804, r4 -> p57, r4 -> p104 [p57] | RET ADD_IMM
668: 800 804 805 805, r44 -> p14 | RET JMP_REG
669: 801 802 803 805, r0 -> p55, r4 -> p104 | MOV STORE
670: 801 802 803 805, r0 -> p55, r0 -> p78 [p55], r49 -> p71 [p102] | ADD ADD_IMM
671: 802 803 804 805, r49 -> p71 | J JMP_IMM
672: 802 803 806 806, r4 -> p104, r11 -> p0 [p92] | MOV LOAD
673: 802 806 807 807, r11 -> p0, r11 -> p0, r44 -> p107 [p14], r49 -> p96 [p71] | TEST AND
674: 804 807 808 808, r49 -> p96 | J JMP_IMM
675: 804 805 808 808, r4 -> p104, r2 -> p50 [p120] | MOV LOAD
676: 805 808 811 811, r2 -> p50, r0 -> p74 [p78] | MOV LOAD
677: 805 811 812 812, r0 -> p74, r0 -> p74, r44 -> p115 [p107], r49 -> p4 [p96] | TEST AND
678: 805 812 813 813, r49 -> p4 | J JMP_IMM
679: 805 811 814 814, r0 -> p74, r44 -> p67 [p115] | MOVZX LOAD
680: 806 814 815 815, r44 -> p67, r0 -> p56 [p74] | MOVZX ZEXT_WORD_TO_DWORD
681: 807 815 818 818, r0 -> p56, r1 -> p88 [p68] | MOV LOAD
682: 808 815 818 818, r0 -> p56, r44 -> p82 [p67] | MOVZX LOAD
683: 808 818 819 819, r44 -> p82, r0 -> p1 [p56] | MOVZX ZEXT_BYTE_TO_DWORD
684: 811 818 819 819, r1 -> p88, r4 -> p104 | MOV STORE
685: 812 819 820 820, r0 -> p1, r0 -> p1, r44 -> p2 [p82], r49 -> p117 [p4] | TEST AND
686: 813 820 821 821, r49 -> p117 | J JMP_IMM
687: 814 819 820 821, r0 -> p1, r0 -> p52 [p1], r49 -> p77 [p117] | SUB SUB_IMM
688: 815 816 817 821, r4 -> p104 | MOV STORE
689: 818 820 821 821, r0 -> p52, r0 -> p75 [p52], r49 -> p64 [p77] | ADD ADD_IMM
690: 818 821 822 822, r0 -> p75, r4 -> p104 | MOV STORE
691: 819 820 823 823, r4 -> p104, r3 -> p97 [p10] | MOV LOAD
692: 819 820 823 823, r4 -> p104, r1 -> p70 [p88] | MOV LOAD
693: 820 821 824 824, r4 -> p104, r2 -> p58 [p50] | MOV LOAD
694: 821 823 826 826, r1 -> p70, r3 -> p97, r44 -> p13 [p2] | MOVZX LOAD
695: 821 826 827 827, r44 -> p13, r0 -> p87 [p75] | MOVZX ZEXT_BYTE_TO_DWORD
696: 821 827 828 828, r0 -> p87, r44 -> p85 [p13], r49 -> p127 [p64] | CMP SUB_IMM
697: 821 828 829 829, r49 -> p127 | J JMP_IMM
698: 822 827 828 829, r0 -> p87, r44 -> p118 [p85], r49 -> p11 [p127] | CMP SUB_IMM
699: 823 828 829 829, r49 -> p11 | J JMP_IMM
700: 823 827 828 829, r0 -> p87, r44 -> p62 [p118], r49 -> p49 [p11] | CMP SUB_IMM
701: 824 828 829 830, r49 -> p49 | J JMP_IMM
702: 826 827 830 830, r4 -> p104, r45 -> p126 [p119] | ADD LOAD
703: 827 830 831 831, r45 -> p126, r44 -> p63 [p62], r49 -> p123 [p49] | ADD ADD_IMM
704: 828 831 832 832, r44 -> p63, r4 -> p104 | ADD STORE
705: 829 830 833 833, r4 -> p104, r0 -> p83 [p87] | MOV LOAD
706: 829 832 835 835, r4 -> p104, r45 -> p101 [p126] | CMP LOAD
707: 829 835 836 836, r45 -> p101, r0 -> p83, r44 -> p114 [p63], r49 -> p73 [p123] | CMP SUB
708: 829 836 837 837, r49 -> p73 | J JMP_IMM
709: 841 842 845 845, r4 -> p104, r3 -> p69 [p97] | MOV LOAD
710: 841 842 845 845, r4 -> p104, r1 -> p9 [p70] | MOV LOAD
711: 841 842 845 845, r4 -> p104, r2 -> p109 [p58] | MOV LOAD
712: 841 845 848 848, r1 -> p9, r3 -> p69, r44 -> p111 [p114] | MOVZX LOAD
713: 842 848 849 849, r44 -> p111, r0 -> p86 [p83] | MOVZX ZEXT_BYTE_TO_DWORD
714: 842 849 850 850, r0 -> p86, r44 -> p90 [p111], r49 -> p110 [p73] | CMP SUB_IMM
715: 842 850 851 851, r49 -> p110 | J JMP_IMM
716: 842 849 850 851, r0 -> p86, r44 -> p65 [p90], r49 -> p44 [p110] | CMP SUB_IMM
717: 845 850 851 851, r49 -> p44 | J JMP_IMM
718: 845 849 850 851, r0 -> p86, r44 -> p98 [p65], r49 -> p6 [p44] | CMP SUB_IMM
719: 845 850 851 852, r49 -> p6 | J JMP_IMM
720: 848 849 852 852, r4 -> p104, r45 -> p116 [p101] | ADD LOAD
721: 849 852 853 853, r45 -> p116, r44 -> p76 [p98], r49 -> p103 [p6] | ADD ADD_IMM
722: 850 853 854 854, r44 -> p76, r4 -> p104 | ADD STORE
723: 851 852 855 855, r4 -> p104, r0 -> p106 [p86] | MOV LOAD
724: 851 854 857 857, r4 -> p104, r45 -> p122 [p116] | CMP LOAD
725: 851 857 858 858, r45 -> p122, r0 -> p106, r44 -> p79 [p76], r49 -> p3 [p103] | CMP SUB
726: 851 858 859 859, r49 -> p3 | J JMP_IMM
727: 852 853 854 859 | NOP NOP
728: 852 853 856 859, r4 -> p104, r0 -> p84 [p106] | MOV LOAD
729: 853 854 855 859, r4 -> p104, r4 -> p125 [p104], r49 -> p113 [p3] | ADD ADD_IMM
730: 854 855 858 860, r4 -> p125, r3 -> p15 [p69] | POP LOAD
731: 855 856 857 860, r4 -> p125, r4 -> p61 [p125] | POP ADD_IMM
732: 857 858 861 861, r4 -> p61, r5 -> p89 [p95] | POP LOAD
733: 858 859 860 861, r4 -> p61, r4 -> p108 [p61] | POP ADD_IMM
734: 859 860 863 863, r4 -> p108, r12 -> p8 [p121] | POP LOAD
735: 859 860 861 863, r4 -> p108, r4 -> p53 [p108] | POP ADD_IMM
736: 859 861 864 864, r4 -> p53, r13 -> p45 [p124] | POP LOAD
737: 859 861 862 864, r4 -> p53, r4 -> p7 [p53] | POP ADD_IMM
738: 860 862 865 865, r4 -> p7, r14 -> p93 [p66] | POP LOAD
739: 860 862 863 865, r4 -> p7, r4 -> p51 [p7] | POP ADD_IMM
740: 861 863 866 866, r4 -> p51, r15 -> p72 [p5] | POP LOAD
741: 861 863 864 866, r4 -> p51, r4 -> p59 [p51] | POP ADD_IMM
742: 863 864 867 867, r4 -> p59, r44 -> p91 [p79] | RET LOAD
743: 863 864 865 867, r4 -> p59, r4 -> p94 [p59] | RET ADD_IMM
744: 864 867 868 868, r44 -> p91 | RET JMP_REG
745: 864 865 868 868, r4 -> p94, r8 -> p105 [p12] | MOV LOAD
746: 865 868 869 869, r8 -> p105, r8 -> p105, r44 -> p81 [p91], r49 -> p100 [p113] | TEST AND
747: 865 869 870 870, r49 -> p100 | J JMP_IMM
748: 866 867 868 870, r9 -> p54 [p60] | XOR ADD
749: 866 868 871 871, r9 -> p54, r8 -> p105, r6 -> p57 [p99] | MOV LOAD
750: 867 868 869 871, r9 -> p54, r10 -> p55 [p80] | MOV ADD
751: 867 871 872 872, r6 -> p57, r6 -> p57, r44 -> p102 [p81], r49 -> p92 [p100] | TEST AND
752: 868 872 873 873, r49 -> p92 | J JMP_IMM
753: 868 869 870 873, r7 -> p14 [p112] | XOR ADD
754: 869 870 871 873, r11 -> p71 [p0] | MOV ADD_IMM
755: 870 871 872 873 | NOP NOP
756: 870 871 872 874, r7 -> p14, r1 -> p120 [p9] | MOV ADD
757: 871 872 873 874, r11 -> p71, r0 -> p78 [p84] | MOV ADD
758: 871 873 874 874, r0 -> p78, r1 -> p120, r0 -> p107 [p78], r49 -> p96 [p92] | SHL SHL
759: 872 874 875 875, r0 -> p107, r6 -> p57, r44 -> p115 [p102], r49 -> p74 [p96] | TEST AND
760: 873 875 876 876, r49 -> p74 | J JMP_IMM
761: 873 874 875 876, r0 -> p107, r0 -> p68 [p107] | NOT NOT
762: 873 875 876 876, r6 -> p57, r0 -> p68, r6 -> p67 [p57], r49 -> p56 [p74] | AND AND
763: 873 874 877 877, r8 -> p105, r0 -> p82 [p68] | MOV LOAD
764: 874 877 878 878, r0 -> p82, r10 -> p55, r0 -> p4 [p82] | LEA LEA
765: 874 878 879 879, r0 -> p4, r0 -> p1 [p4], r49 -> p117 [p56] | SHL SHL_IMM
766: 874 879 880 880, r1 -> p120, r0 -> p1, r2 -> p52 [p109] | LEA LEA
767: 875 880 881 881, r2 -> p52, r44 -> p77 [p115], r49 -> p10 [p117] | CMP SUB_IMM
768: 876 881 882 882, r49 -> p10 | J JMP_IMM
769: 876 880 881 882, r2 -> p52, r44 -> p88 [p77], r49 -> p50 [p10] | CMP SUB_IMM
770: 876 881 882 882, r49 -> p50 | J JMP_IMM
771: 877 880 881 882, r2 -> p52, r44 -> p2 [p88], r49 -> p75 [p50] | CMP SUB_IMM
772: 878 881 882 883, r49 -> p75 | J JMP_IMM
773: 879 880 881 883, r2 -> p52, r44 -> p13 [p2], r49 -> p64 [p75] | CMP SUB_IMM
774: 880 881 882 883, r49 -> p64 | J JMP_IMM
775: 881 882 883 883, r2 -> p52, r0 -> p85 [p1] | LEA LEA
776: 882 883 884 884, r0 -> p85, r44 -> p127 [p13], r49 -> p118 [p64] | CMP SUB_IMM
777: 882 884 885 885, r49 -> p118 | J JMP_IMM
778: 882 883 884 885, r2 -> p52, r44 -> p11 [p127], r49 -> p119 [p118] | CMP SUB_IMM
779: 882 883 884 885, r0 -> p62 [p85] | MOV ADD_IMM
780: 883 884 885 885, r49 -> p119 | J JMP_IMM
781: 889 890 891 891, r3 -> p15, r0 -> p62, r3 -> p49 [p15], r49 -> p87 [p119] | ADD ADD
782: 889 890 891 891, r6 -> p67, r6 -> p67, r44 -> p126 [p11], r49 -> p63 [p87] | TEST AND
783: 889 891 892 892, r49 -> p63 | J JMP_IMM
784: 896 897 898 898, r9 -> p54, r9 -> p123 [p54], r49 -> p97 [p63] | ADD ADD_IMM
785: 896 898 899 899, r9 -> p123, r44 -> p70 [p126], r49 -> p58 [p97] | CMP SUB_IMM
786: 896 899 900 900, r49 -> p58 | J JMP_IMM
787: 904 905 908 908, r9 -> p123, r8 -> p105, r6 -> p114 [p67] | MOV LOAD
788: 904 905 906 908, r9 -> p123, r10 -> p83 [p55] | MOV ADD
789: 904 908 909 909, r6 -> p114, r6 -> p114, r44 -> p111 [p70], r49 -> p73 [p58] | TEST AND
790: 904 909 910 910, r49 -> p73 | J JMP_IMM
791: 914 915 916 916, r9 -> p123, r9 -> p90 [p123], r49 -> p110 [p73] | ADD ADD_IMM
792: 914 916 917 917, r9 -> p90, r44 -> p65 [p111], r49 -> p44 [p110] | CMP SUB_IMM
793: 914 917 918 918, r49 -> p44 | J JMP_IMM
794: 914 915 918 918, r8 -> p105, r8 -> p101 [p105] | MOV LOAD
795: 915 918 919 919, r8 -> p101, r8 -> p101, r44 -> p98 [p65], r49 -> p6 [p44] | TEST AND
796: 915 919 920 920, r49 -> p6 | J JMP_IMM
797: 915 916 917 920, r12 -> p8, r7 -> p86 [p14] | MOV ADD
798: 915 916 917 920, r44 -> p116 [p98] | CALL SAVE_PC
799: 916 917 918 920, r4 -> p94, r4 -> p76 [p94] | CALL SUB_IMM
800: 917 918 919 921, r44 -> p116, r4 -> p76 | CALL STORE
801: 918 919 920 921 | CALL JMP_IMM
802: 918 919 922 922, r7 -> p86, r0 -> p103 [p62] | MOV LOAD
803: 919 922 923 923, r0 -> p103, r0 -> p103, r44 -> p106 [p116], r49 -> p104 [p6] | TEST AND
804: 920 923 924 924, r49 -> p104 | J JMP_IMM
805: 920 921 922 924, r44 -> p3 [p106] | MOV SAVE_PC
806: 920 922 925 925, r44 -> p3, r1 -> p69 [p120] | MOV LOAD
807: 920 921 922 925 | JMP JMP_IMM
808: 921 922 925 925, r0 -> p103, r2 -> p125 [p52] | MOV LOAD
809: 921 925 926 926, r1 -> p69, r0 -> p103 | MOV STORE
810: 922 925 926 926, r2 -> p125, r2 -> p125, r44 -> p95 [p3], r49 -> p61 [p104] | TEST AND
811: 923 926 927 927, r49 -> p61 | J JMP_IMM
812: 924 925 926 927, r44 -> p121 [p95] | MOV SAVE_PC
813: 924 926 927 927, r0 -> p103, r44 -> p121 | MOV STORE
814: 925 926 927 927, r7 -> p86 | MOV STORE
815: 925 926 927 928, r7 -> p86 | MOV STORE
816: 925 927 930 930, r4 -> p76, r44 -> p108 [p121] | RET LOAD
817: 926 927 928 930, r4 -> p76, r4 -> p124 [p76] | RET ADD_IMM
818: 926 930 931 931, r44 -> p108 | RET JMP_REG
819: 927 928 929 931, r5 -> p89, r5 -> p89, r44 -> p53 [p108], r49 -> p66 [p61] | TEST AND
820: 927 929 930 931, r49 -> p66 | J JMP_IMM
821: 934 935 936 936, r4 -> p124, r4 -> p7 [p124], r49 -> p5 [p66] | ADD ADD_IMM
822: 934 935 936 936, r3 -> p49, r0 -> p51 [p103] | MOV ADD
823: 934 936 939 939, r4 -> p7, r3 -> p79 [p49] | POP LOAD
824: 934 936 937 939, r4 -> p7, r4 -> p59 [p7] | POP ADD_IMM
825: 935 937 940 940, r4 -> p59, r5 -> p12 [p89] | POP LOAD
826: 935 937 938 940, r4 -> p59, r4 -> p91 [p59] | POP ADD_IMM
827: 935 938 941 941, r4 -> p91, r12 -> p113 [p8] | POP LOAD
828: 935 938 939 941, r4 -> p91, r4 -> p60 [p91] | POP ADD_IMM
829: 936 939 942 942, r4 -> p60, r44 -> p99 [p53] | RET LOAD
830: 936 939 940 942, r4 -> p60, r4 -> p80 [p60] | RET ADD_IMM
831: 939 942 943 943, r44 -> p99 | RET JMP_REG
832: 939 940 941 943, r15 -> p72, r2 -> p81 [p125] | MOV ADD
833: 940 941 942 943, r0 -> p51, r13 -> p45 | MOV STORE
834: 940 941 942 943, r13 -> p45 | MOV STORE
835: 941 942 943 944, r13 -> p45 | MOV STORE
836: 941 942 945 945, r2 -> p81, r6 -> p100 [p114] | MOV LOAD
837: 942 943 944 945, r13 -> p45 | MOV STORE
838: 942 943 946 946, r4 -> p80, r0 -> p112 [p51] | MOV LOAD
839: 943 944 945 946, r13 -> p45 | MOV STORE
840: 943 944 945 946, r13 -> p45 | MOV STORE
841: 943 945 946 946, r6 -> p100, r13 -> p45 | MOV STORE
842: 943 946 947 947, r0 -> p112, r13 -> p45 | MOV STORE
843: 944 945 948 948, r5 -> p12, r44 -> p0 [p99] | MOVZX LOAD
844: 945 948 949 949, r44 -> p0, r1 -> p9 [p69] | MOVZX ZEXT_WORD_TO_DWORD
845: 945 949 950 950, r1 -> p9, r0 -> p84 [p112] | LEA LEA
846: 946 950 951 951, r0 -> p84, r44 -> p78 [p0], r49 -> p92 [p5] | CMP SUB_IMM
847: 946 951 952 952, r49 -> p92 | J JMP_IMM
848: 956 957 958 958, r1 -> p9, r44 -> p102 [p78], r49 -> p96 [p92] | CMP SUB_IMM
849: 956 958 959 959, r49 -> p96 | J JMP_IMM
850: 956 957 958 959, r1 -> p9, r44 -> p107 [p102], r49 -> p57 [p96] | CMP SUB_IMM
851: 956 958 959 959, r49 -> p57 | J JMP_IMM
852: 957 958 959 959, r1 -> p9, r44 -> p74 [p107], r49 -> p68 [p57] | CMP SUB_IMM
853: 957 958 959 960 | NOP NOP
854: 957 959 960 960, r49 -> p68 | J JMP_IMM
855: 957 959 960 960, r1 -> p9, r44 -> p82 [p74], r49 -> p4 [p68] | CMP SUB_IMM
856: 958 959 960 960 | NOP NOP
857: 959 960 961 961, r49 -> p4 | J JMP_IMM
858: 959 960 961 961, r1 -> p9, r44 -> p56 [p82], r49 -> p109 [p4] | CMP SUB_IMM
859: 959 961 962 962, r49 -> p109 | J JMP_IMM
860: 959 960 961 962, r1 -> p9, r44 -> p115 [p56], r49 -> p117 [p109] | CMP SUB_IMM
861: 960 961 962 962, r49 -> p117 | J JMP_IMM
862: 960 961 964 964, r5 -> p12, r0 -> p77 [p84] | MOV LOAD
863: 960 964 965 965, r0 -> p77, r0 -> p10 [p77], r49 -> p88 [p117] | AND AND_IMM
864: 960 965 966 966, r0 -> p10, r44 -> p50 [p115], r49 -> p2 [p88] | CMP SUB_IMM
865: 961 966 967 967, r49 -> p2 | J JMP_IMM
866: 961 962 963 967, r44 -> p75 [p50] | MOV SAVE_PC
867: 962 963 966 967, r44 -> p75, r8 -> p1 [p101] | MOV LOAD
868: 962 966 967 967, r5 -> p12, r8 -> p1, r44 -> p13 [p75], r49 -> p64 [p2] | CMP SUB
869: 962 967 968 968, r49 -> p64 | J JMP_IMM
870: 964 965 966 968, r44 -> p127 [p13] | MOV SAVE_PC
871: 965 966 969 969, r44 -> p127, r7 -> p118 [p86] | MOV LOAD
872: 966 969 970 970, r5 -> p12, r7 -> p118, r44 -> p85 [p127], r49 -> p15 [p64] | CMP SUB
873: 967 970 971 971, r49 -> p15 | J JMP_IMM
874: 967 968 969 971, r44 -> p119 [p85] | MOV SAVE_PC
875: 967 969 972 972, r44 -> p119, r11 -> p11 [p71] | MOV LOAD
876: 967 972 973 973, r5 -> p12, r11 -> p11, r44 -> p87 [p119], r49 -> p54 [p15] | CMP SUB
877: 968 973 974 974, r49 -> p54 | J JMP_IMM
878: 968 969 970 974, r44 -> p63 [p87] | MOV SAVE_PC
879: 969 970 973 974, r44 -> p63, r9 -> p126 [p90] | MOV LOAD
880: 970 973 974 974, r5 -> p12, r9 -> p126, r44 -> p97 [p63], r49 -> p67 [p54] | CMP SUB
881: 971 974 975 975, r49 -> p67 | J JMP_IMM
882: 971 972 973 975, r44 -> p55 [p97] | MOV SAVE_PC
883: 972 973 976 976, r44 -> p55, r10 -> p70 [p83] | MOV LOAD
884: 973 976 977 977, r5 -> p12, r10 -> p70, r44 -> p58 [p55], r49 -> p123 [p67] | CMP SUB
885: 974 977 978 978, r49 -> p123 | J JMP_IMM
886: 974 975 976 978, r1 -> p9, r44 -> p73 [p58], r49 -> p111 [p123] | CMP SUB_IMM
887: 974 976 977 978, r49 -> p111 | J JMP_IMM
888: 974 975 976 978, r1 -> p9, r44 -> p110 [p73], r49 -> p105 [p111] | CMP SUB_IMM
889: 975 976 977 979, r1 -> p65 [p9] | SET ADD
890: 975 976 977 979, r49 -> p105, r1 -> p44 [p65] | SET ADD_IMM
891: 976 977 978 979 | JMP JMP_IMM
892: 977 978 979 979, r6 -> p100, r6 -> p100, r44 -> p14 [p110], r49 -> p98 [p105] | TEST AND
893: 978 979 980 980, r1 -> p44, r13 -> p45 | MOV STORE
894: 978 979 980 980, r49 -> p98 | J JMP_IMM
895: 978 979 980 980, r13 -> p45, r6 -> p100 | MOV STORE
896: 978 979 980 980, r14 -> p93, r14 -> p93, r44 -> p94 [p14], r49 -> p62 [p98] | TEST AND
897: 979 980 981 981, r2 -> p81, r44 -> p116 [p94] | MOV LEA
898: 979 981 982 982, r13 -> p45, r44 -> p116 | MOV STORE
899: 979 980 981 982, r49 -> p62 | J JMP_IMM
900: 979 980 983 983, r14 -> p93, r12 -> p6 [p113] | MOV LOAD
901: 980 981 984 984, r13 -> p45, r6 -> p106 [p100] | MOV LOAD
902: 980 981 984 984, r13 -> p45, r8 -> p120 [p1] | MOV LOAD
903: 980 983 986 986, r12 -> p6, r0 -> p52 [p10] | MOV LOAD
904: 980 983 986 986, r12 -> p6, r2 -> p3 [p81] | MOV LOAD
905: 981 986 987 987, r0 -> p52, r6 -> p106, r44 -> p104 [p116], r49 -> p95 [p62] | CMP SUB
906: 982 987 988 988, r49 -> p95 | J JMP_IMM
907: 992 993 994 994, r2 -> p3, r8 -> p120, r44 -> p121 [p104], r49 -> p76 [p95] | CMP SUB
908: 992 994 995 995, r49 -> p76 | J JMP_IMM
909: 992 993 994 995, r8 -> p120, r44 -> p108 [p121], r49 -> p61 [p76] | CMP SUB_IMM
910: 992 994 995 995, r49 -> p61 | J JMP_IMM
911: 993 994 995 995, r2 -> p3, r44 -> p124 [p108], r49 -> p66 [p61] | CMP SUB_IMM
912: 993 995 996 996, r49 -> p66 | J JMP_IMM
913: 993 994 995 996, r0 -> p52, r6 -> p106, r44 -> p103 [p124], r49 -> p49 [p66] | CMP SUB
914: 993 995 996 996 | XCHG NOP
915: 994 995 996 996, r49 -> p49 | J JMP_IMM
916: 1000 1001 1002 1002, r2 -> p3, r8 -> p120, r44 -> p7 [p103], r49 -> p89 [p49] | CMP SUB
917: 1000 1001 1002 1002 | NOP NOP
918: 1000 1002 1003 1003, r49 -> p89 | J JMP_IMM
919: 1000 1001 1002 1003, r8 -> p120, r0 -> p59 [p52] | MOV ADD
920: 1001 1002 1003 1003, r0 -> p59, r2 -> p3, r0 -> p8 [p59], r49 -> p91 [p89] | SUB SUB
921: 1001 1002 1003 1003 | NOP NOP
922: 1001 1002 1003 1004 | JMP JMP_IMM
923: 1001 1003 1004 1004, r0 -> p8, r0 -> p8, r44 -> p53 [p7], r49 -> p60 [p91] | TEST AND
924: 1002 1004 1005 1005, r49 -> p60 | J JMP_IMM
925: 1002 1003 1004 1005, r8 -> p120, r44 -> p125 [p53], r49 -> p114 [p60] | CMP SUB_IMM
926: 1003 1004 1005 1005, r49 -> p114 | J JMP_IMM
927: 1003 1004 1005 1005, r6 -> p106, r44 -> p51 [p125], r49 -> p99 [p114] | CMP SUB_IMM
928: 1003 1005 1006 1006, r49 -> p99 | J JMP_IMM
929: 1003 1004 1005 1006, r12 -> p6, r7 -> p69 [p118] | MOV ADD
930: 1004 1005 1006 1006 | JMP JMP_IMM
931: 1004 1005 1008 1008, r7 -> p69, r1 -> p112 [p44] | MOV LOAD
932: 1005 1008 1009 1009, r1 -> p112, r1 -> p112, r44 -> p0 [p51], r49 -> p5 [p99] | TEST AND
933: 1005 1009 1010 1010, r49 -> p5 | J JMP_IMM
934: 1005 1008 1011 1011, r1 -> p112, r0 -> p78 [p8] | MOV LOAD
935: 1005 1008 1011 1011, r1 -> p112, r2 -> p92 [p3] | MOV LOAD
936: 1006 1011 1012 1012, r0 -> p78, r6 -> p106, r44 -> p102 [p0], r49 -> p96 [p5] | CMP SUB
937: 1006 1012 1013 1013, r49 -> p96 | J JMP_IMM
938: 1017 1018 1019 1019, r8 -> p120, r2 -> p92, r44 -> p107 [p102], r49 -> p57 [p96] | CMP SUB
939: 1017 1019 1020 1020, r49 -> p57 | J JMP_IMM
940: 1024 1025 1026 1026, r0 -> p78, r6 -> p106, r44 -> p74 [p107], r49 -> p68 [p57] | CMP SUB
941: 1024 1026 1027 1027, r49 -> p68 | J JMP_IMM
942: 1024 1025 1026 1027, r8 -> p120, r2 -> p92, r44 -> p82 [p74], r49 -> p4 [p68] | CMP SUB
943: 1024 1025 1026 1027 | NOP NOP
944: 1025 1026 1027 1027, r49 -> p4 | J JMP_IMM
945: 1031 1032 1033 1033, r1 -> p112, r13 -> p45 | MOV STORE
946: 1031 1032 1033 1033, r13 -> p45, r1 -> p112 | MOV STORE
947: 1031 1032 1033 1033, r7 -> p69, r13 -> p45 | MOV STORE
948: 1031 1032 1033 1033, r13 -> p45, r7 -> p69 | MOV STORE
949: 1032 1033 1034 1034, r12 -> p6, r13 -> p45 | MOV STORE
950: 1032 1033 1036 1036, r13 -> p45, r45 -> p56 [p122] | CMP LOAD
951: 1032 1036 1037 1037, r45 -> p56, r44 -> p109 [p82], r49 -> p84 [p4] | CMP SUB
952: 1032 1037 1038 1038, r49 -> p84 | J JMP_IMM
953: 1042 1043 1046 1046, r5 -> p12, r45 -> p77 [p56] | CMP LOAD
954: 1042 1046 1047 1047, r45 -> p77, r44 -> p117 [p109], r49 -> p115 [p84] | CMP SUB_IMM
955: 1042 1047 1048 1048, r49 -> p115 | J JMP_IMM
956: 1042 1043 1046 1048, r5 -> p12, r3 -> p88 [p79] | MOV LOAD
957: 1043 1044 1045 1048, r45 -> p50 [p77] | CMP SAVE_PC
958: 1043 1045 1048 1048, r45 -> p50, r45 -> p101 [p50] | CMP LOAD
959: 1043 1048 1049 1049, r3 -> p88, r45 -> p101, r44 -> p75 [p117], r49 -> p2 [p115] | CMP SUB
960: 1043 1049 1050 1050, r49 -> p2 | J JMP_IMM
961: 1054 1055 1056 1056, r44 -> p13 [p75] | MOV SAVE_PC
962: 1054 1056 1059 1059, r44 -> p13, r2 -> p86 [p92] | MOV LOAD
963: 1054 1059 1060 1060, r2 -> p86, r2 -> p86, r44 -> p127 [p13], r49 -> p64 [p2] | TEST AND
964: 1054 1060 1061 1061, r49 -> p64 | J JMP_IMM
965: 1065 1066 1069 1069, r2 -> p86, r44 -> p85 [p127] | MOVSX LOAD
966: 1065 1069 1070 1070, r44 -> p85, r0 -> p71 [p78] | MOVSX SEXT_DWORD_TO_QWORD
967: 1065 1066 1067 1070, r44 -> p119 [p85] | MOV SAVE_PC
968: 1065 1067 1070 1070, r44 -> p119, r2 -> p15 [p86] | MOV LOAD
969: 1066 1070 1071 1071, r0 -> p71, r0 -> p71, r0 -> p87 [p71] | LEA LEA
970: 1066 1071 1072 1072, r0 -> p87, r0 -> p90 [p87], r49 -> p63 [p64] | SHL SHL_IMM
971: 1066 1072 1075 1075, r2 -> p15, r0 -> p90, r45 -> p54 [p101] | CMP LOAD
972: 1066 1075 1076 1076, r45 -> p54, r44 -> p97 [p119], r49 -> p83 [p63] | CMP SUB
973: 1069 1076 1077 1077, r49 -> p83 | J JMP_IMM
974: 1070 1071 1074 1077, r5 -> p12, r45 -> p55 [p54] | CMP LOAD
975: 1070 1074 1075 1077, r45 -> p55, r44 -> p67 [p97], r49 -> p58 [p83] | CMP SUB_IMM
976: 1070 1075 1076 1077, r49 -> p58 | J JMP_IMM
977: 1080 1081 1084 1084, r5 -> p12, r3 -> p123 [p88] | MOV LOAD
978: 1080 1081 1082 1084, r45 -> p73 [p55] | CMP SAVE_PC
979: 1080 1082 1085 1085, r45 -> p73, r45 -> p111 [p73] | CMP LOAD
980: 1080 1085 1086 1086, r3 -> p123, r45 -> p111, r44 -> p9 [p67], r49 -> p65 [p58] | CMP SUB
981: 1081 1086 1087 1087, r49 -> p65 | J JMP_IMM
982: 1091 1092 1093 1093, r44 -> p110 [p9] | MOV SAVE_PC
983: 1091 1093 1096 1096, r44 -> p110, r2 -> p105 [p15] | MOV LOAD
984: 1091 1096 1097 1097, r2 -> p105, r2 -> p105, r44 -> p14 [p110], r49 -> p98 [p65] | TEST AND
985: 1091 1097 1098 1098, r49 -> p98 | J JMP_IMM
986: 1102 1103 1106 1106, r2 -> p105, r44 -> p94 [p14] | MOVSX LOAD
987: 1102 1106 1107 1107, r44 -> p94, r0 -> p113 [p90] | MOVSX SEXT_DWORD_TO_QWORD
988: 1102 1103 1104 1107, r44 -> p100 [p94] | MOV SAVE_PC
989: 1102 1104 1107 1107, r44 -> p100, r6 -> p1 [p106] | MOV LOAD
990: 1103 1107 1108 1108, r0 -> p113, r0 -> p113, r0 -> p10 [p113] | LEA LEA
991: 1103 1108 1109 1109, r0 -> p10, r0 -> p81 [p10], r49 -> p116 [p98] | SHL SHL_IMM
992: 1103 1109 1112 1112, r6 -> p1, r0 -> p81, r45 -> p62 [p111] | CMP LOAD
993: 1103 1112 1113 1113, r45 -> p62, r44 -> p104 [p100], r49 -> p95 [p116] | CMP SUB
994: 1106 1113 1114 1114, r49 -> p95 | J JMP_IMM
995: 1107 1108 1111 1114, r5 -> p12, r3 -> p121 [p123] | MOV LOAD
996: 1107 1108 1109 1114, r45 -> p76 [p62] | CMP SAVE_PC
997: 1107 1109 1112 1114, r45 -> p76, r45 -> p108 [p76] | CMP LOAD
998: 1108 1112 1113 1115, r3 -> p121, r45 -> p108, r44 -> p61 [p104], r49 -> p124 [p95] | CMP SUB
999: 1109 1110 1113 1115, r5 -> p12, r44 -> p66 [p61] | MOVZX LOAD
1000: 1112 1113 1114 1115, r44 -> p66, r14 -> p103 [p93] | MOVZX ZEXT_BYTE_TO_DWORD
Processed 1000 trace records.
Micro-ops: 1000
Macro-ops: 754
TotalCycles: 1116
uIPC: 0.896057
