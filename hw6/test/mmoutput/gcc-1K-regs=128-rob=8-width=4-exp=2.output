Processing trace...
1: 0 1 2 2, r13 -> p50 [p13] | SET ADD
2: 0 1 2 2, r49 -> p49, r13 -> p51 [p50] | SET ADD_IMM
3: 0 1 4 4, r5 -> p5, r45 -> p52 [p45] | CMP LOAD
4: 0 4 5 5, r45 -> p52, r3 -> p3, r44 -> p53 [p44], r49 -> p54 [p49] | CMP SUB
5: 1 2 5 5, r5 -> p5, r3 -> p55 [p3] | MOV LOAD
6: 1 2 3 5, r0 -> p56 [p0] | SET ADD
7: 1 5 6 6, r49 -> p54, r0 -> p57 [p56] | SET ADD_IMM
8: 1 2 3 6, r12 -> p58 [p12] | XOR ADD
9: 2 6 7 7, r13 -> p51, r0 -> p57, r13 -> p59 [p51], r49 -> p60 [p54] | OR OR
10: 2 3 4 7 | JMP JMP_IMM
11: 4 5 8 8, r3 -> p55, r0 -> p61 [p57] | MOV LOAD
12: 5 8 9 9, r0 -> p61, r0 -> p61, r44 -> p62 [p53], r49 -> p63 [p60] | TEST AND
13: 5 9 10 10, r49 -> p63 | J JMP_IMM
14: 5 8 11 11, r0 -> p61, r7 -> p64 [p7] | MOV LOAD
15: 6 11 14 14, r7 -> p64, r44 -> p65 [p62] | MOVZX LOAD
16: 6 14 15 15, r44 -> p65, r0 -> p66 [p61] | MOVZX ZEXT_WORD_TO_DWORD
17: 7 15 16 16, r0 -> p66, r44 -> p67 [p65], r49 -> p68 [p63] | CMP SUB_IMM
18: 7 16 17 17, r49 -> p68 | J JMP_IMM
19: 8 9 10 17, r6 -> p69 [p6] | XOR ADD
20: 9 10 11 17, r44 -> p70 [p67] | CALL SAVE_PC
21: 10 11 12 17, r4 -> p4, r4 -> p71 [p4] | CALL SUB_IMM
22: 11 12 13 18, r44 -> p70, r4 -> p71 | CALL STORE
23: 14 15 16 18 | CALL JMP_IMM
24: 15 16 17 18, r15 -> p15, r4 -> p71 | PUSH STORE
25: 16 17 18 18, r4 -> p71, r4 -> p72 [p71] | PUSH SUB_IMM
26: 17 18 19 19, r14 -> p14, r4 -> p72 | PUSH STORE
27: 17 18 19 19, r4 -> p72, r4 -> p73 [p72] | PUSH SUB_IMM
28: 17 19 20 20, r13 -> p59, r4 -> p73 | PUSH STORE
29: 17 19 20 20, r4 -> p73, r4 -> p74 [p73] | PUSH SUB_IMM
30: 18 19 20 20, r7 -> p64, r13 -> p75 [p59] | MOV ADD
31: 18 20 21 21, r12 -> p58, r4 -> p74 | PUSH STORE
32: 18 20 21 21, r4 -> p74, r4 -> p76 [p74] | PUSH SUB_IMM
33: 18 19 20 21, r6 -> p69, r12 -> p77 [p58] | MOV ADD
34: 19 21 22 22, r5 -> p5, r4 -> p76 | PUSH STORE
35: 19 21 22 22, r4 -> p76, r4 -> p78 [p76] | PUSH SUB_IMM
36: 20 22 23 23, r3 -> p55, r4 -> p78 | PUSH STORE
37: 20 22 23 23, r4 -> p78, r4 -> p79 [p78] | PUSH SUB_IMM
38: 20 23 24 24, r4 -> p79, r4 -> p80 [p79], r49 -> p81 [p68] | SUB SUB_IMM
39: 21 23 26 26, r7 -> p64, r44 -> p82 [p70] | MOVZX LOAD
40: 21 26 27 27, r44 -> p82, r0 -> p83 [p66] | MOVZX ZEXT_WORD_TO_DWORD
41: 21 27 28 28, r0 -> p83, r44 -> p84 [p82], r49 -> p85 [p81] | CMP SUB_IMM
42: 22 28 29 29, r49 -> p85 | J JMP_IMM
43: 22 23 26 29, r7 -> p64, r5 -> p86 [p5] | MOV LOAD
44: 23 26 27 29, r5 -> p86, r44 -> p87 [p84], r49 -> p88 [p85] | CMP SUB_IMM
45: 23 27 28 29, r49 -> p88 | J JMP_IMM
46: 24 25 26 30, r45 -> p89 [p52] | CMP SAVE_PC
47: 26 27 30 30, r45 -> p89, r45 -> p90 [p89] | CMP LOAD
48: 27 30 31 31, r5 -> p86, r45 -> p90, r44 -> p91 [p87], r49 -> p92 [p88] | CMP SUB
49: 28 31 32 32, r49 -> p92 | J JMP_IMM
50: 29 30 31 32, r44 -> p93 [p91] | MOV SAVE_PC
51: 29 31 34 34, r44 -> p93, r2 -> p94 [p2] | MOV LOAD
52: 29 34 35 35, r2 -> p94, r2 -> p94, r44 -> p95 [p93], r49 -> p96 [p92] | TEST AND
53: 29 35 36 36, r49 -> p96 | J JMP_IMM
54: 30 34 37 37, r2 -> p94, r12 -> p97 [p77] | MOV LOAD
55: 30 37 38 38, r12 -> p97, r12 -> p98 [p97], r49 -> p99 [p96] | AND AND_IMM
56: 31 32 33 38, r45 -> p100 [p90] | CMP SAVE_PC
57: 32 33 36 38, r45 -> p100, r45 -> p101 [p100] | CMP LOAD
58: 32 36 37 38, r5 -> p86, r45 -> p101, r44 -> p102 [p95], r49 -> p103 [p99] | CMP SUB
59: 34 37 38 39, r49 -> p103 | J JMP_IMM
60: 35 36 37 39, r44 -> p104 [p102] | MOV SAVE_PC
61: 36 37 40 40, r44 -> p104, r2 -> p105 [p94] | MOV LOAD
62: 37 40 41 41, r2 -> p105, r2 -> p105, r44 -> p106 [p104], r49 -> p107 [p103] | TEST AND
63: 38 41 42 42, r49 -> p107 | J JMP_IMM
64: 38 40 43 43, r2 -> p105, r0 -> p108 [p83] | MOV LOAD
65: 38 43 44 44, r5 -> p86, r0 -> p108, r44 -> p109 [p106], r49 -> p110 [p107] | CMP SUB
66: 38 44 45 45, r49 -> p110 | J JMP_IMM
67: 39 40 41 45, r45 -> p111 [p101] | CMP SAVE_PC
68: 39 41 44 45, r45 -> p111, r45 -> p112 [p111] | CMP LOAD
69: 40 44 45 45, r5 -> p86, r45 -> p112, r44 -> p113 [p109], r49 -> p114 [p110] | CMP SUB
70: 41 45 46 46, r49 -> p114 | J JMP_IMM
71: 42 43 44 46, r44 -> p115 [p113] | MOV SAVE_PC
72: 43 44 47 47, r44 -> p115, r2 -> p116 [p105] | MOV LOAD
73: 44 47 48 48, r2 -> p116, r2 -> p116, r44 -> p117 [p115], r49 -> p118 [p114] | TEST AND
74: 45 48 49 49, r49 -> p118 | J JMP_IMM
75: 45 47 50 50, r2 -> p116, r45 -> p119 [p112] | ADD LOAD
76: 45 50 51 51, r45 -> p119, r44 -> p120 [p117], r49 -> p121 [p118] | ADD ADD_IMM
77: 45 51 52 52, r44 -> p120, r2 -> p116 | ADD STORE
78: 46 47 48 52, r5 -> p86, r44 -> p122 [p120], r49 -> p123 [p121] | CMP SUB_IMM
79: 46 47 48 52, r12 -> p98, r12 -> p124 [p98] | MOV ADD
80: 47 48 49 52, r49 -> p123 | J JMP_IMM
81: 48 52 55 55, r13 -> p75, r45 -> p125 [p119] | CMP LOAD
82: 49 55 56 56, r45 -> p125, r44 -> p126 [p122], r49 -> p127 [p123] | CMP SUB_IMM
83: 50 52 55 56, r13 -> p75, r44 -> p13 [p126] | MOVZX LOAD
84: 51 55 56 56, r44 -> p13, r5 -> p50 [p86] | MOVZX ZEXT_BYTE_TO_DWORD
85: 52 56 57 57, r49 -> p127 | J JMP_IMM
86: 52 53 56 57, r12 -> p124, r3 -> p45 [p55] | MOV LOAD
87: 52 53 56 57, r13 -> p75, r2 -> p44 [p116] | MOV LOAD
88: 52 56 57 57, r3 -> p45, r3 -> p45, r44 -> p49 [p13], r49 -> p3 [p127] | TEST AND
89: 55 57 58 58, r49 -> p3 | J JMP_IMM
90: 56 57 60 60, r3 -> p45, r0 -> p0 [p108] | MOV LOAD
91: 56 60 63 63, r0 -> p0, r45 -> p56 [p125] | CMP LOAD
92: 56 63 64 64, r45 -> p56, r44 -> p12 [p49], r49 -> p51 [p3] | CMP SUB_IMM
93: 57 64 65 65, r49 -> p51 | J JMP_IMM
94: 57 58 61 65, r3 -> p45, r3 -> p54 [p45] | MOV LOAD
95: 57 61 62 65, r3 -> p54, r3 -> p54, r44 -> p57 [p12], r49 -> p53 [p51] | TEST AND
96: 57 62 63 65, r49 -> p53 | J JMP_IMM
97: 58 59 60 66, r4 -> p80, r4 -> p60 [p80], r49 -> p7 [p53] | ADD ADD_IMM
98: 60 61 64 66, r4 -> p60, r3 -> p62 [p54] | POP LOAD
99: 63 64 65 66, r4 -> p60, r4 -> p61 [p60] | POP ADD_IMM
100: 64 65 68 68, r4 -> p61, r5 -> p65 [p50] | POP LOAD
101: 65 66 67 68, r4 -> p61, r4 -> p63 [p61] | POP ADD_IMM
102: 65 67 70 70, r4 -> p63, r12 -> p6 [p124] | POP LOAD
103: 65 67 68 70, r4 -> p63, r4 -> p67 [p63] | POP ADD_IMM
104: 65 68 71 71, r4 -> p67, r13 -> p4 [p75] | POP LOAD
105: 66 68 69 71, r4 -> p67, r4 -> p71 [p67] | POP ADD_IMM
106: 66 69 72 72, r4 -> p71, r14 -> p72 [p14] | POP LOAD
107: 66 69 70 72, r4 -> p71, r4 -> p73 [p71] | POP ADD_IMM
108: 68 70 73 73, r4 -> p73, r15 -> p59 [p15] | POP LOAD
109: 68 70 71 73, r4 -> p73, r4 -> p74 [p73] | POP ADD_IMM
110: 70 71 74 74, r4 -> p74, r44 -> p58 [p57] | RET LOAD
111: 70 71 72 74, r4 -> p74, r4 -> p76 [p74] | RET ADD_IMM
112: 71 74 75 75, r44 -> p58 | RET JMP_REG
113: 71 72 73 75 | JMP JMP_IMM
114: 72 73 74 75, r12 -> p6, r12 -> p78 [p6], r49 -> p79 [p7] | ADD ADD_IMM
115: 72 73 74 75, r3 -> p62, r3 -> p68 [p62], r49 -> p70 [p79] | ADD ADD_IMM
116: 73 74 77 77, r5 -> p65, r45 -> p66 [p56] | CMP LOAD
117: 73 77 78 78, r12 -> p78, r45 -> p66, r44 -> p82 [p58], r49 -> p81 [p70] | CMP SUB
118: 74 78 79 79, r49 -> p81 | J JMP_IMM
119: 74 75 78 79, r5 -> p65, r0 -> p5 [p0] | MOV LOAD
120: 75 78 81 81, r0 -> p5, r45 -> p84 [p66] | CMP LOAD
121: 75 81 82 82, r45 -> p84, r44 -> p85 [p82], r49 -> p52 [p81] | CMP SUB_IMM
122: 75 82 83 83, r49 -> p52 | J JMP_IMM
123: 75 78 81 83, r0 -> p5, r0 -> p89 [p5] | MOV LOAD
124: 77 81 84 84, r0 -> p89, r0 -> p87 [p89] | MOV LOAD
125: 78 84 85 85, r0 -> p87, r0 -> p88 [p87], r49 -> p91 [p52] | AND AND_IMM
126: 79 85 86 86, r0 -> p88, r44 -> p2 [p85], r49 -> p93 [p91] | CMP SUB_IMM
127: 79 86 87 87, r49 -> p93 | J JMP_IMM
128: 81 82 85 87, r5 -> p65, r11 -> p92 [p11] | MOV LOAD
129: 82 85 86 87, r11 -> p92, r11 -> p92, r44 -> p77 [p2], r49 -> p97 [p93] | TEST AND
130: 83 86 87 87, r49 -> p97 | J JMP_IMM
131: 83 84 87 88, r5 -> p65, r1 -> p96 [p1] | MOV LOAD
132: 84 85 86 88, r5 -> p65 | MOV STORE
133: 85 87 88 88, r1 -> p96, r5 -> p65 | MOV STORE
134: 86 87 88 88 | JMP JMP_IMM
135: 87 88 91 91, r5 -> p65, r3 -> p90 [p68] | MOV LOAD
136: 87 91 94 94, r3 -> p90, r0 -> p100 [p88] | MOV LOAD
137: 87 94 95 95, r0 -> p100, r0 -> p100, r44 -> p95 [p77], r49 -> p99 [p97] | TEST AND
138: 87 95 96 96, r49 -> p99 | J JMP_IMM
139: 88 94 97 97, r0 -> p100, r7 -> p102 [p64] | MOV LOAD
140: 88 97 100 100, r7 -> p102, r45 -> p94 [p84] | CMP LOAD
141: 88 100 101 101, r45 -> p94, r44 -> p104 [p95], r49 -> p103 [p99] | CMP SUB_IMM
142: 88 101 102 102, r49 -> p103 | J JMP_IMM
143: 91 97 100 102, r7 -> p102, r1 -> p83 [p96] | MOV LOAD
144: 94 100 101 102, r1 -> p83, r44 -> p106 [p104], r49 -> p107 [p103] | CMP SUB_IMM
145: 95 101 102 102, r49 -> p107 | J JMP_IMM
146: 96 97 98 103, r0 -> p101 [p100] | MOV ADD_IMM
147: 97 98 99 103 | JMP JMP_IMM
148: 100 101 102 103, r0 -> p101, r1 -> p83, r0 -> p111 [p101], r49 -> p109 [p107] | ADD ADD
149: 101 102 103 103, r1 -> p83, r0 -> p111, r44 -> p110 [p106], r49 -> p113 [p109] | CMP SUB
150: 102 103 104 104, r49 -> p113 | J JMP_IMM
151: 102 103 104 104, r1 -> p83, r13 -> p105 [p4] | MOV ADD
152: 102 103 104 104, r45 -> p115 [p94] | CMP SAVE_PC
153: 102 104 107 107, r45 -> p115, r45 -> p114 [p115] | CMP LOAD
154: 103 107 108 108, r45 -> p114, r13 -> p105, r44 -> p112 [p110], r49 -> p117 [p113] | CMP SUB
155: 103 104 105 108, r0 -> p111, r5 -> p65 | MOV STORE
156: 103 108 109 109, r49 -> p117 | J JMP_IMM
157: 103 104 105 109, r44 -> p118 [p112] | MOV SAVE_PC
158: 104 105 108 109, r44 -> p118, r2 -> p120 [p44] | MOV LOAD
159: 104 108 109 109, r2 -> p120, r2 -> p120, r44 -> p121 [p118], r49 -> p98 [p117] | TEST AND
160: 104 109 110 110, r49 -> p98 | J JMP_IMM
161: 107 108 111 111, r2 -> p120, r10 -> p119 [p10] | MOV LOAD
162: 108 111 112 112, r10 -> p119, r10 -> p119, r44 -> p122 [p121], r49 -> p123 [p98] | TEST AND
163: 108 112 113 113, r49 -> p123 | J JMP_IMM
164: 109 110 111 113, r13 -> p105, r13 -> p126 [p105], r49 -> p86 [p123] | ADD ADD_IMM
165: 109 110 113 113, r5 -> p65, r45 -> p55 [p114] | CMP LOAD
166: 109 113 114 114, r45 -> p55, r13 -> p126, r44 -> p116 [p122], r49 -> p13 [p86] | CMP SUB
167: 109 114 115 115, r49 -> p13 | J JMP_IMM
168: 110 111 114 115, r5 -> p65, r45 -> p127 [p55] | ADD LOAD
169: 111 114 115 115, r45 -> p127, r44 -> p108 [p116], r49 -> p125 [p13] | ADD ADD_IMM
170: 112 115 116 116, r44 -> p108, r5 -> p65 | ADD STORE
171: 113 116 119 119, r5 -> p65, r45 -> p49 [p127] | ADD LOAD
172: 113 119 120 120, r45 -> p49, r44 -> p3 [p108], r49 -> p45 [p125] | ADD ADD_IMM
173: 113 120 121 121, r44 -> p3, r5 -> p65 | ADD STORE
174: 114 121 124 124, r5 -> p65, r0 -> p12 [p111] | MOV LOAD
175: 115 121 124 124, r5 -> p65, r45 -> p51 [p49] | CMP LOAD
176: 115 124 125 125, r45 -> p51, r0 -> p12, r44 -> p80 [p3], r49 -> p53 [p45] | CMP SUB
177: 115 125 126 126, r49 -> p53 | J JMP_IMM
178: 116 121 124 126, r5 -> p65, r1 -> p54 [p83] | MOV LOAD
179: 119 120 121 126, r6 -> p60 [p69] | XOR ADD
180: 120 121 122 126 | XCHG NOP
181: 121 122 123 127 | JMP JMP_IMM
182: 124 125 128 128, r1 -> p54, r45 -> p50 [p51] | CMP LOAD
183: 124 128 129 129, r45 -> p50, r44 -> p61 [p80], r49 -> p124 [p53] | CMP SUB
184: 125 129 130 130, r49 -> p124 | J JMP_IMM
185: 126 127 130 130, r1 -> p54, r0 -> p63 [p12] | MOV LOAD
186: 126 130 131 131, r0 -> p63, r0 -> p63, r44 -> p75 [p61], r49 -> p67 [p124] | TEST AND
187: 126 131 132 132, r49 -> p67 | J JMP_IMM
188: 126 130 133 133, r0 -> p63, r45 -> p14 [p50] | CMP LOAD
189: 127 133 134 134, r45 -> p14, r44 -> p71 [p75], r49 -> p15 [p67] | CMP SUB
190: 128 134 135 135, r49 -> p15 | J JMP_IMM
191: 129 130 131 135, r6 -> p60, r6 -> p73 [p60], r49 -> p57 [p15] | ADD ADD_IMM
192: 130 131 132 135, r1 -> p54, r1 -> p74 [p54], r49 -> p6 [p57] | ADD ADD_IMM
193: 130 131 134 135, r5 -> p65, r45 -> p7 [p14] | CMP LOAD
194: 131 134 135 136, r6 -> p73, r45 -> p7, r44 -> p62 [p71], r49 -> p79 [p6] | CMP SUB
195: 132 135 136 136, r49 -> p79 | J JMP_IMM
196: 133 134 137 137, r5 -> p65, r1 -> p56 [p74] | MOV LOAD
197: 134 135 136 137, r5 -> p65 | MOV STORE
198: 135 137 138 138, r1 -> p56, r5 -> p65 | MOV STORE
199: 135 136 137 138 | JMP JMP_IMM
200: 135 138 141 141, r5 -> p65, r2 -> p58 [p120] | MOV LOAD
201: 135 141 144 144, r2 -> p58, r0 -> p70 [p63] | MOV LOAD
202: 136 144 145 145, r0 -> p70, r0 -> p70, r44 -> p0 [p62], r49 -> p66 [p79] | TEST AND
203: 136 145 146 146, r49 -> p66 | J JMP_IMM
204: 137 138 139 146, r44 -> p82 [p0] | MOV SAVE_PC
205: 137 139 142 146, r44 -> p82, r9 -> p81 [p9] | MOV LOAD
206: 138 144 147 147, r0 -> p70, r12 -> p5 [p78] | MOV LOAD
207: 138 141 144 147, r2 -> p58, r14 -> p89 [p72] | MOV LOAD
208: 141 142 143 147, r9 -> p81, r9 -> p81, r44 -> p87 [p82], r49 -> p52 [p66] | TEST AND
209: 144 145 146 147, r49 -> p52 | J JMP_IMM
210: 145 147 150 150, r12 -> p5, r44 -> p85 [p87] | MOVZX LOAD
211: 146 150 151 151, r44 -> p85, r2 -> p91 [p58] | MOVZX ZEXT_BYTE_TO_DWORD
212: 146 151 152 152, r2 -> p91, r44 -> p11 [p85], r49 -> p2 [p52] | CMP SUB_IMM
213: 146 152 153 153, r49 -> p2 | J JMP_IMM
214: 147 148 151 153, r5 -> p65, r45 -> p93 [p7] | CMP LOAD
215: 147 151 152 153, r45 -> p93, r44 -> p1 [p11], r49 -> p68 [p2] | CMP SUB
216: 147 152 153 153, r49 -> p68 | J JMP_IMM
217: 147 148 151 154, r5 -> p65, r1 -> p88 [p56] | MOV LOAD
218: 150 151 154 154, r1 -> p88, r6 -> p77 [p73] | MOV LOAD
219: 151 154 155 155, r6 -> p77, r6 -> p77, r44 -> p97 [p1], r49 -> p64 [p68] | TEST AND
220: 152 153 154 155 | NOP NOP
221: 153 155 156 156, r49 -> p64 | J JMP_IMM
222: 153 154 157 157, r12 -> p5, r44 -> p84 [p97] | MOVZX LOAD
223: 153 157 158 158, r44 -> p84, r0 -> p95 [p70] | MOVZX ZEXT_WORD_TO_DWORD
224: 153 158 159 159, r0 -> p95, r44 -> p99 [p84], r49 -> p96 [p64] | CMP SUB_IMM
225: 154 159 160 160, r49 -> p96 | J JMP_IMM
226: 154 158 159 160, r0 -> p95, r44 -> p104 [p99], r49 -> p103 [p96] | CMP SUB_IMM
227: 155 159 160 160, r49 -> p103 | J JMP_IMM
228: 155 158 159 160, r0 -> p95, r44 -> p100 [p104], r49 -> p101 [p103] | CMP SUB_IMM
229: 156 159 160 161, r49 -> p101 | J JMP_IMM
230: 157 158 159 161, r2 -> p107 [p91] | MOV ADD_IMM
231: 158 159 160 161, r12 -> p5, r7 -> p106 [p102] | MOV ADD
232: 159 160 161 161, r44 -> p109 [p100] | CALL SAVE_PC
233: 160 161 162 162, r4 -> p76, r4 -> p4 [p76] | CALL SUB_IMM
234: 160 162 163 163, r44 -> p109, r4 -> p4 | CALL STORE
235: 160 161 162 163 | CALL JMP_IMM
236: 160 162 163 163, r14 -> p89, r4 -> p4 | PUSH STORE
237: 161 162 163 163, r4 -> p4, r4 -> p94 [p4] | PUSH SUB_IMM
238: 161 162 163 164, r2 -> p107, r14 -> p115 [p89] | MOV ADD
239: 161 163 164 164, r13 -> p126, r4 -> p94 | PUSH STORE
240: 161 163 164 164, r4 -> p94, r4 -> p110 [p94] | PUSH SUB_IMM
241: 162 163 164 164, r6 -> p77, r13 -> p113 [p126] | MOV ADD
242: 163 164 165 165, r12 -> p5, r4 -> p110 | PUSH STORE
243: 163 164 165 165, r4 -> p110, r4 -> p112 [p110] | PUSH SUB_IMM
244: 163 165 166 166, r5 -> p65, r4 -> p112 | PUSH STORE
245: 163 165 166 166, r4 -> p112, r4 -> p44 [p112] | PUSH SUB_IMM
246: 164 165 166 166, r7 -> p106, r5 -> p118 [p65] | MOV ADD
247: 164 166 167 167, r3 -> p90, r4 -> p44 | PUSH STORE
248: 164 166 167 167, r4 -> p44, r4 -> p117 [p44] | PUSH SUB_IMM
249: 164 167 170 170, r7 -> p106, r44 -> p10 [p109] | MOVZX LOAD
250: 165 170 171 171, r44 -> p10, r0 -> p121 [p95] | MOVZX ZEXT_WORD_TO_DWORD
251: 165 171 172 172, r0 -> p121, r44 -> p98 [p10], r49 -> p105 [p101] | CMP SUB_IMM
252: 166 172 173 173, r49 -> p105 | J JMP_IMM
253: 166 167 170 173, r7 -> p106, r3 -> p123 [p90] | MOV LOAD
254: 166 167 168 173, r45 -> p114 [p93] | CMP SAVE_PC
255: 167 168 171 173, r45 -> p114, r45 -> p122 [p114] | CMP LOAD
256: 167 171 172 174, r3 -> p123, r45 -> p122, r44 -> p86 [p98], r49 -> p55 [p105] | CMP SUB
257: 170 172 173 174, r49 -> p55 | J JMP_IMM
258: 171 172 173 174, r44 -> p116 [p86] | MOV SAVE_PC
259: 172 173 176 176, r44 -> p116, r2 -> p13 [p107] | MOV LOAD
260: 173 176 177 177, r2 -> p13, r2 -> p13, r44 -> p127 [p116], r49 -> p108 [p55] | TEST AND
261: 173 177 178 178, r49 -> p108 | J JMP_IMM
262: 173 176 179 179, r2 -> p13, r45 -> p125 [p122] | CMP LOAD
263: 173 179 180 180, r45 -> p125, r3 -> p123, r44 -> p111 [p127], r49 -> p49 [p108] | CMP SUB
264: 174 180 181 181, r49 -> p49 | J JMP_IMM
265: 174 175 176 181, r13 -> p113, r13 -> p113, r44 -> p3 [p111], r49 -> p45 [p49] | TEST AND
266: 174 176 177 181, r49 -> p45 | J JMP_IMM
267: 176 177 180 181, r13 -> p113, r1 -> p83 [p88] | MOV LOAD
268: 177 180 181 182, r1 -> p83, r1 -> p83, r44 -> p69 [p3], r49 -> p51 [p45] | TEST AND
269: 178 181 182 182, r49 -> p51 | J JMP_IMM
270: 179 180 183 183, r1 -> p83, r2 -> p80 [p13] | MOV LOAD
271: 180 183 186 186, r2 -> p80, r45 -> p53 [p125] | CMP LOAD
272: 181 186 187 187, r45 -> p53, r44 -> p12 [p69], r49 -> p61 [p51] | CMP SUB_IMM
273: 181 187 188 188, r49 -> p61 | J JMP_IMM
274: 181 182 185 188, r1 -> p83, r1 -> p124 [p83] | MOV LOAD
275: 181 185 186 188, r1 -> p124, r1 -> p124, r44 -> p50 [p12], r49 -> p75 [p61] | TEST AND
276: 182 186 187 188, r49 -> p75 | J JMP_IMM
277: 182 185 188 189, r1 -> p124, r2 -> p67 [p80] | MOV LOAD
278: 183 188 191 191, r2 -> p67, r45 -> p60 [p53] | CMP LOAD
279: 186 191 192 192, r45 -> p60, r44 -> p15 [p50], r49 -> p54 [p75] | CMP SUB_IMM
280: 187 192 193 193, r49 -> p54 | J JMP_IMM
281: 188 189 192 193, r2 -> p67, r44 -> p57 [p15] | MOVZX LOAD
282: 188 192 193 193, r44 -> p57, r0 -> p14 [p121] | MOVZX ZEXT_BYTE_TO_DWORD
283: 188 189 192 193, r5 -> p118, r45 -> p71 [p60] | CMP LOAD
284: 188 193 194 194, r0 -> p14, r45 -> p71, r44 -> p6 [p57], r49 -> p74 [p54] | CMP SUB
285: 189 194 195 195, r49 -> p74 | J JMP_IMM
286: 191 192 195 195, r2 -> p67, r5 -> p120 [p118] | MOV LOAD
287: 192 193 194 195, r45 -> p63 [p71] | CMP SAVE_PC
288: 193 194 197 197, r45 -> p63, r45 -> p62 [p63] | CMP LOAD
289: 193 197 198 198, r5 -> p120, r45 -> p62, r44 -> p79 [p6], r49 -> p0 [p74] | CMP SUB
290: 193 198 199 199, r49 -> p0 | J JMP_IMM
291: 193 195 196 199, r5 -> p120, r0 -> p9 [p14] | MOV ADD
292: 194 196 197 199, r0 -> p9, r0 -> p78 [p9], r49 -> p72 [p0] | SHR SHR_IMM
293: 195 197 198 199, r0 -> p78, r5 -> p120, r0 -> p82 [p78], r49 -> p66 [p72] | XOR XOR
294: 195 198 199 200, r0 -> p82, r0 -> p87 [p82], r49 -> p58 [p66] | AND AND_IMM
295: 195 199 200 200, r0 -> p87, r0 -> p85 [p87], r49 -> p52 [p58] | SHL SHL_IMM
296: 197 200 203 203, r0 -> p85, r2 -> p7 [p67] | MOV LOAD
297: 198 200 201 203, r0 -> p85, r12 -> p11 [p5] | LEA LEA
298: 199 203 204 204, r2 -> p7, r2 -> p7, r44 -> p2 [p79], r49 -> p56 [p52] | TEST AND
299: 199 204 205 205, r49 -> p56 | J JMP_IMM
300: 199 203 206 206, r2 -> p7, r45 -> p73 [p62] | CMP LOAD
301: 199 206 207 207, r45 -> p73, r5 -> p120, r44 -> p1 [p2], r49 -> p68 [p56] | CMP SUB
302: 200 207 208 208, r49 -> p68 | J JMP_IMM
303: 200 201 202 208 | JMP JMP_IMM
304: 203 204 207 208, r2 -> p7, r12 -> p97 [p11] | MOV LOAD
305: 203 204 205 208, r44 -> p70 [p1] | MOV SAVE_PC
306: 204 205 206 209, r5 -> p120, r44 -> p70 | MOV STORE
307: 205 206 207 209, r44 -> p84 [p70] | MOV SAVE_PC
308: 206 207 208 209, r2 -> p7, r44 -> p84 | MOV STORE
309: 207 208 209 209, r12 -> p97, r0 -> p64 [p85] | MOVSX SEXT_DWORD_TO_QWORD
310: 208 209 210 210, r0 -> p64, r0 -> p64, r14 -> p99 [p115] | LEA LEA
311: 208 210 211 211, r14 -> p99, r14 -> p96 [p99], r49 -> p104 [p68] | SHL SHL_IMM
312: 208 211 212 212, r14 -> p96, r13 -> p103 [p113] | MOV ADD
313: 208 209 210 212, r44 -> p91 [p84] | ADD SAVE_PC
314: 209 210 213 213, r44 -> p91, r44 -> p102 [p91] | ADD LOAD
315: 209 213 214 214, r13 -> p103, r44 -> p102, r13 -> p100 [p103], r49 -> p76 [p104] | ADD ADD
316: 209 210 213 214, r2 -> p7, r45 -> p4 [p73] | CMP LOAD
317: 209 213 214 214, r45 -> p4, r5 -> p120, r44 -> p89 [p102], r49 -> p94 [p76] | CMP SUB
318: 210 214 215 215, r49 -> p94 | J JMP_IMM
319: 211 212 213 215, r45 -> p126 [p4] | CMP SAVE_PC
320: 212 213 216 216, r45 -> p126, r45 -> p110 [p126] | CMP LOAD
321: 212 216 217 217, r3 -> p123, r45 -> p110, r44 -> p112 [p89], r49 -> p65 [p94] | CMP SUB
322: 213 217 218 218, r49 -> p65 | J JMP_IMM
323: 214 215 216 218, r3 -> p123, r0 -> p44 [p64] | MOV ADD
324: 214 216 217 218, r0 -> p44, r0 -> p109 [p44], r49 -> p95 [p65] | SHR SHR_IMM
325: 214 217 218 218, r0 -> p109, r3 -> p123, r0 -> p10 [p109], r49 -> p101 [p95] | XOR XOR
326: 215 218 219 219, r0 -> p10, r0 -> p90 [p10], r49 -> p93 [p101] | AND AND_IMM
327: 215 219 220 220, r0 -> p90, r0 -> p114 [p90], r49 -> p98 [p93] | SHL SHL_IMM
328: 216 220 223 223, r0 -> p114, r2 -> p105 [p7] | MOV LOAD
329: 217 220 221 223, r0 -> p114, r5 -> p86 [p120] | LEA LEA
330: 218 223 224 224, r2 -> p105, r2 -> p105, r44 -> p107 [p112], r49 -> p116 [p98] | TEST AND
331: 218 224 225 225, r49 -> p116 | J JMP_IMM
332: 218 223 226 226, r2 -> p105, r45 -> p55 [p110] | CMP LOAD
333: 218 226 227 227, r3 -> p123, r45 -> p55, r44 -> p122 [p107], r49 -> p127 [p116] | CMP SUB
334: 219 227 228 228, r49 -> p127 | J JMP_IMM
335: 220 221 222 228, r44 -> p108 [p122] | MOV SAVE_PC
336: 223 224 225 228, r3 -> p123, r44 -> p108 | MOV STORE
337: 223 224 225 228, r44 -> p111 [p108] | MOV SAVE_PC
338: 224 225 226 229, r2 -> p105, r44 -> p111 | MOV STORE
339: 225 226 227 229, r12 -> p97, r2 -> p105 | MOV STORE
340: 226 227 230 230, r13 -> p100, r2 -> p49 [p105] | MOV LOAD
341: 227 228 231 231, r13 -> p100, r7 -> p88 [p106] | MOV LOAD
342: 228 230 231 231, r2 -> p49, r44 -> p3 [p111], r49 -> p45 [p127] | CMP SUB_IMM
343: 228 231 232 232, r49 -> p45 | J JMP_IMM
344: 228 229 230 232, r3 -> p123, r44 -> p13 [p3], r49 -> p125 [p45] | CMP SUB_IMM
345: 228 230 231 232, r49 -> p125 | J JMP_IMM
346: 229 230 231 232, r2 -> p49, r44 -> p69 [p13], r49 -> p51 [p125] | CMP SUB_IMM
347: 229 230 231 233, r2 -> p49, r1 -> p83 [p124] | MOV ADD
348: 230 231 232 233, r3 -> p123, r8 -> p12 [p8] | MOV ADD
349: 231 232 233 233, r49 -> p51 | J JMP_IMM
350: 231 232 233 233, r44 -> p61 [p69] | MOV SAVE_PC
351: 232 233 236 236, r44 -> p61, r10 -> p80 [p119] | MOV LOAD
352: 232 233 234 236, r44 -> p53 [p61] | MOV SAVE_PC
353: 232 234 237 237, r44 -> p53, r6 -> p50 [p77] | MOV LOAD
354: 232 236 239 239, r8 -> p12, r10 -> p80, r1 -> p75 [p83] | MOV LOAD
355: 233 239 242 242, r1 -> p75, r44 -> p15 [p53] | MOVSX LOAD
356: 233 242 243 243, r44 -> p15, r0 -> p121 [p114] | MOVSX SEXT_DWORD_TO_QWORD
357: 233 243 246 246, r0 -> p121, r6 -> p50, r9 -> p60 [p81] | MOV LOAD
358: 233 234 235 246, r45 -> p57 [p55] | CMP SAVE_PC
359: 236 237 240 246, r45 -> p57, r45 -> p54 [p57] | CMP LOAD
360: 236 246 247 247, r9 -> p60, r45 -> p54, r44 -> p118 [p15], r49 -> p71 [p51] | CMP SUB
361: 237 247 248 248, r49 -> p71 | J JMP_IMM
362: 239 240 243 248, r1 -> p75, r44 -> p63 [p118] | MOVSX LOAD
363: 242 243 244 248, r44 -> p63, r0 -> p6 [p121] | MOVSX SEXT_DWORD_TO_QWORD
364: 243 244 247 248, r0 -> p6, r6 -> p50, r0 -> p74 [p6] | MOV LOAD
365: 246 247 248 249, r45 -> p14 [p54] | CMP SAVE_PC
366: 246 248 251 251, r45 -> p14, r45 -> p9 [p14] | CMP LOAD
367: 246 251 252 252, r0 -> p74, r45 -> p9, r44 -> p0 [p63], r49 -> p78 [p71] | CMP SUB
368: 247 252 253 253, r49 -> p78 | J JMP_IMM
369: 248 249 250 253, r7 -> p88, r44 -> p72 [p0], r49 -> p82 [p78] | CMP SUB_IMM
370: 248 250 251 253, r49 -> p82 | J JMP_IMM
371: 248 249 250 253, r44 -> p66 [p72] | MOV SAVE_PC
372: 248 250 253 254, r44 -> p66, r6 -> p87 [p50] | MOV LOAD
373: 249 250 251 254, r7 -> p88, r0 -> p58 [p74] | MOV ADD
374: 251 252 253 254, r0 -> p58, r0 -> p67 [p58], r49 -> p5 [p82] | SHL SHL_IMM
375: 252 253 254 254 | JMP JMP_IMM
376: 253 254 255 255, r0 -> p67, r6 -> p87, r2 -> p79 [p49] | LEA LEA
377: 253 254 255 255, r8 -> p12, r6 -> p87, r1 -> p52 [p75] | LEA LEA
378: 253 255 258 258, r2 -> p79, r0 -> p62 [p67] | MOV LOAD
379: 253 258 259 259, r0 -> p62, r1 -> p52 | MOV STORE
380: 254 259 262 262, r2 -> p79, r0 -> p2 [p62] | MOV LOAD
381: 254 262 263 263, r0 -> p2, r0 -> p2, r44 -> p56 [p66], r49 -> p11 [p5] | TEST AND
382: 254 263 264 264, r49 -> p11 | J JMP_IMM
383: 254 255 256 264, r44 -> p1 [p56] | MOV SAVE_PC
384: 255 259 262 264, r44 -> p1, r0 -> p70 [p2] | MOV LOAD
385: 255 262 263 264, r14 -> p96, r0 -> p70, r44 -> p85 [p1] | MOV LEA
386: 258 263 264 265, r3 -> p123, r44 -> p85 | MOV STORE
387: 259 260 261 265 | JMP JMP_IMM
388: 262 263 264 265, r0 -> p115 [p70] | MOV ADD_IMM
389: 263 264 265 265, r3 -> p123, r2 -> p79 | MOV STORE
390: 264 265 266 266, r7 -> p88, r1 -> p52 | MOV STORE
391: 264 265 266 266 | JMP JMP_IMM
392: 264 266 269 269, r4 -> p117, r3 -> p99 [p123] | POP LOAD
393: 264 265 266 269, r4 -> p117, r4 -> p68 [p117] | POP ADD_IMM
394: 265 266 269 269, r4 -> p68, r5 -> p113 [p86] | POP LOAD
395: 265 266 267 269, r4 -> p68, r4 -> p84 [p68] | POP ADD_IMM
396: 265 267 270 270, r4 -> p84, r12 -> p91 [p97] | POP LOAD
397: 265 267 268 270, r4 -> p84, r4 -> p103 [p84] | POP ADD_IMM
398: 266 268 271 271, r4 -> p103, r13 -> p104 [p100] | POP LOAD
399: 266 268 269 271, r4 -> p103, r4 -> p73 [p103] | POP ADD_IMM
400: 269 270 273 273, r4 -> p73, r14 -> p102 [p96] | POP LOAD
401: 269 270 271 273, r4 -> p73, r4 -> p76 [p73] | POP ADD_IMM
402: 269 271 274 274, r4 -> p76, r44 -> p4 [p85] | RET LOAD
403: 269 271 272 274, r4 -> p76, r4 -> p126 [p76] | RET ADD_IMM
404: 270 274 275 275, r44 -> p4 | RET JMP_REG
405: 270 271 272 275, r0 -> p115, r0 -> p115, r44 -> p89 [p4], r49 -> p94 [p11] | TEST AND
406: 271 272 273 275, r49 -> p94 | J JMP_IMM
407: 271 272 273 275, r12 -> p91, r7 -> p64 [p88] | MOV ADD
408: 273 274 275 276, r44 -> p44 [p89] | CALL SAVE_PC
409: 273 274 275 276, r4 -> p126, r4 -> p65 [p126] | CALL SUB_IMM
410: 274 275 276 276, r44 -> p44, r4 -> p65 | CALL STORE
411: 274 275 276 276 | CALL JMP_IMM
412: 275 276 277 277, r15 -> p59, r4 -> p65 | PUSH STORE
413: 275 276 277 277, r4 -> p65, r4 -> p109 [p65] | PUSH SUB_IMM
414: 275 276 277 277, r7 -> p64, r15 -> p95 [p59] | MOV ADD
415: 275 277 278 278, r14 -> p102, r4 -> p109 | PUSH STORE
416: 276 277 278 278, r4 -> p109, r4 -> p10 [p109] | PUSH SUB_IMM
417: 276 278 279 279, r13 -> p104, r4 -> p10 | PUSH STORE
418: 276 278 279 279, r4 -> p10, r4 -> p101 [p10] | PUSH SUB_IMM
419: 276 279 280 280, r12 -> p91, r4 -> p101 | PUSH STORE
420: 277 279 280 280, r4 -> p101, r4 -> p90 [p101] | PUSH SUB_IMM
421: 277 280 281 281, r5 -> p113, r4 -> p90 | PUSH STORE
422: 277 280 281 281, r4 -> p90, r4 -> p93 [p90] | PUSH SUB_IMM
423: 278 281 282 282, r3 -> p99, r4 -> p93 | PUSH STORE
424: 278 281 282 282, r4 -> p93, r4 -> p7 [p93] | PUSH SUB_IMM
425: 279 282 283 283, r4 -> p7, r4 -> p120 [p7], r49 -> p112 [p94] | SUB SUB_IMM
426: 279 282 285 285, r7 -> p64, r45 -> p98 [p9] | CMP LOAD
427: 280 285 286 286, r45 -> p98, r44 -> p110 [p44], r49 -> p107 [p112] | CMP SUB_IMM
428: 280 286 287 287, r49 -> p107 | J JMP_IMM
429: 281 282 285 287, r15 -> p95, r45 -> p116 [p98] | CMP LOAD
430: 281 285 286 287, r45 -> p116, r44 -> p122 [p110], r49 -> p108 [p107] | CMP SUB_IMM
431: 282 286 287 287, r49 -> p108 | J JMP_IMM
432: 282 283 286 288, r15 -> p95, r3 -> p105 [p99] | MOV LOAD
433: 283 284 285 288, r45 -> p106 [p116] | CMP SAVE_PC
434: 285 286 289 289, r45 -> p106, r45 -> p111 [p106] | CMP LOAD
435: 286 289 290 290, r3 -> p105, r45 -> p111, r44 -> p127 [p122], r49 -> p3 [p108] | CMP SUB
436: 287 290 291 291, r49 -> p3 | J JMP_IMM
437: 287 288 289 291, r44 -> p45 [p127] | MOV SAVE_PC
438: 287 289 292 292, r44 -> p45, r2 -> p13 [p79] | MOV LOAD
439: 287 292 293 293, r2 -> p13, r2 -> p13, r44 -> p125 [p45], r49 -> p124 [p3] | TEST AND
440: 288 293 294 294, r49 -> p124 | J JMP_IMM
441: 288 292 295 295, r2 -> p13, r5 -> p8 [p113] | MOV LOAD
442: 289 295 296 296, r5 -> p8, r5 -> p8, r44 -> p69 [p125], r49 -> p119 [p124] | TEST AND
443: 290 296 297 297, r49 -> p119 | J JMP_IMM
444: 291 292 293 297, r4 -> p120, r4 -> p61 [p120], r49 -> p77 [p119] | ADD ADD_IMM
445: 291 293 296 297, r4 -> p61, r3 -> p83 [p105] | POP LOAD
446: 292 293 294 297, r4 -> p61, r4 -> p53 [p61] | POP ADD_IMM
447: 293 294 297 298, r4 -> p53, r5 -> p114 [p8] | POP LOAD
448: 294 295 296 298, r4 -> p53, r4 -> p81 [p53] | POP ADD_IMM
449: 295 296 299 299, r4 -> p81, r12 -> p55 [p91] | POP LOAD
450: 296 297 298 299, r4 -> p81, r4 -> p57 [p81] | POP ADD_IMM
451: 297 298 301 301, r4 -> p57, r13 -> p15 [p104] | POP LOAD
452: 297 298 299 301, r4 -> p57, r4 -> p51 [p57] | POP ADD_IMM
453: 297 299 302 302, r4 -> p51, r14 -> p118 [p102] | POP LOAD
454: 297 299 300 302, r4 -> p51, r4 -> p121 [p51] | POP ADD_IMM
455: 298 300 303 303, r4 -> p121, r15 -> p6 [p95] | POP LOAD
456: 298 300 301 303, r4 -> p121, r4 -> p54 [p121] | POP ADD_IMM
457: 299 301 304 304, r4 -> p54, r44 -> p14 [p69] | RET LOAD
458: 299 301 302 304, r4 -> p54, r4 -> p63 [p54] | RET ADD_IMM
459: 301 304 305 305, r44 -> p14 | RET JMP_REG
460: 301 302 305 305, r12 -> p55, r45 -> p71 [p111] | CMP LOAD
461: 302 305 306 306, r45 -> p71, r44 -> p0 [p14], r49 -> p78 [p77] | CMP SUB_IMM
462: 302 306 307 307, r49 -> p78 | J JMP_IMM
463: 303 304 307 307, r12 -> p55, r3 -> p72 [p83] | MOV LOAD
464: 303 307 308 308, r3 -> p72, r44 -> p50 [p0], r49 -> p74 [p78] | CMP SUB_IMM
465: 304 308 309 309, r49 -> p74 | J JMP_IMM
466: 304 305 306 309, r45 -> p58 [p71] | CMP SAVE_PC
467: 305 306 309 309, r45 -> p58, r45 -> p82 [p58] | CMP LOAD
468: 305 309 310 310, r3 -> p72, r45 -> p82, r44 -> p49 [p50], r49 -> p75 [p74] | CMP SUB
469: 306 310 311 311, r49 -> p75 | J JMP_IMM
470: 307 308 309 311, r44 -> p67 [p49] | MOV SAVE_PC
471: 307 309 312 312, r44 -> p67, r2 -> p62 [p13] | MOV LOAD
472: 308 312 313 313, r2 -> p62, r2 -> p62, r44 -> p66 [p67], r49 -> p5 [p75] | TEST AND
473: 309 313 314 314, r49 -> p5 | J JMP_IMM
474: 309 312 315 315, r2 -> p62, r0 -> p56 [p115] | MOV LOAD
475: 309 315 316 316, r0 -> p56, r0 -> p2 [p56], r49 -> p1 [p5] | AND AND_IMM
476: 310 311 314 316, r5 -> p114, r2 -> p70 [p62] | MOV LOAD
477: 311 316 317 317, r0 -> p2, r2 -> p70 | MOV STORE
478: 311 312 313 317 | JMP JMP_IMM
479: 312 317 320 320, r14 -> p118, r45 -> p123 [p82] | CMP LOAD
480: 313 320 321 321, r45 -> p123, r44 -> p117 [p66], r49 -> p86 [p1] | CMP SUB_IMM
481: 314 321 322 322, r49 -> p86 | J JMP_IMM
482: 315 317 320 322, r5 -> p114, r0 -> p68 [p2] | MOV LOAD
483: 316 317 320 322, r12 -> p55, r44 -> p97 [p117] | MOVZX LOAD
484: 316 320 321 322, r44 -> p97, r1 -> p84 [p52] | MOVZX ZEXT_BYTE_TO_DWORD
485: 317 318 319 323, r12 -> p55, r7 -> p100 [p64] | MOV ADD
486: 317 320 323 323, r0 -> p68, r2 -> p103 [p70] | MOV LOAD
487: 320 321 324 324, r0 -> p68, r6 -> p96 [p87] | MOV LOAD
488: 321 322 323 324, r44 -> p73 [p97] | CALL SAVE_PC
489: 322 323 324 324, r4 -> p63, r4 -> p85 [p63] | CALL SUB_IMM
490: 322 324 325 325, r44 -> p73, r4 -> p85 | CALL STORE
491: 322 323 324 325 | CALL JMP_IMM
492: 322 324 325 325, r15 -> p6, r4 -> p85 | PUSH STORE
493: 323 324 325 325, r4 -> p85, r4 -> p76 [p85] | PUSH SUB_IMM
494: 323 324 325 326, r2 -> p103, r15 -> p4 [p6] | MOV ADD
495: 324 325 326 326, r14 -> p118, r4 -> p76 | PUSH STORE
496: 324 325 326 326, r4 -> p76, r4 -> p11 [p76] | PUSH SUB_IMM
497: 324 325 326 326, r6 -> p96, r14 -> p88 [p118] | MOV ADD
498: 325 326 327 327, r13 -> p15, r4 -> p11 | PUSH STORE
499: 325 326 327 327, r4 -> p11, r4 -> p89 [p11] | PUSH SUB_IMM
500: 325 327 328 328, r12 -> p55, r4 -> p89 | PUSH STORE
501: 325 327 328 328, r4 -> p89, r4 -> p126 [p89] | PUSH SUB_IMM
502: 326 328 329 329, r5 -> p114, r4 -> p126 | PUSH STORE
503: 326 328 329 329, r4 -> p126, r4 -> p65 [p126] | PUSH SUB_IMM
504: 326 327 328 329, r7 -> p100, r5 -> p59 [p114] | MOV ADD
505: 326 329 330 330, r3 -> p72, r4 -> p65 | PUSH STORE
506: 327 329 330 330, r4 -> p65, r4 -> p109 [p65] | PUSH SUB_IMM
507: 327 330 331 331, r4 -> p109, r4 -> p10 [p109], r49 -> p101 [p86] | SUB SUB_IMM
508: 328 330 333 333, r7 -> p100, r45 -> p90 [p123] | CMP LOAD
509: 328 333 334 334, r45 -> p90, r44 -> p93 [p73], r49 -> p7 [p101] | CMP SUB_IMM
510: 329 331 332 334, r1 -> p84, r4 -> p10 | MOV STORE
511: 329 334 335 335, r49 -> p7 | J JMP_IMM
512: 329 332 335 335, r7 -> p100, r3 -> p94 [p72] | MOV LOAD
513: 330 331 332 335, r45 -> p9 [p90] | CMP SAVE_PC
514: 330 332 335 335, r45 -> p9, r45 -> p44 [p9] | CMP LOAD
515: 331 335 336 336, r3 -> p94, r45 -> p44, r44 -> p112 [p93], r49 -> p98 [p7] | CMP SUB
516: 333 336 337 337, r49 -> p98 | J JMP_IMM
517: 334 335 336 337, r44 -> p110 [p112] | MOV SAVE_PC
518: 334 336 339 339, r44 -> p110, r2 -> p107 [p103] | MOV LOAD
519: 335 339 340 340, r2 -> p107, r2 -> p107, r44 -> p99 [p110], r49 -> p116 [p98] | TEST AND
520: 335 340 341 341, r49 -> p116 | J JMP_IMM
521: 335 339 342 342, r2 -> p107, r45 -> p106 [p44] | CMP LOAD
522: 335 342 343 343, r45 -> p106, r3 -> p94, r44 -> p122 [p99], r49 -> p108 [p116] | CMP SUB
523: 336 343 344 344, r49 -> p108 | J JMP_IMM
524: 337 338 341 344, r5 -> p59, r45 -> p127 [p106] | CMP LOAD
525: 337 341 342 344, r45 -> p127, r44 -> p79 [p122], r49 -> p45 [p108] | CMP SUB_IMM
526: 339 342 343 344, r49 -> p45 | J JMP_IMM
527: 340 341 342 345, r3 -> p94, r44 -> p3 [p79], r49 -> p113 [p45] | CMP SUB_IMM
528: 341 342 343 345, r49 -> p113 | J JMP_IMM
529: 342 343 344 345, r44 -> p125 [p3] | MOV SAVE_PC
530: 343 344 347 347, r44 -> p125, r13 -> p124 [p15] | MOV LOAD
531: 344 347 348 348, r13 -> p124, r13 -> p124, r44 -> p120 [p125], r49 -> p119 [p113] | TEST AND
532: 344 348 349 349, r49 -> p119 | J JMP_IMM
533: 344 347 350 350, r13 -> p124, r0 -> p105 [p68] | MOV LOAD
534: 344 345 346 350, r44 -> p61 [p120] | MOV SAVE_PC
535: 345 350 351 351, r0 -> p105, r44 -> p61 | MOV STORE
536: 345 347 348 351, r5 -> p59, r13 -> p124 | MOV STORE
537: 345 347 348 351, r13 -> p124 | MOV STORE
538: 347 351 354 354, r5 -> p59, r44 -> p8 [p61] | MOVZX LOAD
539: 348 354 355 355, r44 -> p8, r0 -> p53 [p105] | MOVZX ZEXT_WORD_TO_DWORD
540: 349 355 356 356, r0 -> p53, r44 -> p91 [p8], r49 -> p81 [p119] | CMP SUB_IMM
541: 350 356 357 357, r49 -> p81 | J JMP_IMM
542: 350 351 352 357, r0 -> p104 [p53] | XOR ADD
543: 351 352 353 357 | JMP JMP_IMM
544: 351 352 353 357, r0 -> p104, r13 -> p124 | MOV STORE
545: 351 352 353 358, r5 -> p59, r7 -> p57 [p100] | MOV ADD
546: 354 355 356 358, r44 -> p102 [p91] | CALL SAVE_PC
547: 355 356 357 358, r4 -> p10, r4 -> p51 [p10] | CALL SUB_IMM
548: 356 357 358 358, r44 -> p102, r4 -> p51 | CALL STORE
549: 357 358 359 359 | CALL JMP_IMM
550: 357 358 359 359, r12 -> p55, r4 -> p51 | PUSH STORE
551: 357 358 359 359, r4 -> p51, r4 -> p95 [p51] | PUSH SUB_IMM
552: 357 359 360 360, r5 -> p59, r4 -> p95 | PUSH STORE
553: 358 359 360 360, r4 -> p95, r4 -> p121 [p95] | PUSH SUB_IMM
554: 358 359 360 360, r5 -> p69 [p59] | XOR ADD
555: 358 360 361 361, r3 -> p94, r4 -> p121 | PUSH STORE
556: 358 360 361 361, r4 -> p121, r4 -> p54 [p121] | PUSH SUB_IMM
557: 359 360 361 361, r3 -> p111 [p94] | XOR ADD
558: 359 361 362 362, r4 -> p54, r4 -> p14 [p54], r49 -> p77 [p81] | SUB SUB_IMM
559: 359 362 363 363, r4 -> p14, r12 -> p83 [p55] | LEA LEA
560: 360 362 363 363, r7 -> p57, r4 -> p14 | MOV STORE
561: 360 363 364 364, r12 -> p83, r7 -> p0 [p57] | MOV ADD
562: 360 361 362 364, r44 -> p78 [p102] | CALL SAVE_PC
563: 361 362 363 364, r4 -> p14, r4 -> p71 [p14] | CALL SUB_IMM
564: 361 363 364 364, r44 -> p78, r4 -> p71 | CALL STORE
565: 361 362 363 365 | CALL JMP_IMM
566: 362 364 365 365, r7 -> p0, r0 -> p58 [p104] | MOV ADD
567: 363 364 365 365, r7 -> p0 | MOV STORE
568: 363 364 365 365, r7 -> p0 | MOV STORE
569: 364 365 368 368, r4 -> p71, r44 -> p50 [p78] | RET LOAD
570: 364 365 366 368, r4 -> p71, r4 -> p74 [p71] | RET ADD_IMM
571: 364 368 369 369, r44 -> p50 | RET JMP_REG
572: 364 366 367 369, r4 -> p74, r7 -> p49 [p0] | LEA LEA
573: 365 366 367 369, r12 -> p83, r2 -> p13 [p107] | MOV ADD
574: 365 366 367 369, r6 -> p67 [p96] | MOV ADD_IMM
575: 365 366 367 370, r44 -> p75 [p50] | CALL SAVE_PC
576: 365 367 368 370, r4 -> p74, r4 -> p115 [p74] | CALL SUB_IMM
577: 368 369 370 370, r44 -> p75, r4 -> p115 | CALL STORE
578: 368 369 370 370 | CALL JMP_IMM
579: 369 370 371 371, r15 -> p4, r4 -> p115 | PUSH STORE
580: 369 370 371 371, r4 -> p115, r4 -> p56 [p115] | PUSH SUB_IMM
581: 369 370 371 371, r6 -> p67, r15 -> p5 [p4] | MOV ADD
582: 369 370 371 371, r2 -> p13, r6 -> p62 [p67] | MOV ADD
583: 370 371 372 372, r14 -> p88, r4 -> p56 | PUSH STORE
584: 370 371 372 372, r4 -> p56, r4 -> p82 [p56] | PUSH SUB_IMM
585: 370 371 372 372, r2 -> p13, r14 -> p66 [p88] | MOV ADD
586: 370 372 373 373, r13 -> p124, r4 -> p82 | PUSH STORE
587: 371 372 373 373, r4 -> p82, r4 -> p1 [p82] | PUSH SUB_IMM
588: 371 373 374 374, r12 -> p83, r4 -> p1 | PUSH STORE
589: 371 373 374 374, r4 -> p1, r4 -> p2 [p1] | PUSH SUB_IMM
590: 371 374 375 375, r5 -> p69, r4 -> p2 | PUSH STORE
591: 372 374 375 375, r4 -> p2, r4 -> p117 [p2] | PUSH SUB_IMM
592: 372 375 376 376, r3 -> p111, r4 -> p117 | PUSH STORE
593: 372 375 376 376, r4 -> p117, r4 -> p52 [p117] | PUSH SUB_IMM
594: 373 376 377 377, r4 -> p52, r4 -> p64 [p52], r49 -> p70 [p77] | SUB SUB_IMM
595: 373 377 378 378, r7 -> p49, r4 -> p64 | MOV STORE
596: 374 375 376 378, r44 -> p87 [p75] | CALL SAVE_PC
597: 374 377 378 378, r4 -> p64, r4 -> p97 [p64] | CALL SUB_IMM
598: 375 378 379 379, r44 -> p87, r4 -> p97 | CALL STORE
599: 375 376 377 379, r15 -> p5 | CALL JMP_REG
600: 376 378 379 379, r4 -> p97, r4 -> p63 [p97], r49 -> p85 [p70] | SUB SUB_IMM
601: 376 379 382 382, r7 -> p49, r0 -> p6 [p58] | MOV LOAD
602: 377 378 379 382, r6 -> p62, r2 -> p76 [p13] | MOV ADD
603: 378 382 383 383, r0 -> p6, r0 -> p6, r44 -> p118 [p87], r49 -> p11 [p85] | TEST AND
604: 378 383 384 384, r49 -> p11 | J JMP_IMM
605: 378 382 385 385, r0 -> p6, r45 -> p89 [p127] | CMP LOAD
606: 379 385 386 386, r45 -> p89, r44 -> p126 [p118], r49 -> p114 [p11] | CMP SUB_IMM
607: 379 386 387 387, r49 -> p114 | J JMP_IMM
608: 379 382 385 387, r0 -> p6, r6 -> p65 [p62] | MOV LOAD
609: 382 383 384 387, r2 -> p76, r7 -> p109 [p49] | MOV ADD
610: 382 383 384 387, r44 -> p86 [p126] | CALL SAVE_PC
611: 383 384 385 388, r4 -> p63, r4 -> p123 [p63] | CALL SUB_IMM
612: 384 385 386 388, r44 -> p86, r4 -> p123 | CALL STORE
613: 385 386 387 388 | CALL JMP_IMM
614: 386 387 388 388, r12 -> p83, r4 -> p123 | PUSH STORE
615: 387 388 389 389, r4 -> p123, r4 -> p73 [p123] | PUSH SUB_IMM
616: 387 388 389 389, r6 -> p65, r12 -> p101 [p83] | MOV ADD
617: 387 389 390 390, r12 -> p101, r12 -> p72 [p101], r49 -> p90 [p114] | SHR SHR_IMM
618: 387 389 390 390, r5 -> p69, r4 -> p73 | PUSH STORE
619: 388 389 390 390, r4 -> p73, r4 -> p9 [p73] | PUSH SUB_IMM
620: 388 389 390 390, r7 -> p109, r5 -> p93 [p69] | MOV ADD
621: 388 390 391 391, r3 -> p111, r4 -> p9 | PUSH STORE
622: 388 390 391 391, r4 -> p9, r4 -> p7 [p9] | PUSH SUB_IMM
623: 389 391 394 394, r7 -> p109, r7 -> p112 [p109] | MOV LOAD
624: 389 390 391 394, r6 -> p65, r3 -> p103 [p111] | MOV ADD
625: 390 394 395 395, r7 -> p112, r7 -> p112, r44 -> p110 [p86], r49 -> p98 [p90] | TEST AND
626: 390 395 396 396, r49 -> p98 | J JMP_IMM
627: 390 391 392 396, r44 -> p44 [p110] | MOV SAVE_PC
628: 390 392 395 396, r44 -> p44, r6 -> p99 [p65] | MOV LOAD
629: 391 395 396 396, r6 -> p99, r6 -> p99, r44 -> p116 [p44], r49 -> p106 [p98] | TEST AND
630: 391 396 397 397, r49 -> p106 | J JMP_IMM
631: 394 395 398 398, r6 -> p99, r0 -> p122 [p6] | MOV LOAD
632: 394 395 396 398, r44 -> p108 [p116] | MOV SAVE_PC
633: 395 398 399 399, r0 -> p122, r44 -> p108 | MOV STORE
634: 396 397 398 399, r3 -> p103, r2 -> p79 [p76] | MOV ADD
635: 396 397 398 399, r3 -> p103, r3 -> p45 [p103], r49 -> p3 [p106] | AND AND_IMM
636: 396 397 398 399, r0 -> p15 [p122] | MOV ADD_IMM
637: 396 398 399 400, r2 -> p79, r2 -> p125 [p79], r49 -> p113 [p3] | SHR SHR_IMM
638: 397 398 399 400, r3 -> p45, r1 -> p68 [p84] | MOV ADD
639: 398 399 400 400, r6 -> p99 | MOV STORE
640: 398 399 400 400, r6 -> p99 | MOV STORE
641: 399 400 401 401, r2 -> p125, r2 -> p120 [p125], r49 -> p61 [p113] | AND AND_IMM
642: 399 400 401 401, r0 -> p15, r1 -> p68, r0 -> p105 [p15], r49 -> p8 [p61] | SHL SHL
643: 399 400 403 403, r5 -> p93, r45 -> p119 [p89] | CMP LOAD
644: 399 403 404 404, r45 -> p119, r44 -> p53 [p108], r49 -> p100 [p8] | CMP SUB
645: 400 401 402 404, r12 -> p72, r6 -> p99 | MOV STORE
646: 400 401 402 404, r2 -> p120, r6 -> p99, r44 -> p91 [p53] | MOV LEA
647: 400 402 403 404, r0 -> p105, r44 -> p91 | MOV STORE
648: 400 404 405 405, r49 -> p100 | J JMP_IMM
649: 401 402 403 405, r6 -> p99 | MOV STORE
650: 401 402 403 405, r6 -> p99 | MOV STORE
651: 403 404 405 405, r6 -> p99, r5 -> p93 | MOV STORE
652: 404 405 406 406 | JMP JMP_IMM
653: 404 405 406 406, r6 -> p99, r5 -> p93 | MOV STORE
654: 404 405 406 406, r12 -> p72, r5 -> p93 | MOV STORE
655: 404 406 409 409, r4 -> p7, r3 -> p10 [p45] | POP LOAD
656: 405 406 407 409, r4 -> p7, r4 -> p51 [p7] | POP ADD_IMM
657: 405 407 410 410, r4 -> p51, r5 -> p95 [p93] | POP LOAD
658: 405 407 408 410, r4 -> p51, r4 -> p59 [p51] | POP ADD_IMM
659: 405 408 411 411, r4 -> p59, r12 -> p121 [p72] | POP LOAD
660: 406 408 409 411, r4 -> p59, r4 -> p94 [p59] | POP ADD_IMM
661: 406 409 412 412, r4 -> p94, r44 -> p54 [p91] | RET LOAD
662: 406 409 410 412, r4 -> p94, r4 -> p81 [p94] | RET ADD_IMM
663: 409 412 413 413, r44 -> p54 | RET JMP_REG
664: 409 410 411 413, r0 -> p55 [p105] | XOR ADD
665: 410 411 412 413, r4 -> p81, r4 -> p57 [p81], r49 -> p102 [p100] | ADD ADD_IMM
666: 410 412 415 415, r4 -> p57, r44 -> p14 [p54] | RET LOAD
667: 411 412 413 415, r4 -> p57, r4 -> p104 [p57] | RET ADD_IMM
668: 411 415 416 416, r44 -> p14 | RET JMP_REG
669: 412 413 414 416, r0 -> p55, r4 -> p104 | MOV STORE
670: 412 413 414 416, r0 -> p55, r0 -> p78 [p55], r49 -> p71 [p102] | ADD ADD_IMM
671: 413 414 415 416, r49 -> p71 | J JMP_IMM
672: 413 414 417 417, r4 -> p104, r11 -> p0 [p92] | MOV LOAD
673: 413 417 418 418, r11 -> p0, r11 -> p0, r44 -> p107 [p14], r49 -> p96 [p71] | TEST AND
674: 415 418 419 419, r49 -> p96 | J JMP_IMM
675: 415 416 419 419, r4 -> p104, r2 -> p50 [p120] | MOV LOAD
676: 416 419 422 422, r2 -> p50, r0 -> p74 [p78] | MOV LOAD
677: 416 422 423 423, r0 -> p74, r0 -> p74, r44 -> p115 [p107], r49 -> p4 [p96] | TEST AND
678: 416 423 424 424, r49 -> p4 | J JMP_IMM
679: 416 422 425 425, r0 -> p74, r44 -> p67 [p115] | MOVZX LOAD
680: 417 425 426 426, r44 -> p67, r0 -> p56 [p74] | MOVZX ZEXT_WORD_TO_DWORD
681: 418 426 429 429, r0 -> p56, r1 -> p88 [p68] | MOV LOAD
682: 419 426 429 429, r0 -> p56, r44 -> p82 [p67] | MOVZX LOAD
683: 419 429 430 430, r44 -> p82, r0 -> p1 [p56] | MOVZX ZEXT_BYTE_TO_DWORD
684: 422 429 430 430, r1 -> p88, r4 -> p104 | MOV STORE
685: 423 430 431 431, r0 -> p1, r0 -> p1, r44 -> p2 [p82], r49 -> p117 [p4] | TEST AND
686: 424 431 432 432, r49 -> p117 | J JMP_IMM
687: 425 430 431 432, r0 -> p1, r0 -> p52 [p1], r49 -> p77 [p117] | SUB SUB_IMM
688: 426 427 428 432, r4 -> p104 | MOV STORE
689: 429 431 432 432, r0 -> p52, r0 -> p75 [p52], r49 -> p64 [p77] | ADD ADD_IMM
690: 429 432 433 433, r0 -> p75, r4 -> p104 | MOV STORE
691: 430 433 436 436, r4 -> p104, r3 -> p97 [p10] | MOV LOAD
692: 430 433 436 436, r4 -> p104, r1 -> p70 [p88] | MOV LOAD
693: 431 433 436 436, r4 -> p104, r2 -> p58 [p50] | MOV LOAD
694: 432 436 439 439, r1 -> p70, r3 -> p97, r44 -> p13 [p2] | MOVZX LOAD
695: 432 439 440 440, r44 -> p13, r0 -> p87 [p75] | MOVZX ZEXT_BYTE_TO_DWORD
696: 432 440 441 441, r0 -> p87, r44 -> p85 [p13], r49 -> p127 [p64] | CMP SUB_IMM
697: 432 441 442 442, r49 -> p127 | J JMP_IMM
698: 433 440 441 442, r0 -> p87, r44 -> p118 [p85], r49 -> p11 [p127] | CMP SUB_IMM
699: 436 441 442 442, r49 -> p11 | J JMP_IMM
700: 436 440 441 442, r0 -> p87, r44 -> p62 [p118], r49 -> p49 [p11] | CMP SUB_IMM
701: 436 441 442 443, r49 -> p49 | J JMP_IMM
702: 439 440 443 443, r4 -> p104, r45 -> p126 [p119] | ADD LOAD
703: 440 443 444 444, r45 -> p126, r44 -> p63 [p62], r49 -> p123 [p49] | ADD ADD_IMM
704: 441 444 445 445, r44 -> p63, r4 -> p104 | ADD STORE
705: 442 445 448 448, r4 -> p104, r0 -> p83 [p87] | MOV LOAD
706: 442 445 448 448, r4 -> p104, r45 -> p101 [p126] | CMP LOAD
707: 442 448 449 449, r45 -> p101, r0 -> p83, r44 -> p114 [p63], r49 -> p73 [p123] | CMP SUB
708: 442 449 450 450, r49 -> p73 | J JMP_IMM
709: 443 445 448 450, r4 -> p104, r3 -> p69 [p97] | MOV LOAD
710: 443 445 448 450, r4 -> p104, r1 -> p9 [p70] | MOV LOAD
711: 444 446 449 450, r4 -> p104, r2 -> p109 [p58] | MOV LOAD
712: 445 448 451 451, r1 -> p9, r3 -> p69, r44 -> p111 [p114] | MOVZX LOAD
713: 448 451 452 452, r44 -> p111, r0 -> p86 [p83] | MOVZX ZEXT_BYTE_TO_DWORD
714: 448 452 453 453, r0 -> p86, r44 -> p90 [p111], r49 -> p110 [p73] | CMP SUB_IMM
715: 449 453 454 454, r49 -> p110 | J JMP_IMM
716: 450 452 453 454, r0 -> p86, r44 -> p65 [p90], r49 -> p44 [p110] | CMP SUB_IMM
717: 450 453 454 454, r49 -> p44 | J JMP_IMM
718: 450 452 453 454, r0 -> p86, r44 -> p98 [p65], r49 -> p6 [p44] | CMP SUB_IMM
719: 450 453 454 455, r49 -> p6 | J JMP_IMM
720: 451 452 455 455, r4 -> p104, r45 -> p116 [p101] | ADD LOAD
721: 452 455 456 456, r45 -> p116, r44 -> p76 [p98], r49 -> p103 [p6] | ADD ADD_IMM
722: 453 456 457 457, r44 -> p76, r4 -> p104 | ADD STORE
723: 454 457 460 460, r4 -> p104, r0 -> p106 [p86] | MOV LOAD
724: 454 457 460 460, r4 -> p104, r45 -> p122 [p116] | CMP LOAD
725: 454 460 461 461, r45 -> p122, r0 -> p106, r44 -> p79 [p76], r49 -> p3 [p103] | CMP SUB
726: 454 461 462 462, r49 -> p3 | J JMP_IMM
727: 455 456 457 462 | NOP NOP
728: 455 457 460 462, r4 -> p104, r0 -> p84 [p106] | MOV LOAD
729: 456 457 458 462, r4 -> p104, r4 -> p125 [p104], r49 -> p113 [p3] | ADD ADD_IMM
730: 457 458 461 463, r4 -> p125, r3 -> p15 [p69] | POP LOAD
731: 460 461 462 463, r4 -> p125, r4 -> p61 [p125] | POP ADD_IMM
732: 460 462 465 465, r4 -> p61, r5 -> p89 [p95] | POP LOAD
733: 461 462 463 465, r4 -> p61, r4 -> p108 [p61] | POP ADD_IMM
734: 462 463 466 466, r4 -> p108, r12 -> p8 [p121] | POP LOAD
735: 462 463 464 466, r4 -> p108, r4 -> p53 [p108] | POP ADD_IMM
736: 462 464 467 467, r4 -> p53, r13 -> p45 [p124] | POP LOAD
737: 462 464 465 467, r4 -> p53, r4 -> p7 [p53] | POP ADD_IMM
738: 463 465 468 468, r4 -> p7, r14 -> p93 [p66] | POP LOAD
739: 463 465 466 468, r4 -> p7, r4 -> p51 [p7] | POP ADD_IMM
740: 465 466 469 469, r4 -> p51, r15 -> p72 [p5] | POP LOAD
741: 465 466 467 469, r4 -> p51, r4 -> p59 [p51] | POP ADD_IMM
742: 466 467 470 470, r4 -> p59, r44 -> p91 [p79] | RET LOAD
743: 466 467 468 470, r4 -> p59, r4 -> p94 [p59] | RET ADD_IMM
744: 467 470 471 471, r44 -> p91 | RET JMP_REG
745: 467 468 471 471, r4 -> p94, r8 -> p105 [p12] | MOV LOAD
746: 468 471 472 472, r8 -> p105, r8 -> p105, r44 -> p81 [p91], r49 -> p100 [p113] | TEST AND
747: 468 472 473 473, r49 -> p100 | J JMP_IMM
748: 469 470 471 473, r9 -> p54 [p60] | XOR ADD
749: 469 471 474 474, r9 -> p54, r8 -> p105, r6 -> p57 [p99] | MOV LOAD
750: 470 471 472 474, r9 -> p54, r10 -> p55 [p80] | MOV ADD
751: 470 474 475 475, r6 -> p57, r6 -> p57, r44 -> p102 [p81], r49 -> p92 [p100] | TEST AND
752: 471 475 476 476, r49 -> p92 | J JMP_IMM
753: 471 472 473 476, r7 -> p14 [p112] | XOR ADD
754: 472 473 474 476, r11 -> p71 [p0] | MOV ADD_IMM
755: 473 474 475 476 | NOP NOP
756: 473 474 475 477, r7 -> p14, r1 -> p120 [p9] | MOV ADD
757: 474 475 476 477, r11 -> p71, r0 -> p78 [p84] | MOV ADD
758: 474 476 477 477, r0 -> p78, r1 -> p120, r0 -> p107 [p78], r49 -> p96 [p92] | SHL SHL
759: 475 477 478 478, r0 -> p107, r6 -> p57, r44 -> p115 [p102], r49 -> p74 [p96] | TEST AND
760: 476 478 479 479, r49 -> p74 | J JMP_IMM
761: 476 477 478 479, r0 -> p107, r0 -> p68 [p107] | NOT NOT
762: 476 478 479 479, r6 -> p57, r0 -> p68, r6 -> p67 [p57], r49 -> p56 [p74] | AND AND
763: 476 477 480 480, r8 -> p105, r0 -> p82 [p68] | MOV LOAD
764: 477 480 481 481, r0 -> p82, r10 -> p55, r0 -> p4 [p82] | LEA LEA
765: 477 481 482 482, r0 -> p4, r0 -> p1 [p4], r49 -> p117 [p56] | SHL SHL_IMM
766: 477 482 483 483, r1 -> p120, r0 -> p1, r2 -> p52 [p109] | LEA LEA
767: 478 483 484 484, r2 -> p52, r44 -> p77 [p115], r49 -> p10 [p117] | CMP SUB_IMM
768: 479 484 485 485, r49 -> p10 | J JMP_IMM
769: 479 483 484 485, r2 -> p52, r44 -> p88 [p77], r49 -> p50 [p10] | CMP SUB_IMM
770: 479 484 485 485, r49 -> p50 | J JMP_IMM
771: 480 483 484 485, r2 -> p52, r44 -> p2 [p88], r49 -> p75 [p50] | CMP SUB_IMM
772: 481 484 485 486, r49 -> p75 | J JMP_IMM
773: 482 483 484 486, r2 -> p52, r44 -> p13 [p2], r49 -> p64 [p75] | CMP SUB_IMM
774: 483 484 485 486, r49 -> p64 | J JMP_IMM
775: 484 485 486 486, r2 -> p52, r0 -> p85 [p1] | LEA LEA
776: 485 486 487 487, r0 -> p85, r44 -> p127 [p13], r49 -> p118 [p64] | CMP SUB_IMM
777: 485 487 488 488, r49 -> p118 | J JMP_IMM
778: 485 486 487 488, r2 -> p52, r44 -> p11 [p127], r49 -> p119 [p118] | CMP SUB_IMM
779: 485 486 487 488, r0 -> p62 [p85] | MOV ADD_IMM
780: 486 487 488 488, r49 -> p119 | J JMP_IMM
781: 486 487 488 489, r3 -> p15, r0 -> p62, r3 -> p49 [p15], r49 -> p87 [p119] | ADD ADD
782: 486 487 488 489, r6 -> p67, r6 -> p67, r44 -> p126 [p11], r49 -> p63 [p87] | TEST AND
783: 486 488 489 489, r49 -> p63 | J JMP_IMM
784: 487 488 489 489, r9 -> p54, r9 -> p123 [p54], r49 -> p97 [p63] | ADD ADD_IMM
785: 488 489 490 490, r9 -> p123, r44 -> p70 [p126], r49 -> p58 [p97] | CMP SUB_IMM
786: 488 490 491 491, r49 -> p58 | J JMP_IMM
787: 488 489 492 492, r9 -> p123, r8 -> p105, r6 -> p114 [p67] | MOV LOAD
788: 488 489 490 492, r9 -> p123, r10 -> p83 [p55] | MOV ADD
789: 489 492 493 493, r6 -> p114, r6 -> p114, r44 -> p111 [p70], r49 -> p73 [p58] | TEST AND
790: 489 493 494 494, r49 -> p73 | J JMP_IMM
791: 489 490 491 494, r9 -> p123, r9 -> p90 [p123], r49 -> p110 [p73] | ADD ADD_IMM
792: 489 491 492 494, r9 -> p90, r44 -> p65 [p111], r49 -> p44 [p110] | CMP SUB_IMM
793: 490 492 493 494, r49 -> p44 | J JMP_IMM
794: 491 492 495 495, r8 -> p105, r8 -> p101 [p105] | MOV LOAD
795: 492 495 496 496, r8 -> p101, r8 -> p101, r44 -> p98 [p65], r49 -> p6 [p44] | TEST AND
796: 492 496 497 497, r49 -> p6 | J JMP_IMM
797: 493 494 495 497, r12 -> p8, r7 -> p86 [p14] | MOV ADD
798: 494 495 496 497, r44 -> p116 [p98] | CALL SAVE_PC
799: 494 495 496 497, r4 -> p94, r4 -> p76 [p94] | CALL SUB_IMM
800: 494 496 497 498, r44 -> p116, r4 -> p76 | CALL STORE
801: 494 495 496 498 | CALL JMP_IMM
802: 495 497 500 500, r7 -> p86, r0 -> p103 [p62] | MOV LOAD
803: 496 500 501 501, r0 -> p103, r0 -> p103, r44 -> p106 [p116], r49 -> p104 [p6] | TEST AND
804: 497 501 502 502, r49 -> p104 | J JMP_IMM
805: 497 498 499 502, r44 -> p3 [p106] | MOV SAVE_PC
806: 497 499 502 502, r44 -> p3, r1 -> p69 [p120] | MOV LOAD
807: 497 498 499 502 | JMP JMP_IMM
808: 498 500 503 503, r0 -> p103, r2 -> p125 [p52] | MOV LOAD
809: 498 502 503 503, r1 -> p69, r0 -> p103 | MOV STORE
810: 500 503 504 504, r2 -> p125, r2 -> p125, r44 -> p95 [p3], r49 -> p61 [p104] | TEST AND
811: 501 504 505 505, r49 -> p61 | J JMP_IMM
812: 502 503 504 505, r44 -> p121 [p95] | MOV SAVE_PC
813: 502 504 505 505, r0 -> p103, r44 -> p121 | MOV STORE
814: 502 503 504 505, r7 -> p86 | MOV STORE
815: 502 503 504 506, r7 -> p86 | MOV STORE
816: 503 505 508 508, r4 -> p76, r44 -> p108 [p121] | RET LOAD
817: 503 504 505 508, r4 -> p76, r4 -> p124 [p76] | RET ADD_IMM
818: 504 508 509 509, r44 -> p108 | RET JMP_REG
819: 505 506 507 509, r5 -> p89, r5 -> p89, r44 -> p53 [p108], r49 -> p66 [p61] | TEST AND
820: 505 507 508 509, r49 -> p66 | J JMP_IMM
821: 505 506 507 509, r4 -> p124, r4 -> p7 [p124], r49 -> p5 [p66] | ADD ADD_IMM
822: 505 506 507 510, r3 -> p49, r0 -> p51 [p103] | MOV ADD
823: 506 507 510 510, r4 -> p7, r3 -> p79 [p49] | POP LOAD
824: 508 509 510 510, r4 -> p7, r4 -> p59 [p7] | POP ADD_IMM
825: 508 510 513 513, r4 -> p59, r5 -> p12 [p89] | POP LOAD
826: 509 510 511 513, r4 -> p59, r4 -> p91 [p59] | POP ADD_IMM
827: 509 511 514 514, r4 -> p91, r12 -> p113 [p8] | POP LOAD
828: 509 511 512 514, r4 -> p91, r4 -> p60 [p91] | POP ADD_IMM
829: 509 512 515 515, r4 -> p60, r44 -> p99 [p53] | RET LOAD
830: 510 512 513 515, r4 -> p60, r4 -> p80 [p60] | RET ADD_IMM
831: 510 515 516 516, r44 -> p99 | RET JMP_REG
832: 510 511 512 516, r15 -> p72, r2 -> p81 [p125] | MOV ADD
833: 513 514 515 516, r0 -> p51, r13 -> p45 | MOV STORE
834: 513 514 515 516, r13 -> p45 | MOV STORE
835: 514 515 516 517, r13 -> p45 | MOV STORE
836: 514 516 519 519, r2 -> p81, r6 -> p100 [p114] | MOV LOAD
837: 515 516 517 519, r13 -> p45 | MOV STORE
838: 515 517 520 520, r4 -> p80, r0 -> p112 [p51] | MOV LOAD
839: 516 517 518 520, r13 -> p45 | MOV STORE
840: 516 517 518 520, r13 -> p45 | MOV STORE
841: 516 519 520 520, r6 -> p100, r13 -> p45 | MOV STORE
842: 516 520 521 521, r0 -> p112, r13 -> p45 | MOV STORE
843: 517 521 524 524, r5 -> p12, r44 -> p0 [p99] | MOVZX LOAD
844: 519 524 525 525, r44 -> p0, r1 -> p9 [p69] | MOVZX ZEXT_WORD_TO_DWORD
845: 519 525 526 526, r1 -> p9, r0 -> p84 [p112] | LEA LEA
846: 520 526 527 527, r0 -> p84, r44 -> p78 [p0], r49 -> p92 [p5] | CMP SUB_IMM
847: 520 527 528 528, r49 -> p92 | J JMP_IMM
848: 520 525 526 528, r1 -> p9, r44 -> p102 [p78], r49 -> p96 [p92] | CMP SUB_IMM
849: 520 526 527 528, r49 -> p96 | J JMP_IMM
850: 521 525 526 528, r1 -> p9, r44 -> p107 [p102], r49 -> p57 [p96] | CMP SUB_IMM
851: 524 526 527 529, r49 -> p57 | J JMP_IMM
852: 525 526 527 529, r1 -> p9, r44 -> p74 [p107], r49 -> p68 [p57] | CMP SUB_IMM
853: 526 527 528 529 | NOP NOP
854: 527 528 529 529, r49 -> p68 | J JMP_IMM
855: 528 529 530 530, r1 -> p9, r44 -> p82 [p74], r49 -> p4 [p68] | CMP SUB_IMM
856: 528 529 530 530 | NOP NOP
857: 528 530 531 531, r49 -> p4 | J JMP_IMM
858: 528 529 530 531, r1 -> p9, r44 -> p56 [p82], r49 -> p109 [p4] | CMP SUB_IMM
859: 529 530 531 531, r49 -> p109 | J JMP_IMM
860: 529 530 531 531, r1 -> p9, r44 -> p115 [p56], r49 -> p117 [p109] | CMP SUB_IMM
861: 529 531 532 532, r49 -> p117 | J JMP_IMM
862: 529 530 533 533, r5 -> p12, r0 -> p77 [p84] | MOV LOAD
863: 530 533 534 534, r0 -> p77, r0 -> p10 [p77], r49 -> p88 [p117] | AND AND_IMM
864: 530 534 535 535, r0 -> p10, r44 -> p50 [p115], r49 -> p2 [p88] | CMP SUB_IMM
865: 531 535 536 536, r49 -> p2 | J JMP_IMM
866: 531 532 533 536, r44 -> p75 [p50] | MOV SAVE_PC
867: 531 533 536 536, r44 -> p75, r8 -> p1 [p101] | MOV LOAD
868: 531 536 537 537, r5 -> p12, r8 -> p1, r44 -> p13 [p75], r49 -> p64 [p2] | CMP SUB
869: 532 537 538 538, r49 -> p64 | J JMP_IMM
870: 533 534 535 538, r44 -> p127 [p13] | MOV SAVE_PC
871: 534 535 538 538, r44 -> p127, r7 -> p118 [p86] | MOV LOAD
872: 535 538 539 539, r5 -> p12, r7 -> p118, r44 -> p85 [p127], r49 -> p15 [p64] | CMP SUB
873: 536 539 540 540, r49 -> p15 | J JMP_IMM
874: 536 537 538 540, r44 -> p119 [p85] | MOV SAVE_PC
875: 536 538 541 541, r44 -> p119, r11 -> p11 [p71] | MOV LOAD
876: 537 541 542 542, r5 -> p12, r11 -> p11, r44 -> p87 [p119], r49 -> p54 [p15] | CMP SUB
877: 538 542 543 543, r49 -> p54 | J JMP_IMM
878: 538 539 540 543, r44 -> p63 [p87] | MOV SAVE_PC
879: 538 540 543 543, r44 -> p63, r9 -> p126 [p90] | MOV LOAD
880: 539 543 544 544, r5 -> p12, r9 -> p126, r44 -> p97 [p63], r49 -> p67 [p54] | CMP SUB
881: 540 544 545 545, r49 -> p67 | J JMP_IMM
882: 540 541 542 545, r44 -> p55 [p97] | MOV SAVE_PC
883: 541 542 545 545, r44 -> p55, r10 -> p70 [p83] | MOV LOAD
884: 542 545 546 546, r5 -> p12, r10 -> p70, r44 -> p58 [p55], r49 -> p123 [p67] | CMP SUB
885: 543 546 547 547, r49 -> p123 | J JMP_IMM
886: 543 544 545 547, r1 -> p9, r44 -> p73 [p58], r49 -> p111 [p123] | CMP SUB_IMM
887: 543 545 546 547, r49 -> p111 | J JMP_IMM
888: 544 545 546 547, r1 -> p9, r44 -> p110 [p73], r49 -> p105 [p111] | CMP SUB_IMM
889: 545 546 547 548, r1 -> p65 [p9] | SET ADD
890: 545 546 547 548, r49 -> p105, r1 -> p44 [p65] | SET ADD_IMM
891: 545 546 547 548 | JMP JMP_IMM
892: 546 547 548 548, r6 -> p100, r6 -> p100, r44 -> p14 [p110], r49 -> p98 [p105] | TEST AND
893: 547 548 549 549, r1 -> p44, r13 -> p45 | MOV STORE
894: 547 548 549 549, r49 -> p98 | J JMP_IMM
895: 547 548 549 549, r13 -> p45, r6 -> p100 | MOV STORE
896: 547 548 549 549, r14 -> p93, r14 -> p93, r44 -> p94 [p14], r49 -> p62 [p98] | TEST AND
897: 548 549 550 550, r2 -> p81, r44 -> p116 [p94] | MOV LEA
898: 548 550 551 551, r13 -> p45, r44 -> p116 | MOV STORE
899: 548 549 550 551, r49 -> p62 | J JMP_IMM
900: 548 551 554 554, r14 -> p93, r12 -> p6 [p113] | MOV LOAD
901: 549 551 554 554, r13 -> p45, r6 -> p106 [p100] | MOV LOAD
902: 549 551 554 554, r13 -> p45, r8 -> p120 [p1] | MOV LOAD
903: 549 554 557 557, r12 -> p6, r0 -> p52 [p10] | MOV LOAD
904: 549 554 557 557, r12 -> p6, r2 -> p3 [p81] | MOV LOAD
905: 550 557 558 558, r0 -> p52, r6 -> p106, r44 -> p104 [p116], r49 -> p95 [p62] | CMP SUB
906: 551 558 559 559, r49 -> p95 | J JMP_IMM
907: 551 557 558 559, r2 -> p3, r8 -> p120, r44 -> p121 [p104], r49 -> p76 [p95] | CMP SUB
908: 554 558 559 559, r49 -> p76 | J JMP_IMM
909: 554 555 556 559, r8 -> p120, r44 -> p108 [p121], r49 -> p61 [p76] | CMP SUB_IMM
910: 554 556 557 560, r49 -> p61 | J JMP_IMM
911: 557 558 559 560, r2 -> p3, r44 -> p124 [p108], r49 -> p66 [p61] | CMP SUB_IMM
912: 557 559 560 560, r49 -> p66 | J JMP_IMM
913: 558 559 560 560, r0 -> p52, r6 -> p106, r44 -> p103 [p124], r49 -> p49 [p66] | CMP SUB
914: 559 560 561 561 | XCHG NOP
915: 559 560 561 561, r49 -> p49 | J JMP_IMM
916: 559 560 561 561, r2 -> p3, r8 -> p120, r44 -> p7 [p103], r49 -> p89 [p49] | CMP SUB
917: 559 560 561 561 | NOP NOP
918: 560 561 562 562, r49 -> p89 | J JMP_IMM
919: 560 561 562 562, r8 -> p120, r0 -> p59 [p52] | MOV ADD
920: 560 562 563 563, r0 -> p59, r2 -> p3, r0 -> p8 [p59], r49 -> p91 [p89] | SUB SUB
921: 560 561 562 563 | NOP NOP
922: 561 562 563 563 | JMP JMP_IMM
923: 561 563 564 564, r0 -> p8, r0 -> p8, r44 -> p53 [p7], r49 -> p60 [p91] | TEST AND
924: 561 564 565 565, r49 -> p60 | J JMP_IMM
925: 561 562 563 565, r8 -> p120, r44 -> p125 [p53], r49 -> p114 [p60] | CMP SUB_IMM
926: 562 563 564 565, r49 -> p114 | J JMP_IMM
927: 562 563 564 565, r6 -> p106, r44 -> p51 [p125], r49 -> p99 [p114] | CMP SUB_IMM
928: 563 564 565 566, r49 -> p99 | J JMP_IMM
929: 563 564 565 566, r12 -> p6, r7 -> p69 [p118] | MOV ADD
930: 563 564 565 566 | JMP JMP_IMM
931: 564 565 568 568, r7 -> p69, r1 -> p112 [p44] | MOV LOAD
932: 565 568 569 569, r1 -> p112, r1 -> p112, r44 -> p0 [p51], r49 -> p5 [p99] | TEST AND
933: 565 569 570 570, r49 -> p5 | J JMP_IMM
934: 565 568 571 571, r1 -> p112, r0 -> p78 [p8] | MOV LOAD
935: 565 568 571 571, r1 -> p112, r2 -> p92 [p3] | MOV LOAD
936: 566 571 572 572, r0 -> p78, r6 -> p106, r44 -> p102 [p0], r49 -> p96 [p5] | CMP SUB
937: 566 572 573 573, r49 -> p96 | J JMP_IMM
938: 566 571 572 573, r8 -> p120, r2 -> p92, r44 -> p107 [p102], r49 -> p57 [p96] | CMP SUB
939: 568 572 573 573, r49 -> p57 | J JMP_IMM
940: 569 571 572 573, r0 -> p78, r6 -> p106, r44 -> p74 [p107], r49 -> p68 [p57] | CMP SUB
941: 570 572 573 574, r49 -> p68 | J JMP_IMM
942: 571 572 573 574, r8 -> p120, r2 -> p92, r44 -> p82 [p74], r49 -> p4 [p68] | CMP SUB
943: 571 573 574 574 | NOP NOP
944: 572 573 574 574, r49 -> p4 | J JMP_IMM
945: 573 574 575 575, r1 -> p112, r13 -> p45 | MOV STORE
946: 573 574 575 575, r13 -> p45, r1 -> p112 | MOV STORE
947: 573 574 575 575, r7 -> p69, r13 -> p45 | MOV STORE
948: 573 574 575 575, r13 -> p45, r7 -> p69 | MOV STORE
949: 574 575 576 576, r12 -> p6, r13 -> p45 | MOV STORE
950: 574 576 579 579, r13 -> p45, r45 -> p56 [p122] | CMP LOAD
951: 574 579 580 580, r45 -> p56, r44 -> p109 [p82], r49 -> p84 [p4] | CMP SUB
952: 574 580 581 581, r49 -> p84 | J JMP_IMM
953: 575 576 579 581, r5 -> p12, r45 -> p77 [p56] | CMP LOAD
954: 575 579 580 581, r45 -> p77, r44 -> p117 [p109], r49 -> p115 [p84] | CMP SUB_IMM
955: 575 580 581 581, r49 -> p115 | J JMP_IMM
956: 575 576 579 582, r5 -> p12, r3 -> p88 [p79] | MOV LOAD
957: 576 577 578 582, r45 -> p50 [p77] | CMP SAVE_PC
958: 579 580 583 583, r45 -> p50, r45 -> p101 [p50] | CMP LOAD
959: 580 583 584 584, r3 -> p88, r45 -> p101, r44 -> p75 [p117], r49 -> p2 [p115] | CMP SUB
960: 581 584 585 585, r49 -> p2 | J JMP_IMM
961: 581 582 583 585, r44 -> p13 [p75] | MOV SAVE_PC
962: 581 583 586 586, r44 -> p13, r2 -> p86 [p92] | MOV LOAD
963: 581 586 587 587, r2 -> p86, r2 -> p86, r44 -> p127 [p13], r49 -> p64 [p2] | TEST AND
964: 582 587 588 588, r49 -> p64 | J JMP_IMM
965: 582 586 589 589, r2 -> p86, r44 -> p85 [p127] | MOVSX LOAD
966: 583 589 590 590, r44 -> p85, r0 -> p71 [p78] | MOVSX SEXT_DWORD_TO_QWORD
967: 584 585 586 590, r44 -> p119 [p85] | MOV SAVE_PC
968: 585 586 589 590, r44 -> p119, r2 -> p15 [p86] | MOV LOAD
969: 585 590 591 591, r0 -> p71, r0 -> p71, r0 -> p87 [p71] | LEA LEA
970: 586 591 592 592, r0 -> p87, r0 -> p90 [p87], r49 -> p63 [p64] | SHL SHL_IMM
971: 587 592 595 595, r2 -> p15, r0 -> p90, r45 -> p54 [p101] | CMP LOAD
972: 588 595 596 596, r45 -> p54, r44 -> p97 [p119], r49 -> p83 [p63] | CMP SUB
973: 589 596 597 597, r49 -> p83 | J JMP_IMM
974: 590 591 594 597, r5 -> p12, r45 -> p55 [p54] | CMP LOAD
975: 590 594 595 597, r45 -> p55, r44 -> p67 [p97], r49 -> p58 [p83] | CMP SUB_IMM
976: 590 595 596 597, r49 -> p58 | J JMP_IMM
977: 591 592 595 598, r5 -> p12, r3 -> p123 [p88] | MOV LOAD
978: 592 593 594 598, r45 -> p73 [p55] | CMP SAVE_PC
979: 595 596 599 599, r45 -> p73, r45 -> p111 [p73] | CMP LOAD
980: 596 599 600 600, r3 -> p123, r45 -> p111, r44 -> p9 [p67], r49 -> p65 [p58] | CMP SUB
981: 597 600 601 601, r49 -> p65 | J JMP_IMM
982: 597 598 599 601, r44 -> p110 [p9] | MOV SAVE_PC
983: 597 599 602 602, r44 -> p110, r2 -> p105 [p15] | MOV LOAD
984: 597 602 603 603, r2 -> p105, r2 -> p105, r44 -> p14 [p110], r49 -> p98 [p65] | TEST AND
985: 598 603 604 604, r49 -> p98 | J JMP_IMM
986: 598 602 605 605, r2 -> p105, r44 -> p94 [p14] | MOVSX LOAD
987: 599 605 606 606, r44 -> p94, r0 -> p113 [p90] | MOVSX SEXT_DWORD_TO_QWORD
988: 600 601 602 606, r44 -> p100 [p94] | MOV SAVE_PC
989: 601 602 605 606, r44 -> p100, r6 -> p1 [p106] | MOV LOAD
990: 601 606 607 607, r0 -> p113, r0 -> p113, r0 -> p10 [p113] | LEA LEA
991: 602 607 608 608, r0 -> p10, r0 -> p81 [p10], r49 -> p116 [p98] | SHL SHL_IMM
992: 603 608 611 611, r6 -> p1, r0 -> p81, r45 -> p62 [p111] | CMP LOAD
993: 604 611 612 612, r45 -> p62, r44 -> p104 [p100], r49 -> p95 [p116] | CMP SUB
994: 605 612 613 613, r49 -> p95 | J JMP_IMM
995: 606 607 610 613, r5 -> p12, r3 -> p121 [p123] | MOV LOAD
996: 606 607 608 613, r45 -> p76 [p62] | CMP SAVE_PC
997: 606 608 611 613, r45 -> p76, r45 -> p108 [p76] | CMP LOAD
998: 607 611 612 614, r3 -> p121, r45 -> p108, r44 -> p61 [p104], r49 -> p124 [p95] | CMP SUB
999: 608 609 612 614, r5 -> p12, r44 -> p66 [p61] | MOVZX LOAD
1000: 611 612 613 614, r44 -> p66, r14 -> p103 [p93] | MOVZX ZEXT_BYTE_TO_DWORD
Processed 1000 trace records.
Micro-ops: 1000
Macro-ops: 754
TotalCycles: 615
uIPC: 1.62602
