Processing trace...
1: 0 1 2 2, r13 -> p50 [p13] | SET ADD
2: 0 1 2 2, r49 -> p49, r13 -> p51 [p50] | SET ADD_IMM
3: 0 1 4 4, r5 -> p5, r45 -> p52 [p45] | CMP LOAD
4: 0 4 5 5, r45 -> p52, r3 -> p3, r44 -> p53 [p44], r49 -> p54 [p49] | CMP SUB
5: 1 2 5 5, r5 -> p5, r3 -> p55 [p3] | MOV LOAD
6: 1 2 3 5, r0 -> p56 [p0] | SET ADD
7: 1 5 6 6, r49 -> p54, r0 -> p57 [p56] | SET ADD_IMM
8: 1 2 3 6, r12 -> p58 [p12] | XOR ADD
9: 2 6 7 7, r13 -> p51, r0 -> p57, r13 -> p59 [p51], r49 -> p60 [p54] | OR OR
10: 2 3 4 7 | JMP JMP_IMM
11: 4 5 8 8, r3 -> p55, r0 -> p61 [p57] | MOV LOAD
12: 5 8 9 9, r0 -> p61, r0 -> p61, r44 -> p62 [p53], r49 -> p63 [p60] | TEST AND
13: 5 9 10 10, r49 -> p63 | J JMP_IMM
14: 5 8 11 11, r0 -> p61, r7 -> p64 [p7] | MOV LOAD
15: 6 11 14 14, r7 -> p64, r44 -> p65 [p62] | MOVZX LOAD
16: 6 14 15 15, r44 -> p65, r0 -> p66 [p61] | MOVZX ZEXT_WORD_TO_DWORD
17: 7 15 16 16, r0 -> p66, r44 -> p67 [p65], r49 -> p68 [p63] | CMP SUB_IMM
18: 7 16 17 17, r49 -> p68 | J JMP_IMM
19: 8 9 10 17, r6 -> p69 [p6] | XOR ADD
20: 9 10 11 17, r44 -> p70 [p67] | CALL SAVE_PC
21: 10 11 12 17, r4 -> p4, r4 -> p71 [p4] | CALL SUB_IMM
22: 11 12 13 18, r44 -> p70, r4 -> p71 | CALL STORE
23: 14 15 16 18 | CALL JMP_IMM
24: 15 16 17 18, r15 -> p15, r4 -> p71 | PUSH STORE
25: 16 17 18 18, r4 -> p71, r4 -> p72 [p71] | PUSH SUB_IMM
26: 17 18 19 19, r14 -> p14, r4 -> p72 | PUSH STORE
27: 17 18 19 19, r4 -> p72, r4 -> p73 [p72] | PUSH SUB_IMM
28: 17 19 20 20, r13 -> p59, r4 -> p73 | PUSH STORE
29: 17 19 20 20, r4 -> p73, r4 -> p74 [p73] | PUSH SUB_IMM
30: 18 19 20 20, r7 -> p64, r13 -> p75 [p59] | MOV ADD
31: 18 20 21 21, r12 -> p58, r4 -> p74 | PUSH STORE
32: 18 20 21 21, r4 -> p74, r4 -> p76 [p74] | PUSH SUB_IMM
33: 18 19 20 21, r6 -> p69, r12 -> p77 [p58] | MOV ADD
34: 19 21 22 22, r5 -> p5, r4 -> p76 | PUSH STORE
35: 19 21 22 22, r4 -> p76, r4 -> p78 [p76] | PUSH SUB_IMM
36: 20 22 23 23, r3 -> p55, r4 -> p78 | PUSH STORE
37: 20 22 23 23, r4 -> p78, r4 -> p79 [p78] | PUSH SUB_IMM
38: 20 23 24 24, r4 -> p79, r4 -> p80 [p79], r49 -> p81 [p68] | SUB SUB_IMM
39: 21 22 25 25, r7 -> p64, r44 -> p82 [p70] | MOVZX LOAD
40: 21 25 26 26, r44 -> p82, r0 -> p83 [p66] | MOVZX ZEXT_WORD_TO_DWORD
41: 21 26 27 27, r0 -> p83, r44 -> p84 [p82], r49 -> p85 [p81] | CMP SUB_IMM
42: 22 27 28 28, r49 -> p85 | J JMP_IMM
43: 22 23 26 28, r7 -> p64, r5 -> p86 [p5] | MOV LOAD
44: 23 26 27 28, r5 -> p86, r44 -> p87 [p84], r49 -> p88 [p85] | CMP SUB_IMM
45: 23 27 28 28, r49 -> p88 | J JMP_IMM
46: 24 25 26 29, r45 -> p89 [p52] | CMP SAVE_PC
47: 25 26 29 29, r45 -> p89, r45 -> p90 [p89] | CMP LOAD
48: 26 29 30 30, r5 -> p86, r45 -> p90, r44 -> p91 [p87], r49 -> p92 [p88] | CMP SUB
49: 27 30 31 31, r49 -> p92 | J JMP_IMM
50: 28 29 30 31, r44 -> p93 [p91] | MOV SAVE_PC
51: 28 30 33 33, r44 -> p93, r2 -> p94 [p2] | MOV LOAD
52: 28 33 34 34, r2 -> p94, r2 -> p94, r44 -> p95 [p93], r49 -> p96 [p92] | TEST AND
53: 28 34 35 35, r49 -> p96 | J JMP_IMM
54: 29 33 36 36, r2 -> p94, r12 -> p97 [p77] | MOV LOAD
55: 29 36 37 37, r12 -> p97, r12 -> p98 [p97], r49 -> p99 [p96] | AND AND_IMM
56: 30 31 32 37, r45 -> p100 [p90] | CMP SAVE_PC
57: 31 32 35 37, r45 -> p100, r45 -> p101 [p100] | CMP LOAD
58: 31 35 36 37, r5 -> p86, r45 -> p101, r44 -> p102 [p95], r49 -> p103 [p99] | CMP SUB
59: 33 36 37 38, r49 -> p103 | J JMP_IMM
60: 34 35 36 38, r44 -> p104 [p102] | MOV SAVE_PC
61: 35 36 39 39, r44 -> p104, r2 -> p105 [p94] | MOV LOAD
62: 36 39 40 40, r2 -> p105, r2 -> p105, r44 -> p106 [p104], r49 -> p107 [p103] | TEST AND
63: 37 40 41 41, r49 -> p107 | J JMP_IMM
64: 37 39 42 42, r2 -> p105, r0 -> p108 [p83] | MOV LOAD
65: 37 42 43 43, r5 -> p86, r0 -> p108, r44 -> p109 [p106], r49 -> p110 [p107] | CMP SUB
66: 37 43 44 44, r49 -> p110 | J JMP_IMM
67: 38 39 40 44, r45 -> p111 [p101] | CMP SAVE_PC
68: 38 40 43 44, r45 -> p111, r45 -> p112 [p111] | CMP LOAD
69: 39 43 44 44, r5 -> p86, r45 -> p112, r44 -> p113 [p109], r49 -> p114 [p110] | CMP SUB
70: 40 44 45 45, r49 -> p114 | J JMP_IMM
71: 41 42 43 45, r44 -> p115 [p113] | MOV SAVE_PC
72: 42 43 46 46, r44 -> p115, r2 -> p116 [p105] | MOV LOAD
73: 43 46 47 47, r2 -> p116, r2 -> p116, r44 -> p117 [p115], r49 -> p118 [p114] | TEST AND
74: 44 47 48 48, r49 -> p118 | J JMP_IMM
75: 44 46 49 49, r2 -> p116, r45 -> p119 [p112] | ADD LOAD
76: 44 49 50 50, r45 -> p119, r44 -> p120 [p117], r49 -> p121 [p118] | ADD ADD_IMM
77: 44 50 51 51, r44 -> p120, r2 -> p116 | ADD STORE
78: 45 46 47 51, r5 -> p86, r44 -> p122 [p120], r49 -> p123 [p121] | CMP SUB_IMM
79: 45 46 47 51, r12 -> p98, r12 -> p124 [p98] | MOV ADD
80: 46 47 48 51, r49 -> p123 | J JMP_IMM
81: 47 48 51 52, r13 -> p75, r45 -> p125 [p119] | CMP LOAD
82: 48 51 52 52, r45 -> p125, r44 -> p126 [p122], r49 -> p127 [p123] | CMP SUB_IMM
83: 49 50 53 53, r13 -> p75, r44 -> p13 [p126] | MOVZX LOAD
84: 50 53 54 54, r44 -> p13, r5 -> p50 [p86] | MOVZX ZEXT_BYTE_TO_DWORD
85: 51 52 53 54, r49 -> p127 | J JMP_IMM
86: 51 52 55 55, r12 -> p124, r3 -> p45 [p55] | MOV LOAD
87: 51 52 55 55, r13 -> p75, r2 -> p44 [p116] | MOV LOAD
88: 51 55 56 56, r3 -> p45, r3 -> p45, r44 -> p49 [p13], r49 -> p3 [p127] | TEST AND
89: 52 56 57 57, r49 -> p3 | J JMP_IMM
90: 52 55 58 58, r3 -> p45, r0 -> p0 [p108] | MOV LOAD
91: 53 58 61 61, r0 -> p0, r45 -> p56 [p125] | CMP LOAD
92: 54 61 62 62, r45 -> p56, r44 -> p12 [p49], r49 -> p51 [p3] | CMP SUB_IMM
93: 54 62 63 63, r49 -> p51 | J JMP_IMM
94: 55 56 59 63, r3 -> p45, r3 -> p54 [p45] | MOV LOAD
95: 55 59 60 63, r3 -> p54, r3 -> p54, r44 -> p57 [p12], r49 -> p53 [p51] | TEST AND
96: 56 60 61 63, r49 -> p53 | J JMP_IMM
97: 57 58 59 64, r4 -> p80, r4 -> p60 [p80], r49 -> p7 [p53] | ADD ADD_IMM
98: 58 59 62 64, r4 -> p60, r3 -> p62 [p54] | POP LOAD
99: 61 62 63 64, r4 -> p60, r4 -> p61 [p60] | POP ADD_IMM
100: 62 63 66 66, r4 -> p61, r5 -> p65 [p50] | POP LOAD
101: 63 64 65 66, r4 -> p61, r4 -> p63 [p61] | POP ADD_IMM
102: 63 65 68 68, r4 -> p63, r12 -> p6 [p124] | POP LOAD
103: 63 65 66 68, r4 -> p63, r4 -> p67 [p63] | POP ADD_IMM
104: 63 66 69 69, r4 -> p67, r13 -> p4 [p75] | POP LOAD
105: 64 66 67 69, r4 -> p67, r4 -> p71 [p67] | POP ADD_IMM
106: 64 67 70 70, r4 -> p71, r14 -> p72 [p14] | POP LOAD
107: 64 67 68 70, r4 -> p71, r4 -> p73 [p71] | POP ADD_IMM
108: 66 68 71 71, r4 -> p73, r15 -> p59 [p15] | POP LOAD
109: 66 68 69 71, r4 -> p73, r4 -> p74 [p73] | POP ADD_IMM
110: 68 69 72 72, r4 -> p74, r44 -> p58 [p57] | RET LOAD
111: 68 69 70 72, r4 -> p74, r4 -> p76 [p74] | RET ADD_IMM
112: 69 72 73 73, r44 -> p58 | RET JMP_REG
113: 69 70 71 73 | JMP JMP_IMM
114: 70 71 72 73, r12 -> p6, r12 -> p78 [p6], r49 -> p79 [p7] | ADD ADD_IMM
115: 70 71 72 73, r3 -> p62, r3 -> p68 [p62], r49 -> p70 [p79] | ADD ADD_IMM
116: 71 72 75 75, r5 -> p65, r45 -> p66 [p56] | CMP LOAD
117: 71 75 76 76, r12 -> p78, r45 -> p66, r44 -> p82 [p58], r49 -> p81 [p70] | CMP SUB
118: 72 76 77 77, r49 -> p81 | J JMP_IMM
119: 72 73 76 77, r5 -> p65, r0 -> p5 [p0] | MOV LOAD
120: 73 76 79 79, r0 -> p5, r45 -> p84 [p66] | CMP LOAD
121: 73 79 80 80, r45 -> p84, r44 -> p85 [p82], r49 -> p52 [p81] | CMP SUB_IMM
122: 73 80 81 81, r49 -> p52 | J JMP_IMM
123: 73 76 79 81, r0 -> p5, r0 -> p89 [p5] | MOV LOAD
124: 75 79 82 82, r0 -> p89, r0 -> p87 [p89] | MOV LOAD
125: 76 82 83 83, r0 -> p87, r0 -> p88 [p87], r49 -> p91 [p52] | AND AND_IMM
126: 77 83 84 84, r0 -> p88, r44 -> p2 [p85], r49 -> p93 [p91] | CMP SUB_IMM
127: 77 84 85 85, r49 -> p93 | J JMP_IMM
128: 79 80 83 85, r5 -> p65, r11 -> p92 [p11] | MOV LOAD
129: 80 83 84 85, r11 -> p92, r11 -> p92, r44 -> p77 [p2], r49 -> p97 [p93] | TEST AND
130: 81 84 85 85, r49 -> p97 | J JMP_IMM
131: 81 82 85 86, r5 -> p65, r1 -> p96 [p1] | MOV LOAD
132: 82 83 84 86, r5 -> p65 | MOV STORE
133: 83 85 86 86, r1 -> p96, r5 -> p65 | MOV STORE
134: 84 85 86 86 | JMP JMP_IMM
135: 85 86 89 89, r5 -> p65, r3 -> p90 [p68] | MOV LOAD
136: 85 89 92 92, r3 -> p90, r0 -> p100 [p88] | MOV LOAD
137: 85 92 93 93, r0 -> p100, r0 -> p100, r44 -> p95 [p77], r49 -> p99 [p97] | TEST AND
138: 85 93 94 94, r49 -> p99 | J JMP_IMM
139: 86 92 95 95, r0 -> p100, r7 -> p102 [p64] | MOV LOAD
140: 86 95 98 98, r7 -> p102, r45 -> p94 [p84] | CMP LOAD
141: 86 98 99 99, r45 -> p94, r44 -> p104 [p95], r49 -> p103 [p99] | CMP SUB_IMM
142: 86 99 100 100, r49 -> p103 | J JMP_IMM
143: 89 95 98 100, r7 -> p102, r1 -> p83 [p96] | MOV LOAD
144: 92 98 99 100, r1 -> p83, r44 -> p106 [p104], r49 -> p107 [p103] | CMP SUB_IMM
145: 93 99 100 100, r49 -> p107 | J JMP_IMM
146: 94 95 96 101, r0 -> p101 [p100] | MOV ADD_IMM
147: 95 96 97 101 | JMP JMP_IMM
148: 98 99 100 101, r0 -> p101, r1 -> p83, r0 -> p111 [p101], r49 -> p109 [p107] | ADD ADD
149: 99 100 101 101, r1 -> p83, r0 -> p111, r44 -> p110 [p106], r49 -> p113 [p109] | CMP SUB
150: 100 101 102 102, r49 -> p113 | J JMP_IMM
151: 100 101 102 102, r1 -> p83, r13 -> p105 [p4] | MOV ADD
152: 100 101 102 102, r45 -> p115 [p94] | CMP SAVE_PC
153: 100 102 105 105, r45 -> p115, r45 -> p114 [p115] | CMP LOAD
154: 101 105 106 106, r45 -> p114, r13 -> p105, r44 -> p112 [p110], r49 -> p117 [p113] | CMP SUB
155: 101 102 103 106, r0 -> p111, r5 -> p65 | MOV STORE
156: 101 106 107 107, r49 -> p117 | J JMP_IMM
157: 101 102 103 107, r44 -> p118 [p112] | MOV SAVE_PC
158: 102 103 106 107, r44 -> p118, r2 -> p120 [p44] | MOV LOAD
159: 102 106 107 107, r2 -> p120, r2 -> p120, r44 -> p121 [p118], r49 -> p98 [p117] | TEST AND
160: 102 107 108 108, r49 -> p98 | J JMP_IMM
161: 105 106 109 109, r2 -> p120, r10 -> p119 [p10] | MOV LOAD
162: 106 109 110 110, r10 -> p119, r10 -> p119, r44 -> p122 [p121], r49 -> p123 [p98] | TEST AND
163: 106 110 111 111, r49 -> p123 | J JMP_IMM
164: 107 108 109 111, r13 -> p105, r13 -> p126 [p105], r49 -> p86 [p123] | ADD ADD_IMM
165: 107 108 111 111, r5 -> p65, r45 -> p55 [p114] | CMP LOAD
166: 107 111 112 112, r45 -> p55, r13 -> p126, r44 -> p116 [p122], r49 -> p13 [p86] | CMP SUB
167: 107 112 113 113, r49 -> p13 | J JMP_IMM
168: 108 109 112 113, r5 -> p65, r45 -> p127 [p55] | ADD LOAD
169: 109 112 113 113, r45 -> p127, r44 -> p108 [p116], r49 -> p125 [p13] | ADD ADD_IMM
170: 110 113 114 114, r44 -> p108, r5 -> p65 | ADD STORE
171: 111 112 115 115, r5 -> p65, r45 -> p49 [p127] | ADD LOAD
172: 111 115 116 116, r45 -> p49, r44 -> p3 [p108], r49 -> p45 [p125] | ADD ADD_IMM
173: 111 116 117 117, r44 -> p3, r5 -> p65 | ADD STORE
174: 112 113 116 117, r5 -> p65, r0 -> p12 [p111] | MOV LOAD
175: 113 114 117 117, r5 -> p65, r45 -> p51 [p49] | CMP LOAD
176: 113 117 118 118, r45 -> p51, r0 -> p12, r44 -> p80 [p3], r49 -> p53 [p45] | CMP SUB
177: 113 118 119 119, r49 -> p53 | J JMP_IMM
178: 114 115 118 119, r5 -> p65, r1 -> p54 [p83] | MOV LOAD
179: 115 116 117 119, r6 -> p60 [p69] | XOR ADD
180: 116 117 118 119 | XCHG NOP
181: 117 118 119 120 | JMP JMP_IMM
182: 117 118 121 121, r1 -> p54, r45 -> p50 [p51] | CMP LOAD
183: 117 121 122 122, r45 -> p50, r44 -> p61 [p80], r49 -> p124 [p53] | CMP SUB
184: 118 122 123 123, r49 -> p124 | J JMP_IMM
185: 119 120 123 123, r1 -> p54, r0 -> p63 [p12] | MOV LOAD
186: 119 123 124 124, r0 -> p63, r0 -> p63, r44 -> p75 [p61], r49 -> p67 [p124] | TEST AND
187: 119 124 125 125, r49 -> p67 | J JMP_IMM
188: 119 123 126 126, r0 -> p63, r45 -> p14 [p50] | CMP LOAD
189: 120 126 127 127, r45 -> p14, r44 -> p71 [p75], r49 -> p15 [p67] | CMP SUB
190: 121 127 128 128, r49 -> p15 | J JMP_IMM
191: 122 123 124 128, r6 -> p60, r6 -> p73 [p60], r49 -> p57 [p15] | ADD ADD_IMM
192: 123 124 125 128, r1 -> p54, r1 -> p74 [p54], r49 -> p6 [p57] | ADD ADD_IMM
193: 123 124 127 128, r5 -> p65, r45 -> p7 [p14] | CMP LOAD
194: 124 127 128 129, r6 -> p73, r45 -> p7, r44 -> p62 [p71], r49 -> p79 [p6] | CMP SUB
195: 125 128 129 129, r49 -> p79 | J JMP_IMM
196: 126 127 130 130, r5 -> p65, r1 -> p56 [p74] | MOV LOAD
197: 127 128 129 130, r5 -> p65 | MOV STORE
198: 128 130 131 131, r1 -> p56, r5 -> p65 | MOV STORE
199: 128 129 130 131 | JMP JMP_IMM
200: 128 129 132 132, r5 -> p65, r2 -> p58 [p120] | MOV LOAD
201: 128 132 135 135, r2 -> p58, r0 -> p70 [p63] | MOV LOAD
202: 129 135 136 136, r0 -> p70, r0 -> p70, r44 -> p0 [p62], r49 -> p66 [p79] | TEST AND
203: 129 136 137 137, r49 -> p66 | J JMP_IMM
204: 130 131 132 137, r44 -> p82 [p0] | MOV SAVE_PC
205: 130 132 135 137, r44 -> p82, r9 -> p81 [p9] | MOV LOAD
206: 131 135 138 138, r0 -> p70, r12 -> p5 [p78] | MOV LOAD
207: 131 132 135 138, r2 -> p58, r14 -> p89 [p72] | MOV LOAD
208: 132 135 136 138, r9 -> p81, r9 -> p81, r44 -> p87 [p82], r49 -> p52 [p66] | TEST AND
209: 135 136 137 138, r49 -> p52 | J JMP_IMM
210: 136 138 141 141, r12 -> p5, r44 -> p85 [p87] | MOVZX LOAD
211: 137 141 142 142, r44 -> p85, r2 -> p91 [p58] | MOVZX ZEXT_BYTE_TO_DWORD
212: 137 142 143 143, r2 -> p91, r44 -> p11 [p85], r49 -> p2 [p52] | CMP SUB_IMM
213: 137 143 144 144, r49 -> p2 | J JMP_IMM
214: 138 139 142 144, r5 -> p65, r45 -> p93 [p7] | CMP LOAD
215: 138 142 143 144, r45 -> p93, r44 -> p1 [p11], r49 -> p68 [p2] | CMP SUB
216: 138 143 144 144, r49 -> p68 | J JMP_IMM
217: 138 139 142 145, r5 -> p65, r1 -> p88 [p56] | MOV LOAD
218: 141 142 145 145, r1 -> p88, r6 -> p77 [p73] | MOV LOAD
219: 142 145 146 146, r6 -> p77, r6 -> p77, r44 -> p97 [p1], r49 -> p64 [p68] | TEST AND
220: 143 144 145 146 | NOP NOP
221: 144 146 147 147, r49 -> p64 | J JMP_IMM
222: 144 145 148 148, r12 -> p5, r44 -> p84 [p97] | MOVZX LOAD
223: 144 148 149 149, r44 -> p84, r0 -> p95 [p70] | MOVZX ZEXT_WORD_TO_DWORD
224: 144 149 150 150, r0 -> p95, r44 -> p99 [p84], r49 -> p96 [p64] | CMP SUB_IMM
225: 145 150 151 151, r49 -> p96 | J JMP_IMM
226: 145 149 150 151, r0 -> p95, r44 -> p104 [p99], r49 -> p103 [p96] | CMP SUB_IMM
227: 146 150 151 151, r49 -> p103 | J JMP_IMM
228: 146 149 150 151, r0 -> p95, r44 -> p100 [p104], r49 -> p101 [p103] | CMP SUB_IMM
229: 147 150 151 152, r49 -> p101 | J JMP_IMM
230: 148 149 150 152, r2 -> p107 [p91] | MOV ADD_IMM
231: 149 150 151 152, r12 -> p5, r7 -> p106 [p102] | MOV ADD
232: 150 151 152 152, r44 -> p109 [p100] | CALL SAVE_PC
233: 151 152 153 153, r4 -> p76, r4 -> p4 [p76] | CALL SUB_IMM
234: 151 153 154 154, r44 -> p109, r4 -> p4 | CALL STORE
235: 151 152 153 154 | CALL JMP_IMM
236: 151 153 154 154, r14 -> p89, r4 -> p4 | PUSH STORE
237: 152 153 154 154, r4 -> p4, r4 -> p94 [p4] | PUSH SUB_IMM
238: 152 153 154 155, r2 -> p107, r14 -> p115 [p89] | MOV ADD
239: 152 154 155 155, r13 -> p126, r4 -> p94 | PUSH STORE
240: 152 154 155 155, r4 -> p94, r4 -> p110 [p94] | PUSH SUB_IMM
241: 153 154 155 155, r6 -> p77, r13 -> p113 [p126] | MOV ADD
242: 154 155 156 156, r12 -> p5, r4 -> p110 | PUSH STORE
243: 154 155 156 156, r4 -> p110, r4 -> p112 [p110] | PUSH SUB_IMM
244: 154 156 157 157, r5 -> p65, r4 -> p112 | PUSH STORE
245: 154 156 157 157, r4 -> p112, r4 -> p44 [p112] | PUSH SUB_IMM
246: 155 156 157 157, r7 -> p106, r5 -> p118 [p65] | MOV ADD
247: 155 157 158 158, r3 -> p90, r4 -> p44 | PUSH STORE
248: 155 157 158 158, r4 -> p44, r4 -> p117 [p44] | PUSH SUB_IMM
249: 155 156 159 159, r7 -> p106, r44 -> p10 [p109] | MOVZX LOAD
250: 156 159 160 160, r44 -> p10, r0 -> p121 [p95] | MOVZX ZEXT_WORD_TO_DWORD
251: 156 160 161 161, r0 -> p121, r44 -> p98 [p10], r49 -> p105 [p101] | CMP SUB_IMM
252: 157 161 162 162, r49 -> p105 | J JMP_IMM
253: 157 158 161 162, r7 -> p106, r3 -> p123 [p90] | MOV LOAD
254: 157 158 159 162, r45 -> p114 [p93] | CMP SAVE_PC
255: 158 159 162 162, r45 -> p114, r45 -> p122 [p114] | CMP LOAD
256: 158 162 163 163, r3 -> p123, r45 -> p122, r44 -> p86 [p98], r49 -> p55 [p105] | CMP SUB
257: 159 163 164 164, r49 -> p55 | J JMP_IMM
258: 160 161 162 164, r44 -> p116 [p86] | MOV SAVE_PC
259: 161 162 165 165, r44 -> p116, r2 -> p13 [p107] | MOV LOAD
260: 162 165 166 166, r2 -> p13, r2 -> p13, r44 -> p127 [p116], r49 -> p108 [p55] | TEST AND
261: 162 166 167 167, r49 -> p108 | J JMP_IMM
262: 162 165 168 168, r2 -> p13, r45 -> p125 [p122] | CMP LOAD
263: 162 168 169 169, r45 -> p125, r3 -> p123, r44 -> p111 [p127], r49 -> p49 [p108] | CMP SUB
264: 163 169 170 170, r49 -> p49 | J JMP_IMM
265: 164 165 166 170, r13 -> p113, r13 -> p113, r44 -> p3 [p111], r49 -> p45 [p49] | TEST AND
266: 164 166 167 170, r49 -> p45 | J JMP_IMM
267: 165 166 169 170, r13 -> p113, r1 -> p83 [p88] | MOV LOAD
268: 166 169 170 171, r1 -> p83, r1 -> p83, r44 -> p69 [p3], r49 -> p51 [p45] | TEST AND
269: 167 170 171 171, r49 -> p51 | J JMP_IMM
270: 168 169 172 172, r1 -> p83, r2 -> p80 [p13] | MOV LOAD
271: 169 172 175 175, r2 -> p80, r45 -> p53 [p125] | CMP LOAD
272: 170 175 176 176, r45 -> p53, r44 -> p12 [p69], r49 -> p61 [p51] | CMP SUB_IMM
273: 170 176 177 177, r49 -> p61 | J JMP_IMM
274: 170 171 174 177, r1 -> p83, r1 -> p124 [p83] | MOV LOAD
275: 170 174 175 177, r1 -> p124, r1 -> p124, r44 -> p50 [p12], r49 -> p75 [p61] | TEST AND
276: 171 175 176 177, r49 -> p75 | J JMP_IMM
277: 171 174 177 178, r1 -> p124, r2 -> p67 [p80] | MOV LOAD
278: 172 177 180 180, r2 -> p67, r45 -> p60 [p53] | CMP LOAD
279: 175 180 181 181, r45 -> p60, r44 -> p15 [p50], r49 -> p54 [p75] | CMP SUB_IMM
280: 176 181 182 182, r49 -> p54 | J JMP_IMM
281: 177 178 181 182, r2 -> p67, r44 -> p57 [p15] | MOVZX LOAD
282: 177 181 182 182, r44 -> p57, r0 -> p14 [p121] | MOVZX ZEXT_BYTE_TO_DWORD
283: 177 178 181 182, r5 -> p118, r45 -> p71 [p60] | CMP LOAD
284: 177 182 183 183, r0 -> p14, r45 -> p71, r44 -> p6 [p57], r49 -> p74 [p54] | CMP SUB
285: 178 183 184 184, r49 -> p74 | J JMP_IMM
286: 180 181 184 184, r2 -> p67, r5 -> p120 [p118] | MOV LOAD
287: 181 182 183 184, r45 -> p63 [p71] | CMP SAVE_PC
288: 182 183 186 186, r45 -> p63, r45 -> p62 [p63] | CMP LOAD
289: 182 186 187 187, r5 -> p120, r45 -> p62, r44 -> p79 [p6], r49 -> p0 [p74] | CMP SUB
290: 182 187 188 188, r49 -> p0 | J JMP_IMM
291: 182 184 185 188, r5 -> p120, r0 -> p9 [p14] | MOV ADD
292: 183 185 186 188, r0 -> p9, r0 -> p78 [p9], r49 -> p72 [p0] | SHR SHR_IMM
293: 184 186 187 188, r0 -> p78, r5 -> p120, r0 -> p82 [p78], r49 -> p66 [p72] | XOR XOR
294: 184 187 188 189, r0 -> p82, r0 -> p87 [p82], r49 -> p58 [p66] | AND AND_IMM
295: 184 188 189 189, r0 -> p87, r0 -> p85 [p87], r49 -> p52 [p58] | SHL SHL_IMM
296: 186 189 192 192, r0 -> p85, r2 -> p7 [p67] | MOV LOAD
297: 187 189 190 192, r0 -> p85, r12 -> p11 [p5] | LEA LEA
298: 188 192 193 193, r2 -> p7, r2 -> p7, r44 -> p2 [p79], r49 -> p56 [p52] | TEST AND
299: 188 193 194 194, r49 -> p56 | J JMP_IMM
300: 188 192 195 195, r2 -> p7, r45 -> p73 [p62] | CMP LOAD
301: 188 195 196 196, r45 -> p73, r5 -> p120, r44 -> p1 [p2], r49 -> p68 [p56] | CMP SUB
302: 189 196 197 197, r49 -> p68 | J JMP_IMM
303: 189 190 191 197 | JMP JMP_IMM
304: 192 193 196 197, r2 -> p7, r12 -> p97 [p11] | MOV LOAD
305: 192 193 194 197, r44 -> p70 [p1] | MOV SAVE_PC
306: 193 194 195 198, r5 -> p120, r44 -> p70 | MOV STORE
307: 194 195 196 198, r44 -> p84 [p70] | MOV SAVE_PC
308: 195 196 197 198, r2 -> p7, r44 -> p84 | MOV STORE
309: 196 197 198 198, r12 -> p97, r0 -> p64 [p85] | MOVSX SEXT_DWORD_TO_QWORD
310: 197 198 199 199, r0 -> p64, r0 -> p64, r14 -> p99 [p115] | LEA LEA
311: 197 199 200 200, r14 -> p99, r14 -> p96 [p99], r49 -> p104 [p68] | SHL SHL_IMM
312: 197 200 201 201, r14 -> p96, r13 -> p103 [p113] | MOV ADD
313: 197 198 199 201, r44 -> p91 [p84] | ADD SAVE_PC
314: 198 199 202 202, r44 -> p91, r44 -> p102 [p91] | ADD LOAD
315: 198 202 203 203, r13 -> p103, r44 -> p102, r13 -> p100 [p103], r49 -> p76 [p104] | ADD ADD
316: 198 199 202 203, r2 -> p7, r45 -> p4 [p73] | CMP LOAD
317: 198 202 203 203, r45 -> p4, r5 -> p120, r44 -> p89 [p102], r49 -> p94 [p76] | CMP SUB
318: 199 203 204 204, r49 -> p94 | J JMP_IMM
319: 200 201 202 204, r45 -> p126 [p4] | CMP SAVE_PC
320: 201 202 205 205, r45 -> p126, r45 -> p110 [p126] | CMP LOAD
321: 201 205 206 206, r3 -> p123, r45 -> p110, r44 -> p112 [p89], r49 -> p65 [p94] | CMP SUB
322: 202 206 207 207, r49 -> p65 | J JMP_IMM
323: 203 204 205 207, r3 -> p123, r0 -> p44 [p64] | MOV ADD
324: 203 205 206 207, r0 -> p44, r0 -> p109 [p44], r49 -> p95 [p65] | SHR SHR_IMM
325: 203 206 207 207, r0 -> p109, r3 -> p123, r0 -> p10 [p109], r49 -> p101 [p95] | XOR XOR
326: 204 207 208 208, r0 -> p10, r0 -> p90 [p10], r49 -> p93 [p101] | AND AND_IMM
327: 204 208 209 209, r0 -> p90, r0 -> p114 [p90], r49 -> p98 [p93] | SHL SHL_IMM
328: 205 209 212 212, r0 -> p114, r2 -> p105 [p7] | MOV LOAD
329: 206 209 210 212, r0 -> p114, r5 -> p86 [p120] | LEA LEA
330: 207 212 213 213, r2 -> p105, r2 -> p105, r44 -> p107 [p112], r49 -> p116 [p98] | TEST AND
331: 207 213 214 214, r49 -> p116 | J JMP_IMM
332: 207 212 215 215, r2 -> p105, r45 -> p55 [p110] | CMP LOAD
333: 207 215 216 216, r3 -> p123, r45 -> p55, r44 -> p122 [p107], r49 -> p127 [p116] | CMP SUB
334: 208 216 217 217, r49 -> p127 | J JMP_IMM
335: 209 210 211 217, r44 -> p108 [p122] | MOV SAVE_PC
336: 212 213 214 217, r3 -> p123, r44 -> p108 | MOV STORE
337: 212 213 214 217, r44 -> p111 [p108] | MOV SAVE_PC
338: 213 214 215 218, r2 -> p105, r44 -> p111 | MOV STORE
339: 214 215 216 218, r12 -> p97, r2 -> p105 | MOV STORE
340: 215 216 219 219, r13 -> p100, r2 -> p49 [p105] | MOV LOAD
341: 216 217 220 220, r13 -> p100, r7 -> p88 [p106] | MOV LOAD
342: 217 219 220 220, r2 -> p49, r44 -> p3 [p111], r49 -> p45 [p127] | CMP SUB_IMM
343: 217 220 221 221, r49 -> p45 | J JMP_IMM
344: 217 218 219 221, r3 -> p123, r44 -> p13 [p3], r49 -> p125 [p45] | CMP SUB_IMM
345: 217 219 220 221, r49 -> p125 | J JMP_IMM
346: 218 219 220 221, r2 -> p49, r44 -> p69 [p13], r49 -> p51 [p125] | CMP SUB_IMM
347: 218 219 220 222, r2 -> p49, r1 -> p83 [p124] | MOV ADD
348: 219 220 221 222, r3 -> p123, r8 -> p12 [p8] | MOV ADD
349: 220 221 222 222, r49 -> p51 | J JMP_IMM
350: 220 221 222 222, r44 -> p61 [p69] | MOV SAVE_PC
351: 221 222 225 225, r44 -> p61, r10 -> p80 [p119] | MOV LOAD
352: 221 222 223 225, r44 -> p53 [p61] | MOV SAVE_PC
353: 221 223 226 226, r44 -> p53, r6 -> p50 [p77] | MOV LOAD
354: 221 225 228 228, r8 -> p12, r10 -> p80, r1 -> p75 [p83] | MOV LOAD
355: 222 228 231 231, r1 -> p75, r44 -> p15 [p53] | MOVSX LOAD
356: 222 231 232 232, r44 -> p15, r0 -> p121 [p114] | MOVSX SEXT_DWORD_TO_QWORD
357: 222 232 235 235, r0 -> p121, r6 -> p50, r9 -> p60 [p81] | MOV LOAD
358: 222 223 224 235, r45 -> p57 [p55] | CMP SAVE_PC
359: 225 226 229 235, r45 -> p57, r45 -> p54 [p57] | CMP LOAD
360: 225 235 236 236, r9 -> p60, r45 -> p54, r44 -> p118 [p15], r49 -> p71 [p51] | CMP SUB
361: 226 236 237 237, r49 -> p71 | J JMP_IMM
362: 228 229 232 237, r1 -> p75, r44 -> p63 [p118] | MOVSX LOAD
363: 231 232 233 237, r44 -> p63, r0 -> p6 [p121] | MOVSX SEXT_DWORD_TO_QWORD
364: 232 233 236 237, r0 -> p6, r6 -> p50, r0 -> p74 [p6] | MOV LOAD
365: 235 236 237 238, r45 -> p14 [p54] | CMP SAVE_PC
366: 235 237 240 240, r45 -> p14, r45 -> p9 [p14] | CMP LOAD
367: 235 240 241 241, r0 -> p74, r45 -> p9, r44 -> p0 [p63], r49 -> p78 [p71] | CMP SUB
368: 236 241 242 242, r49 -> p78 | J JMP_IMM
369: 237 238 239 242, r7 -> p88, r44 -> p72 [p0], r49 -> p82 [p78] | CMP SUB_IMM
370: 237 239 240 242, r49 -> p82 | J JMP_IMM
371: 237 238 239 242, r44 -> p66 [p72] | MOV SAVE_PC
372: 237 239 242 243, r44 -> p66, r6 -> p87 [p50] | MOV LOAD
373: 238 239 240 243, r7 -> p88, r0 -> p58 [p74] | MOV ADD
374: 240 241 242 243, r0 -> p58, r0 -> p67 [p58], r49 -> p5 [p82] | SHL SHL_IMM
375: 241 242 243 243 | JMP JMP_IMM
376: 242 243 244 244, r0 -> p67, r6 -> p87, r2 -> p79 [p49] | LEA LEA
377: 242 243 244 244, r8 -> p12, r6 -> p87, r1 -> p52 [p75] | LEA LEA
378: 242 244 247 247, r2 -> p79, r0 -> p62 [p67] | MOV LOAD
379: 242 247 248 248, r0 -> p62, r1 -> p52 | MOV STORE
380: 243 244 247 248, r2 -> p79, r0 -> p2 [p62] | MOV LOAD
381: 243 247 248 248, r0 -> p2, r0 -> p2, r44 -> p56 [p66], r49 -> p11 [p5] | TEST AND
382: 243 248 249 249, r49 -> p11 | J JMP_IMM
383: 243 244 245 249, r44 -> p1 [p56] | MOV SAVE_PC
384: 244 245 248 249, r44 -> p1, r0 -> p70 [p2] | MOV LOAD
385: 244 248 249 249, r14 -> p96, r0 -> p70, r44 -> p85 [p1] | MOV LEA
386: 247 249 250 250, r3 -> p123, r44 -> p85 | MOV STORE
387: 248 249 250 250 | JMP JMP_IMM
388: 248 249 250 250, r0 -> p115 [p70] | MOV ADD_IMM
389: 248 249 250 250, r3 -> p123, r2 -> p79 | MOV STORE
390: 249 250 251 251, r7 -> p88, r1 -> p52 | MOV STORE
391: 249 250 251 251 | JMP JMP_IMM
392: 249 250 253 253, r4 -> p117, r3 -> p99 [p123] | POP LOAD
393: 249 250 251 253, r4 -> p117, r4 -> p68 [p117] | POP ADD_IMM
394: 250 251 254 254, r4 -> p68, r5 -> p113 [p86] | POP LOAD
395: 250 251 252 254, r4 -> p68, r4 -> p84 [p68] | POP ADD_IMM
396: 250 252 255 255, r4 -> p84, r12 -> p91 [p97] | POP LOAD
397: 250 252 253 255, r4 -> p84, r4 -> p103 [p84] | POP ADD_IMM
398: 251 253 256 256, r4 -> p103, r13 -> p104 [p100] | POP LOAD
399: 251 253 254 256, r4 -> p103, r4 -> p73 [p103] | POP ADD_IMM
400: 253 254 257 257, r4 -> p73, r14 -> p102 [p96] | POP LOAD
401: 253 254 255 257, r4 -> p73, r4 -> p76 [p73] | POP ADD_IMM
402: 254 255 258 258, r4 -> p76, r44 -> p4 [p85] | RET LOAD
403: 254 255 256 258, r4 -> p76, r4 -> p126 [p76] | RET ADD_IMM
404: 255 258 259 259, r44 -> p4 | RET JMP_REG
405: 255 256 257 259, r0 -> p115, r0 -> p115, r44 -> p89 [p4], r49 -> p94 [p11] | TEST AND
406: 256 257 258 259, r49 -> p94 | J JMP_IMM
407: 256 257 258 259, r12 -> p91, r7 -> p64 [p88] | MOV ADD
408: 257 258 259 260, r44 -> p44 [p89] | CALL SAVE_PC
409: 257 258 259 260, r4 -> p126, r4 -> p65 [p126] | CALL SUB_IMM
410: 258 259 260 260, r44 -> p44, r4 -> p65 | CALL STORE
411: 258 259 260 260 | CALL JMP_IMM
412: 259 260 261 261, r15 -> p59, r4 -> p65 | PUSH STORE
413: 259 260 261 261, r4 -> p65, r4 -> p109 [p65] | PUSH SUB_IMM
414: 259 260 261 261, r7 -> p64, r15 -> p95 [p59] | MOV ADD
415: 259 261 262 262, r14 -> p102, r4 -> p109 | PUSH STORE
416: 260 261 262 262, r4 -> p109, r4 -> p10 [p109] | PUSH SUB_IMM
417: 260 262 263 263, r13 -> p104, r4 -> p10 | PUSH STORE
418: 260 262 263 263, r4 -> p10, r4 -> p101 [p10] | PUSH SUB_IMM
419: 260 263 264 264, r12 -> p91, r4 -> p101 | PUSH STORE
420: 261 263 264 264, r4 -> p101, r4 -> p90 [p101] | PUSH SUB_IMM
421: 261 264 265 265, r5 -> p113, r4 -> p90 | PUSH STORE
422: 261 264 265 265, r4 -> p90, r4 -> p93 [p90] | PUSH SUB_IMM
423: 262 265 266 266, r3 -> p99, r4 -> p93 | PUSH STORE
424: 262 265 266 266, r4 -> p93, r4 -> p7 [p93] | PUSH SUB_IMM
425: 263 266 267 267, r4 -> p7, r4 -> p120 [p7], r49 -> p112 [p94] | SUB SUB_IMM
426: 263 264 267 267, r7 -> p64, r45 -> p98 [p9] | CMP LOAD
427: 264 267 268 268, r45 -> p98, r44 -> p110 [p44], r49 -> p107 [p112] | CMP SUB_IMM
428: 264 268 269 269, r49 -> p107 | J JMP_IMM
429: 265 266 269 269, r15 -> p95, r45 -> p116 [p98] | CMP LOAD
430: 265 269 270 270, r45 -> p116, r44 -> p122 [p110], r49 -> p108 [p107] | CMP SUB_IMM
431: 266 270 271 271, r49 -> p108 | J JMP_IMM
432: 266 267 270 271, r15 -> p95, r3 -> p105 [p99] | MOV LOAD
433: 267 268 269 271, r45 -> p106 [p116] | CMP SAVE_PC
434: 267 269 272 272, r45 -> p106, r45 -> p111 [p106] | CMP LOAD
435: 268 272 273 273, r3 -> p105, r45 -> p111, r44 -> p127 [p122], r49 -> p3 [p108] | CMP SUB
436: 269 273 274 274, r49 -> p3 | J JMP_IMM
437: 269 270 271 274, r44 -> p45 [p127] | MOV SAVE_PC
438: 270 271 274 274, r44 -> p45, r2 -> p13 [p79] | MOV LOAD
439: 271 274 275 275, r2 -> p13, r2 -> p13, r44 -> p125 [p45], r49 -> p124 [p3] | TEST AND
440: 271 275 276 276, r49 -> p124 | J JMP_IMM
441: 271 274 277 277, r2 -> p13, r5 -> p8 [p113] | MOV LOAD
442: 272 277 278 278, r5 -> p8, r5 -> p8, r44 -> p69 [p125], r49 -> p119 [p124] | TEST AND
443: 273 278 279 279, r49 -> p119 | J JMP_IMM
444: 274 275 276 279, r4 -> p120, r4 -> p61 [p120], r49 -> p77 [p119] | ADD ADD_IMM
445: 274 276 279 279, r4 -> p61, r3 -> p83 [p105] | POP LOAD
446: 274 276 277 279, r4 -> p61, r4 -> p53 [p61] | POP ADD_IMM
447: 275 277 280 280, r4 -> p53, r5 -> p114 [p8] | POP LOAD
448: 276 277 278 280, r4 -> p53, r4 -> p81 [p53] | POP ADD_IMM
449: 277 278 281 281, r4 -> p81, r12 -> p55 [p91] | POP LOAD
450: 278 279 280 281, r4 -> p81, r4 -> p57 [p81] | POP ADD_IMM
451: 279 280 283 283, r4 -> p57, r13 -> p15 [p104] | POP LOAD
452: 279 280 281 283, r4 -> p57, r4 -> p51 [p57] | POP ADD_IMM
453: 279 281 284 284, r4 -> p51, r14 -> p118 [p102] | POP LOAD
454: 279 281 282 284, r4 -> p51, r4 -> p121 [p51] | POP ADD_IMM
455: 280 282 285 285, r4 -> p121, r15 -> p6 [p95] | POP LOAD
456: 280 282 283 285, r4 -> p121, r4 -> p54 [p121] | POP ADD_IMM
457: 281 283 286 286, r4 -> p54, r44 -> p14 [p69] | RET LOAD
458: 281 283 284 286, r4 -> p54, r4 -> p63 [p54] | RET ADD_IMM
459: 283 286 287 287, r44 -> p14 | RET JMP_REG
460: 283 284 287 287, r12 -> p55, r45 -> p71 [p111] | CMP LOAD
461: 284 287 288 288, r45 -> p71, r44 -> p0 [p14], r49 -> p78 [p77] | CMP SUB_IMM
462: 284 288 289 289, r49 -> p78 | J JMP_IMM
463: 285 286 289 289, r12 -> p55, r3 -> p72 [p83] | MOV LOAD
464: 285 289 290 290, r3 -> p72, r44 -> p50 [p0], r49 -> p74 [p78] | CMP SUB_IMM
465: 286 290 291 291, r49 -> p74 | J JMP_IMM
466: 286 287 288 291, r45 -> p58 [p71] | CMP SAVE_PC
467: 287 288 291 291, r45 -> p58, r45 -> p82 [p58] | CMP LOAD
468: 287 291 292 292, r3 -> p72, r45 -> p82, r44 -> p49 [p50], r49 -> p75 [p74] | CMP SUB
469: 288 292 293 293, r49 -> p75 | J JMP_IMM
470: 289 290 291 293, r44 -> p67 [p49] | MOV SAVE_PC
471: 289 291 294 294, r44 -> p67, r2 -> p62 [p13] | MOV LOAD
472: 290 294 295 295, r2 -> p62, r2 -> p62, r44 -> p66 [p67], r49 -> p5 [p75] | TEST AND
473: 291 295 296 296, r49 -> p5 | J JMP_IMM
474: 291 294 297 297, r2 -> p62, r0 -> p56 [p115] | MOV LOAD
475: 291 297 298 298, r0 -> p56, r0 -> p2 [p56], r49 -> p1 [p5] | AND AND_IMM
476: 292 293 296 298, r5 -> p114, r2 -> p70 [p62] | MOV LOAD
477: 293 298 299 299, r0 -> p2, r2 -> p70 | MOV STORE
478: 293 294 295 299 | JMP JMP_IMM
479: 294 295 298 299, r14 -> p118, r45 -> p123 [p82] | CMP LOAD
480: 295 298 299 299, r45 -> p123, r44 -> p117 [p66], r49 -> p86 [p1] | CMP SUB_IMM
481: 296 299 300 300, r49 -> p86 | J JMP_IMM
482: 297 298 301 301, r5 -> p114, r0 -> p68 [p2] | MOV LOAD
483: 298 299 302 302, r12 -> p55, r44 -> p97 [p117] | MOVZX LOAD
484: 298 302 303 303, r44 -> p97, r1 -> p84 [p52] | MOVZX ZEXT_BYTE_TO_DWORD
485: 299 300 301 303, r12 -> p55, r7 -> p100 [p64] | MOV ADD
486: 299 301 304 304, r0 -> p68, r2 -> p103 [p70] | MOV LOAD
487: 299 301 304 304, r0 -> p68, r6 -> p96 [p87] | MOV LOAD
488: 299 300 301 304, r44 -> p73 [p97] | CALL SAVE_PC
489: 300 301 302 304, r4 -> p63, r4 -> p85 [p63] | CALL SUB_IMM
490: 301 302 303 305, r44 -> p73, r4 -> p85 | CALL STORE
491: 302 303 304 305 | CALL JMP_IMM
492: 303 304 305 305, r15 -> p6, r4 -> p85 | PUSH STORE
493: 303 304 305 305, r4 -> p85, r4 -> p76 [p85] | PUSH SUB_IMM
494: 304 305 306 306, r2 -> p103, r15 -> p4 [p6] | MOV ADD
495: 304 305 306 306, r14 -> p118, r4 -> p76 | PUSH STORE
496: 304 305 306 306, r4 -> p76, r4 -> p11 [p76] | PUSH SUB_IMM
497: 304 305 306 306, r6 -> p96, r14 -> p88 [p118] | MOV ADD
498: 305 306 307 307, r13 -> p15, r4 -> p11 | PUSH STORE
499: 305 306 307 307, r4 -> p11, r4 -> p89 [p11] | PUSH SUB_IMM
500: 305 307 308 308, r12 -> p55, r4 -> p89 | PUSH STORE
501: 305 307 308 308, r4 -> p89, r4 -> p126 [p89] | PUSH SUB_IMM
502: 306 308 309 309, r5 -> p114, r4 -> p126 | PUSH STORE
503: 306 308 309 309, r4 -> p126, r4 -> p65 [p126] | PUSH SUB_IMM
504: 306 307 308 309, r7 -> p100, r5 -> p59 [p114] | MOV ADD
505: 306 309 310 310, r3 -> p72, r4 -> p65 | PUSH STORE
506: 307 309 310 310, r4 -> p65, r4 -> p109 [p65] | PUSH SUB_IMM
507: 307 310 311 311, r4 -> p109, r4 -> p10 [p109], r49 -> p101 [p86] | SUB SUB_IMM
508: 308 309 312 312, r7 -> p100, r45 -> p90 [p123] | CMP LOAD
509: 308 312 313 313, r45 -> p90, r44 -> p93 [p73], r49 -> p7 [p101] | CMP SUB_IMM
510: 309 311 312 313, r1 -> p84, r4 -> p10 | MOV STORE
511: 309 313 314 314, r49 -> p7 | J JMP_IMM
512: 309 310 313 314, r7 -> p100, r3 -> p94 [p72] | MOV LOAD
513: 310 311 312 314, r45 -> p9 [p90] | CMP SAVE_PC
514: 310 312 315 315, r45 -> p9, r45 -> p44 [p9] | CMP LOAD
515: 311 315 316 316, r3 -> p94, r45 -> p44, r44 -> p112 [p93], r49 -> p98 [p7] | CMP SUB
516: 312 316 317 317, r49 -> p98 | J JMP_IMM
517: 313 314 315 317, r44 -> p110 [p112] | MOV SAVE_PC
518: 313 315 318 318, r44 -> p110, r2 -> p107 [p103] | MOV LOAD
519: 314 318 319 319, r2 -> p107, r2 -> p107, r44 -> p99 [p110], r49 -> p116 [p98] | TEST AND
520: 314 319 320 320, r49 -> p116 | J JMP_IMM
521: 314 318 321 321, r2 -> p107, r45 -> p106 [p44] | CMP LOAD
522: 315 321 322 322, r45 -> p106, r3 -> p94, r44 -> p122 [p99], r49 -> p108 [p116] | CMP SUB
523: 316 322 323 323, r49 -> p108 | J JMP_IMM
524: 317 318 321 323, r5 -> p59, r45 -> p127 [p106] | CMP LOAD
525: 317 321 322 323, r45 -> p127, r44 -> p79 [p122], r49 -> p45 [p108] | CMP SUB_IMM
526: 318 322 323 323, r49 -> p45 | J JMP_IMM
527: 319 320 321 324, r3 -> p94, r44 -> p3 [p79], r49 -> p113 [p45] | CMP SUB_IMM
528: 320 321 322 324, r49 -> p113 | J JMP_IMM
529: 321 322 323 324, r44 -> p125 [p3] | MOV SAVE_PC
530: 322 323 326 326, r44 -> p125, r13 -> p124 [p15] | MOV LOAD
531: 323 326 327 327, r13 -> p124, r13 -> p124, r44 -> p120 [p125], r49 -> p119 [p113] | TEST AND
532: 323 327 328 328, r49 -> p119 | J JMP_IMM
533: 323 326 329 329, r13 -> p124, r0 -> p105 [p68] | MOV LOAD
534: 323 324 325 329, r44 -> p61 [p120] | MOV SAVE_PC
535: 324 329 330 330, r0 -> p105, r44 -> p61 | MOV STORE
536: 324 326 327 330, r5 -> p59, r13 -> p124 | MOV STORE
537: 324 326 327 330, r13 -> p124 | MOV STORE
538: 326 327 330 330, r5 -> p59, r44 -> p8 [p61] | MOVZX LOAD
539: 327 330 331 331, r44 -> p8, r0 -> p53 [p105] | MOVZX ZEXT_WORD_TO_DWORD
540: 328 331 332 332, r0 -> p53, r44 -> p91 [p8], r49 -> p81 [p119] | CMP SUB_IMM
541: 329 332 333 333, r49 -> p81 | J JMP_IMM
542: 329 330 331 333, r0 -> p104 [p53] | XOR ADD
543: 330 331 332 333 | JMP JMP_IMM
544: 330 331 332 333, r0 -> p104, r13 -> p124 | MOV STORE
545: 330 331 332 334, r5 -> p59, r7 -> p57 [p100] | MOV ADD
546: 330 332 333 334, r44 -> p102 [p91] | CALL SAVE_PC
547: 331 332 333 334, r4 -> p10, r4 -> p51 [p10] | CALL SUB_IMM
548: 332 333 334 334, r44 -> p102, r4 -> p51 | CALL STORE
549: 333 334 335 335 | CALL JMP_IMM
550: 333 334 335 335, r12 -> p55, r4 -> p51 | PUSH STORE
551: 333 334 335 335, r4 -> p51, r4 -> p95 [p51] | PUSH SUB_IMM
552: 333 335 336 336, r5 -> p59, r4 -> p95 | PUSH STORE
553: 334 335 336 336, r4 -> p95, r4 -> p121 [p95] | PUSH SUB_IMM
554: 334 335 336 336, r5 -> p69 [p59] | XOR ADD
555: 334 336 337 337, r3 -> p94, r4 -> p121 | PUSH STORE
556: 334 336 337 337, r4 -> p121, r4 -> p54 [p121] | PUSH SUB_IMM
557: 335 336 337 337, r3 -> p111 [p94] | XOR ADD
558: 335 337 338 338, r4 -> p54, r4 -> p14 [p54], r49 -> p77 [p81] | SUB SUB_IMM
559: 335 338 339 339, r4 -> p14, r12 -> p83 [p55] | LEA LEA
560: 336 338 339 339, r7 -> p57, r4 -> p14 | MOV STORE
561: 336 339 340 340, r12 -> p83, r7 -> p0 [p57] | MOV ADD
562: 336 337 338 340, r44 -> p78 [p102] | CALL SAVE_PC
563: 337 338 339 340, r4 -> p14, r4 -> p71 [p14] | CALL SUB_IMM
564: 337 339 340 340, r44 -> p78, r4 -> p71 | CALL STORE
565: 337 338 339 341 | CALL JMP_IMM
566: 338 340 341 341, r7 -> p0, r0 -> p58 [p104] | MOV ADD
567: 339 340 341 341, r7 -> p0 | MOV STORE
568: 339 340 341 341, r7 -> p0 | MOV STORE
569: 340 341 344 344, r4 -> p71, r44 -> p50 [p78] | RET LOAD
570: 340 341 342 344, r4 -> p71, r4 -> p74 [p71] | RET ADD_IMM
571: 340 344 345 345, r44 -> p50 | RET JMP_REG
572: 340 342 343 345, r4 -> p74, r7 -> p49 [p0] | LEA LEA
573: 341 342 343 345, r12 -> p83, r2 -> p13 [p107] | MOV ADD
574: 341 342 343 345, r6 -> p67 [p96] | MOV ADD_IMM
575: 341 342 343 346, r44 -> p75 [p50] | CALL SAVE_PC
576: 341 343 344 346, r4 -> p74, r4 -> p115 [p74] | CALL SUB_IMM
577: 344 345 346 346, r44 -> p75, r4 -> p115 | CALL STORE
578: 344 345 346 346 | CALL JMP_IMM
579: 345 346 347 347, r15 -> p4, r4 -> p115 | PUSH STORE
580: 345 346 347 347, r4 -> p115, r4 -> p56 [p115] | PUSH SUB_IMM
581: 345 346 347 347, r6 -> p67, r15 -> p5 [p4] | MOV ADD
582: 345 346 347 347, r2 -> p13, r6 -> p62 [p67] | MOV ADD
583: 346 347 348 348, r14 -> p88, r4 -> p56 | PUSH STORE
584: 346 347 348 348, r4 -> p56, r4 -> p82 [p56] | PUSH SUB_IMM
585: 346 347 348 348, r2 -> p13, r14 -> p66 [p88] | MOV ADD
586: 346 348 349 349, r13 -> p124, r4 -> p82 | PUSH STORE
587: 347 348 349 349, r4 -> p82, r4 -> p1 [p82] | PUSH SUB_IMM
588: 347 349 350 350, r12 -> p83, r4 -> p1 | PUSH STORE
589: 347 349 350 350, r4 -> p1, r4 -> p2 [p1] | PUSH SUB_IMM
590: 347 350 351 351, r5 -> p69, r4 -> p2 | PUSH STORE
591: 348 350 351 351, r4 -> p2, r4 -> p117 [p2] | PUSH SUB_IMM
592: 348 351 352 352, r3 -> p111, r4 -> p117 | PUSH STORE
593: 348 351 352 352, r4 -> p117, r4 -> p52 [p117] | PUSH SUB_IMM
594: 349 352 353 353, r4 -> p52, r4 -> p64 [p52], r49 -> p70 [p77] | SUB SUB_IMM
595: 349 353 354 354, r7 -> p49, r4 -> p64 | MOV STORE
596: 350 351 352 354, r44 -> p87 [p75] | CALL SAVE_PC
597: 350 353 354 354, r4 -> p64, r4 -> p97 [p64] | CALL SUB_IMM
598: 351 354 355 355, r44 -> p87, r4 -> p97 | CALL STORE
599: 351 352 353 355, r15 -> p5 | CALL JMP_REG
600: 352 354 355 355, r4 -> p97, r4 -> p63 [p97], r49 -> p85 [p70] | SUB SUB_IMM
601: 352 353 356 356, r7 -> p49, r0 -> p6 [p58] | MOV LOAD
602: 353 354 355 356, r6 -> p62, r2 -> p76 [p13] | MOV ADD
603: 354 356 357 357, r0 -> p6, r0 -> p6, r44 -> p118 [p87], r49 -> p11 [p85] | TEST AND
604: 354 357 358 358, r49 -> p11 | J JMP_IMM
605: 354 356 359 359, r0 -> p6, r45 -> p89 [p127] | CMP LOAD
606: 355 359 360 360, r45 -> p89, r44 -> p126 [p118], r49 -> p114 [p11] | CMP SUB_IMM
607: 355 360 361 361, r49 -> p114 | J JMP_IMM
608: 355 356 359 361, r0 -> p6, r6 -> p65 [p62] | MOV LOAD
609: 356 357 358 361, r2 -> p76, r7 -> p109 [p49] | MOV ADD
610: 356 357 358 361, r44 -> p86 [p126] | CALL SAVE_PC
611: 357 358 359 362, r4 -> p63, r4 -> p123 [p63] | CALL SUB_IMM
612: 358 359 360 362, r44 -> p86, r4 -> p123 | CALL STORE
613: 359 360 361 362 | CALL JMP_IMM
614: 360 361 362 362, r12 -> p83, r4 -> p123 | PUSH STORE
615: 361 362 363 363, r4 -> p123, r4 -> p73 [p123] | PUSH SUB_IMM
616: 361 362 363 363, r6 -> p65, r12 -> p101 [p83] | MOV ADD
617: 361 363 364 364, r12 -> p101, r12 -> p72 [p101], r49 -> p90 [p114] | SHR SHR_IMM
618: 361 363 364 364, r5 -> p69, r4 -> p73 | PUSH STORE
619: 362 363 364 364, r4 -> p73, r4 -> p9 [p73] | PUSH SUB_IMM
620: 362 363 364 364, r7 -> p109, r5 -> p93 [p69] | MOV ADD
621: 362 364 365 365, r3 -> p111, r4 -> p9 | PUSH STORE
622: 362 364 365 365, r4 -> p9, r4 -> p7 [p9] | PUSH SUB_IMM
623: 363 364 367 367, r7 -> p109, r7 -> p112 [p109] | MOV LOAD
624: 363 364 365 367, r6 -> p65, r3 -> p103 [p111] | MOV ADD
625: 364 367 368 368, r7 -> p112, r7 -> p112, r44 -> p110 [p86], r49 -> p98 [p90] | TEST AND
626: 364 368 369 369, r49 -> p98 | J JMP_IMM
627: 364 365 366 369, r44 -> p44 [p110] | MOV SAVE_PC
628: 364 366 369 369, r44 -> p44, r6 -> p99 [p65] | MOV LOAD
629: 365 369 370 370, r6 -> p99, r6 -> p99, r44 -> p116 [p44], r49 -> p106 [p98] | TEST AND
630: 365 370 371 371, r49 -> p106 | J JMP_IMM
631: 367 369 372 372, r6 -> p99, r0 -> p122 [p6] | MOV LOAD
632: 367 368 369 372, r44 -> p108 [p116] | MOV SAVE_PC
633: 368 372 373 373, r0 -> p122, r44 -> p108 | MOV STORE
634: 369 370 371 373, r3 -> p103, r2 -> p79 [p76] | MOV ADD
635: 369 370 371 373, r3 -> p103, r3 -> p45 [p103], r49 -> p3 [p106] | AND AND_IMM
636: 369 370 371 373, r0 -> p15 [p122] | MOV ADD_IMM
637: 370 371 372 374, r2 -> p79, r2 -> p125 [p79], r49 -> p113 [p3] | SHR SHR_IMM
638: 371 372 373 374, r3 -> p45, r1 -> p68 [p84] | MOV ADD
639: 372 373 374 374, r6 -> p99 | MOV STORE
640: 372 373 374 374, r6 -> p99 | MOV STORE
641: 373 374 375 375, r2 -> p125, r2 -> p120 [p125], r49 -> p61 [p113] | AND AND_IMM
642: 373 374 375 375, r0 -> p15, r1 -> p68, r0 -> p105 [p15], r49 -> p8 [p61] | SHL SHL
643: 373 374 377 377, r5 -> p93, r45 -> p119 [p89] | CMP LOAD
644: 373 377 378 378, r45 -> p119, r44 -> p53 [p108], r49 -> p100 [p8] | CMP SUB
645: 374 375 376 378, r12 -> p72, r6 -> p99 | MOV STORE
646: 374 375 376 378, r2 -> p120, r6 -> p99, r44 -> p91 [p53] | MOV LEA
647: 374 376 377 378, r0 -> p105, r44 -> p91 | MOV STORE
648: 374 378 379 379, r49 -> p100 | J JMP_IMM
649: 375 376 377 379, r6 -> p99 | MOV STORE
650: 375 376 377 379, r6 -> p99 | MOV STORE
651: 377 378 379 379, r6 -> p99, r5 -> p93 | MOV STORE
652: 378 379 380 380 | JMP JMP_IMM
653: 378 379 380 380, r6 -> p99, r5 -> p93 | MOV STORE
654: 378 379 380 380, r12 -> p72, r5 -> p93 | MOV STORE
655: 378 379 382 382, r4 -> p7, r3 -> p10 [p45] | POP LOAD
656: 379 380 381 382, r4 -> p7, r4 -> p51 [p7] | POP ADD_IMM
657: 379 381 384 384, r4 -> p51, r5 -> p95 [p93] | POP LOAD
658: 379 381 382 384, r4 -> p51, r4 -> p59 [p51] | POP ADD_IMM
659: 379 382 385 385, r4 -> p59, r12 -> p121 [p72] | POP LOAD
660: 380 382 383 385, r4 -> p59, r4 -> p94 [p59] | POP ADD_IMM
661: 380 383 386 386, r4 -> p94, r44 -> p54 [p91] | RET LOAD
662: 380 383 384 386, r4 -> p94, r4 -> p81 [p94] | RET ADD_IMM
663: 382 386 387 387, r44 -> p54 | RET JMP_REG
664: 382 383 384 387, r0 -> p55 [p105] | XOR ADD
665: 384 385 386 387, r4 -> p81, r4 -> p57 [p81], r49 -> p102 [p100] | ADD ADD_IMM
666: 384 386 389 389, r4 -> p57, r44 -> p14 [p54] | RET LOAD
667: 385 386 387 389, r4 -> p57, r4 -> p104 [p57] | RET ADD_IMM
668: 385 389 390 390, r44 -> p14 | RET JMP_REG
669: 386 387 388 390, r0 -> p55, r4 -> p104 | MOV STORE
670: 386 387 388 390, r0 -> p55, r0 -> p78 [p55], r49 -> p71 [p102] | ADD ADD_IMM
671: 387 388 389 390, r49 -> p71 | J JMP_IMM
672: 387 388 391 391, r4 -> p104, r11 -> p0 [p92] | MOV LOAD
673: 387 391 392 392, r11 -> p0, r11 -> p0, r44 -> p107 [p14], r49 -> p96 [p71] | TEST AND
674: 389 392 393 393, r49 -> p96 | J JMP_IMM
675: 389 390 393 393, r4 -> p104, r2 -> p50 [p120] | MOV LOAD
676: 390 393 396 396, r2 -> p50, r0 -> p74 [p78] | MOV LOAD
677: 390 396 397 397, r0 -> p74, r0 -> p74, r44 -> p115 [p107], r49 -> p4 [p96] | TEST AND
678: 390 397 398 398, r49 -> p4 | J JMP_IMM
679: 390 396 399 399, r0 -> p74, r44 -> p67 [p115] | MOVZX LOAD
680: 391 399 400 400, r44 -> p67, r0 -> p56 [p74] | MOVZX ZEXT_WORD_TO_DWORD
681: 392 400 403 403, r0 -> p56, r1 -> p88 [p68] | MOV LOAD
682: 393 400 403 403, r0 -> p56, r44 -> p82 [p67] | MOVZX LOAD
683: 393 403 404 404, r44 -> p82, r0 -> p1 [p56] | MOVZX ZEXT_BYTE_TO_DWORD
684: 396 403 404 404, r1 -> p88, r4 -> p104 | MOV STORE
685: 397 404 405 405, r0 -> p1, r0 -> p1, r44 -> p2 [p82], r49 -> p117 [p4] | TEST AND
686: 398 405 406 406, r49 -> p117 | J JMP_IMM
687: 399 404 405 406, r0 -> p1, r0 -> p52 [p1], r49 -> p77 [p117] | SUB SUB_IMM
688: 400 401 402 406, r4 -> p104 | MOV STORE
689: 403 405 406 406, r0 -> p52, r0 -> p75 [p52], r49 -> p64 [p77] | ADD ADD_IMM
690: 403 406 407 407, r0 -> p75, r4 -> p104 | MOV STORE
691: 404 405 408 408, r4 -> p104, r3 -> p97 [p10] | MOV LOAD
692: 404 405 408 408, r4 -> p104, r1 -> p70 [p88] | MOV LOAD
693: 405 406 409 409, r4 -> p104, r2 -> p58 [p50] | MOV LOAD
694: 406 408 411 411, r1 -> p70, r3 -> p97, r44 -> p13 [p2] | MOVZX LOAD
695: 406 411 412 412, r44 -> p13, r0 -> p87 [p75] | MOVZX ZEXT_BYTE_TO_DWORD
696: 406 412 413 413, r0 -> p87, r44 -> p85 [p13], r49 -> p127 [p64] | CMP SUB_IMM
697: 406 413 414 414, r49 -> p127 | J JMP_IMM
698: 407 412 413 414, r0 -> p87, r44 -> p118 [p85], r49 -> p11 [p127] | CMP SUB_IMM
699: 408 413 414 414, r49 -> p11 | J JMP_IMM
700: 408 412 413 414, r0 -> p87, r44 -> p62 [p118], r49 -> p49 [p11] | CMP SUB_IMM
701: 409 413 414 415, r49 -> p49 | J JMP_IMM
702: 411 412 415 415, r4 -> p104, r45 -> p126 [p119] | ADD LOAD
703: 412 415 416 416, r45 -> p126, r44 -> p63 [p62], r49 -> p123 [p49] | ADD ADD_IMM
704: 413 416 417 417, r44 -> p63, r4 -> p104 | ADD STORE
705: 414 415 418 418, r4 -> p104, r0 -> p83 [p87] | MOV LOAD
706: 414 415 418 418, r4 -> p104, r45 -> p101 [p126] | CMP LOAD
707: 414 418 419 419, r45 -> p101, r0 -> p83, r44 -> p114 [p63], r49 -> p73 [p123] | CMP SUB
708: 414 419 420 420, r49 -> p73 | J JMP_IMM
709: 415 416 419 420, r4 -> p104, r3 -> p69 [p97] | MOV LOAD
710: 415 416 419 420, r4 -> p104, r1 -> p9 [p70] | MOV LOAD
711: 416 417 420 420, r4 -> p104, r2 -> p109 [p58] | MOV LOAD
712: 417 419 422 422, r1 -> p9, r3 -> p69, r44 -> p111 [p114] | MOVZX LOAD
713: 418 422 423 423, r44 -> p111, r0 -> p86 [p83] | MOVZX ZEXT_BYTE_TO_DWORD
714: 418 423 424 424, r0 -> p86, r44 -> p90 [p111], r49 -> p110 [p73] | CMP SUB_IMM
715: 419 424 425 425, r49 -> p110 | J JMP_IMM
716: 420 423 424 425, r0 -> p86, r44 -> p65 [p90], r49 -> p44 [p110] | CMP SUB_IMM
717: 420 424 425 425, r49 -> p44 | J JMP_IMM
718: 420 423 424 425, r0 -> p86, r44 -> p98 [p65], r49 -> p6 [p44] | CMP SUB_IMM
719: 420 424 425 426, r49 -> p6 | J JMP_IMM
720: 422 423 426 426, r4 -> p104, r45 -> p116 [p101] | ADD LOAD
721: 423 426 427 427, r45 -> p116, r44 -> p76 [p98], r49 -> p103 [p6] | ADD ADD_IMM
722: 424 427 428 428, r44 -> p76, r4 -> p104 | ADD STORE
723: 425 426 429 429, r4 -> p104, r0 -> p106 [p86] | MOV LOAD
724: 425 426 429 429, r4 -> p104, r45 -> p122 [p116] | CMP LOAD
725: 425 429 430 430, r45 -> p122, r0 -> p106, r44 -> p79 [p76], r49 -> p3 [p103] | CMP SUB
726: 425 430 431 431, r49 -> p3 | J JMP_IMM
727: 426 427 428 431 | NOP NOP
728: 426 427 430 431, r4 -> p104, r0 -> p84 [p106] | MOV LOAD
729: 427 428 429 431, r4 -> p104, r4 -> p125 [p104], r49 -> p113 [p3] | ADD ADD_IMM
730: 428 429 432 432, r4 -> p125, r3 -> p15 [p69] | POP LOAD
731: 429 430 431 432, r4 -> p125, r4 -> p61 [p125] | POP ADD_IMM
732: 429 431 434 434, r4 -> p61, r5 -> p89 [p95] | POP LOAD
733: 430 431 432 434, r4 -> p61, r4 -> p108 [p61] | POP ADD_IMM
734: 431 432 435 435, r4 -> p108, r12 -> p8 [p121] | POP LOAD
735: 431 432 433 435, r4 -> p108, r4 -> p53 [p108] | POP ADD_IMM
736: 431 433 436 436, r4 -> p53, r13 -> p45 [p124] | POP LOAD
737: 431 433 434 436, r4 -> p53, r4 -> p7 [p53] | POP ADD_IMM
738: 432 434 437 437, r4 -> p7, r14 -> p93 [p66] | POP LOAD
739: 432 434 435 437, r4 -> p7, r4 -> p51 [p7] | POP ADD_IMM
740: 434 435 438 438, r4 -> p51, r15 -> p72 [p5] | POP LOAD
741: 434 435 436 438, r4 -> p51, r4 -> p59 [p51] | POP ADD_IMM
742: 435 436 439 439, r4 -> p59, r44 -> p91 [p79] | RET LOAD
743: 435 436 437 439, r4 -> p59, r4 -> p94 [p59] | RET ADD_IMM
744: 436 439 440 440, r44 -> p91 | RET JMP_REG
745: 436 437 440 440, r4 -> p94, r8 -> p105 [p12] | MOV LOAD
746: 437 440 441 441, r8 -> p105, r8 -> p105, r44 -> p81 [p91], r49 -> p100 [p113] | TEST AND
747: 437 441 442 442, r49 -> p100 | J JMP_IMM
748: 438 439 440 442, r9 -> p54 [p60] | XOR ADD
749: 438 440 443 443, r9 -> p54, r8 -> p105, r6 -> p57 [p99] | MOV LOAD
750: 439 440 441 443, r9 -> p54, r10 -> p55 [p80] | MOV ADD
751: 439 443 444 444, r6 -> p57, r6 -> p57, r44 -> p102 [p81], r49 -> p92 [p100] | TEST AND
752: 440 444 445 445, r49 -> p92 | J JMP_IMM
753: 440 441 442 445, r7 -> p14 [p112] | XOR ADD
754: 441 442 443 445, r11 -> p71 [p0] | MOV ADD_IMM
755: 442 443 444 445 | NOP NOP
756: 442 443 444 446, r7 -> p14, r1 -> p120 [p9] | MOV ADD
757: 443 444 445 446, r11 -> p71, r0 -> p78 [p84] | MOV ADD
758: 443 445 446 446, r0 -> p78, r1 -> p120, r0 -> p107 [p78], r49 -> p96 [p92] | SHL SHL
759: 444 446 447 447, r0 -> p107, r6 -> p57, r44 -> p115 [p102], r49 -> p74 [p96] | TEST AND
760: 445 447 448 448, r49 -> p74 | J JMP_IMM
761: 445 446 447 448, r0 -> p107, r0 -> p68 [p107] | NOT NOT
762: 445 447 448 448, r6 -> p57, r0 -> p68, r6 -> p67 [p57], r49 -> p56 [p74] | AND AND
763: 445 446 449 449, r8 -> p105, r0 -> p82 [p68] | MOV LOAD
764: 446 449 450 450, r0 -> p82, r10 -> p55, r0 -> p4 [p82] | LEA LEA
765: 446 450 451 451, r0 -> p4, r0 -> p1 [p4], r49 -> p117 [p56] | SHL SHL_IMM
766: 446 451 452 452, r1 -> p120, r0 -> p1, r2 -> p52 [p109] | LEA LEA
767: 447 452 453 453, r2 -> p52, r44 -> p77 [p115], r49 -> p10 [p117] | CMP SUB_IMM
768: 448 453 454 454, r49 -> p10 | J JMP_IMM
769: 448 452 453 454, r2 -> p52, r44 -> p88 [p77], r49 -> p50 [p10] | CMP SUB_IMM
770: 448 453 454 454, r49 -> p50 | J JMP_IMM
771: 449 452 453 454, r2 -> p52, r44 -> p2 [p88], r49 -> p75 [p50] | CMP SUB_IMM
772: 450 453 454 455, r49 -> p75 | J JMP_IMM
773: 451 452 453 455, r2 -> p52, r44 -> p13 [p2], r49 -> p64 [p75] | CMP SUB_IMM
774: 452 453 454 455, r49 -> p64 | J JMP_IMM
775: 453 454 455 455, r2 -> p52, r0 -> p85 [p1] | LEA LEA
776: 454 455 456 456, r0 -> p85, r44 -> p127 [p13], r49 -> p118 [p64] | CMP SUB_IMM
777: 454 456 457 457, r49 -> p118 | J JMP_IMM
778: 454 455 456 457, r2 -> p52, r44 -> p11 [p127], r49 -> p119 [p118] | CMP SUB_IMM
779: 454 455 456 457, r0 -> p62 [p85] | MOV ADD_IMM
780: 455 456 457 457, r49 -> p119 | J JMP_IMM
781: 455 456 457 458, r3 -> p15, r0 -> p62, r3 -> p49 [p15], r49 -> p87 [p119] | ADD ADD
782: 455 456 457 458, r6 -> p67, r6 -> p67, r44 -> p126 [p11], r49 -> p63 [p87] | TEST AND
783: 455 457 458 458, r49 -> p63 | J JMP_IMM
784: 456 457 458 458, r9 -> p54, r9 -> p123 [p54], r49 -> p97 [p63] | ADD ADD_IMM
785: 457 458 459 459, r9 -> p123, r44 -> p70 [p126], r49 -> p58 [p97] | CMP SUB_IMM
786: 457 459 460 460, r49 -> p58 | J JMP_IMM
787: 457 458 461 461, r9 -> p123, r8 -> p105, r6 -> p114 [p67] | MOV LOAD
788: 457 458 459 461, r9 -> p123, r10 -> p83 [p55] | MOV ADD
789: 458 461 462 462, r6 -> p114, r6 -> p114, r44 -> p111 [p70], r49 -> p73 [p58] | TEST AND
790: 458 462 463 463, r49 -> p73 | J JMP_IMM
791: 458 459 460 463, r9 -> p123, r9 -> p90 [p123], r49 -> p110 [p73] | ADD ADD_IMM
792: 458 460 461 463, r9 -> p90, r44 -> p65 [p111], r49 -> p44 [p110] | CMP SUB_IMM
793: 459 461 462 463, r49 -> p44 | J JMP_IMM
794: 460 461 464 464, r8 -> p105, r8 -> p101 [p105] | MOV LOAD
795: 461 464 465 465, r8 -> p101, r8 -> p101, r44 -> p98 [p65], r49 -> p6 [p44] | TEST AND
796: 461 465 466 466, r49 -> p6 | J JMP_IMM
797: 462 463 464 466, r12 -> p8, r7 -> p86 [p14] | MOV ADD
798: 463 464 465 466, r44 -> p116 [p98] | CALL SAVE_PC
799: 463 464 465 466, r4 -> p94, r4 -> p76 [p94] | CALL SUB_IMM
800: 463 465 466 467, r44 -> p116, r4 -> p76 | CALL STORE
801: 463 464 465 467 | CALL JMP_IMM
802: 464 465 468 468, r7 -> p86, r0 -> p103 [p62] | MOV LOAD
803: 465 468 469 469, r0 -> p103, r0 -> p103, r44 -> p106 [p116], r49 -> p104 [p6] | TEST AND
804: 466 469 470 470, r49 -> p104 | J JMP_IMM
805: 466 467 468 470, r44 -> p3 [p106] | MOV SAVE_PC
806: 466 468 471 471, r44 -> p3, r1 -> p69 [p120] | MOV LOAD
807: 466 467 468 471 | JMP JMP_IMM
808: 467 468 471 471, r0 -> p103, r2 -> p125 [p52] | MOV LOAD
809: 467 471 472 472, r1 -> p69, r0 -> p103 | MOV STORE
810: 468 471 472 472, r2 -> p125, r2 -> p125, r44 -> p95 [p3], r49 -> p61 [p104] | TEST AND
811: 469 472 473 473, r49 -> p61 | J JMP_IMM
812: 470 471 472 473, r44 -> p121 [p95] | MOV SAVE_PC
813: 470 472 473 473, r0 -> p103, r44 -> p121 | MOV STORE
814: 471 472 473 473, r7 -> p86 | MOV STORE
815: 471 472 473 474, r7 -> p86 | MOV STORE
816: 471 473 476 476, r4 -> p76, r44 -> p108 [p121] | RET LOAD
817: 472 473 474 476, r4 -> p76, r4 -> p124 [p76] | RET ADD_IMM
818: 472 476 477 477, r44 -> p108 | RET JMP_REG
819: 473 474 475 477, r5 -> p89, r5 -> p89, r44 -> p53 [p108], r49 -> p66 [p61] | TEST AND
820: 473 475 476 477, r49 -> p66 | J JMP_IMM
821: 473 474 475 477, r4 -> p124, r4 -> p7 [p124], r49 -> p5 [p66] | ADD ADD_IMM
822: 473 474 475 478, r3 -> p49, r0 -> p51 [p103] | MOV ADD
823: 474 475 478 478, r4 -> p7, r3 -> p79 [p49] | POP LOAD
824: 476 477 478 478, r4 -> p7, r4 -> p59 [p7] | POP ADD_IMM
825: 476 478 481 481, r4 -> p59, r5 -> p12 [p89] | POP LOAD
826: 477 478 479 481, r4 -> p59, r4 -> p91 [p59] | POP ADD_IMM
827: 477 479 482 482, r4 -> p91, r12 -> p113 [p8] | POP LOAD
828: 477 479 480 482, r4 -> p91, r4 -> p60 [p91] | POP ADD_IMM
829: 477 480 483 483, r4 -> p60, r44 -> p99 [p53] | RET LOAD
830: 478 480 481 483, r4 -> p60, r4 -> p80 [p60] | RET ADD_IMM
831: 478 483 484 484, r44 -> p99 | RET JMP_REG
832: 478 479 480 484, r15 -> p72, r2 -> p81 [p125] | MOV ADD
833: 481 482 483 484, r0 -> p51, r13 -> p45 | MOV STORE
834: 481 482 483 484, r13 -> p45 | MOV STORE
835: 482 483 484 485, r13 -> p45 | MOV STORE
836: 482 483 486 486, r2 -> p81, r6 -> p100 [p114] | MOV LOAD
837: 483 484 485 486, r13 -> p45 | MOV STORE
838: 483 484 487 487, r4 -> p80, r0 -> p112 [p51] | MOV LOAD
839: 484 485 486 487, r13 -> p45 | MOV STORE
840: 484 485 486 487, r13 -> p45 | MOV STORE
841: 484 486 487 487, r6 -> p100, r13 -> p45 | MOV STORE
842: 484 487 488 488, r0 -> p112, r13 -> p45 | MOV STORE
843: 485 486 489 489, r5 -> p12, r44 -> p0 [p99] | MOVZX LOAD
844: 486 489 490 490, r44 -> p0, r1 -> p9 [p69] | MOVZX ZEXT_WORD_TO_DWORD
845: 486 490 491 491, r1 -> p9, r0 -> p84 [p112] | LEA LEA
846: 487 491 492 492, r0 -> p84, r44 -> p78 [p0], r49 -> p92 [p5] | CMP SUB_IMM
847: 487 492 493 493, r49 -> p92 | J JMP_IMM
848: 487 490 491 493, r1 -> p9, r44 -> p102 [p78], r49 -> p96 [p92] | CMP SUB_IMM
849: 487 491 492 493, r49 -> p96 | J JMP_IMM
850: 488 490 491 493, r1 -> p9, r44 -> p107 [p102], r49 -> p57 [p96] | CMP SUB_IMM
851: 489 491 492 494, r49 -> p57 | J JMP_IMM
852: 490 491 492 494, r1 -> p9, r44 -> p74 [p107], r49 -> p68 [p57] | CMP SUB_IMM
853: 491 492 493 494 | NOP NOP
854: 492 493 494 494, r49 -> p68 | J JMP_IMM
855: 493 494 495 495, r1 -> p9, r44 -> p82 [p74], r49 -> p4 [p68] | CMP SUB_IMM
856: 493 494 495 495 | NOP NOP
857: 493 495 496 496, r49 -> p4 | J JMP_IMM
858: 493 494 495 496, r1 -> p9, r44 -> p56 [p82], r49 -> p109 [p4] | CMP SUB_IMM
859: 494 495 496 496, r49 -> p109 | J JMP_IMM
860: 494 495 496 496, r1 -> p9, r44 -> p115 [p56], r49 -> p117 [p109] | CMP SUB_IMM
861: 494 496 497 497, r49 -> p117 | J JMP_IMM
862: 494 495 498 498, r5 -> p12, r0 -> p77 [p84] | MOV LOAD
863: 495 498 499 499, r0 -> p77, r0 -> p10 [p77], r49 -> p88 [p117] | AND AND_IMM
864: 495 499 500 500, r0 -> p10, r44 -> p50 [p115], r49 -> p2 [p88] | CMP SUB_IMM
865: 496 500 501 501, r49 -> p2 | J JMP_IMM
866: 496 497 498 501, r44 -> p75 [p50] | MOV SAVE_PC
867: 496 498 501 501, r44 -> p75, r8 -> p1 [p101] | MOV LOAD
868: 496 501 502 502, r5 -> p12, r8 -> p1, r44 -> p13 [p75], r49 -> p64 [p2] | CMP SUB
869: 497 502 503 503, r49 -> p64 | J JMP_IMM
870: 498 499 500 503, r44 -> p127 [p13] | MOV SAVE_PC
871: 499 500 503 503, r44 -> p127, r7 -> p118 [p86] | MOV LOAD
872: 500 503 504 504, r5 -> p12, r7 -> p118, r44 -> p85 [p127], r49 -> p15 [p64] | CMP SUB
873: 501 504 505 505, r49 -> p15 | J JMP_IMM
874: 501 502 503 505, r44 -> p119 [p85] | MOV SAVE_PC
875: 501 503 506 506, r44 -> p119, r11 -> p11 [p71] | MOV LOAD
876: 502 506 507 507, r5 -> p12, r11 -> p11, r44 -> p87 [p119], r49 -> p54 [p15] | CMP SUB
877: 503 507 508 508, r49 -> p54 | J JMP_IMM
878: 503 504 505 508, r44 -> p63 [p87] | MOV SAVE_PC
879: 503 505 508 508, r44 -> p63, r9 -> p126 [p90] | MOV LOAD
880: 504 508 509 509, r5 -> p12, r9 -> p126, r44 -> p97 [p63], r49 -> p67 [p54] | CMP SUB
881: 505 509 510 510, r49 -> p67 | J JMP_IMM
882: 505 506 507 510, r44 -> p55 [p97] | MOV SAVE_PC
883: 506 507 510 510, r44 -> p55, r10 -> p70 [p83] | MOV LOAD
884: 507 510 511 511, r5 -> p12, r10 -> p70, r44 -> p58 [p55], r49 -> p123 [p67] | CMP SUB
885: 508 511 512 512, r49 -> p123 | J JMP_IMM
886: 508 509 510 512, r1 -> p9, r44 -> p73 [p58], r49 -> p111 [p123] | CMP SUB_IMM
887: 508 510 511 512, r49 -> p111 | J JMP_IMM
888: 509 510 511 512, r1 -> p9, r44 -> p110 [p73], r49 -> p105 [p111] | CMP SUB_IMM
889: 510 511 512 513, r1 -> p65 [p9] | SET ADD
890: 510 511 512 513, r49 -> p105, r1 -> p44 [p65] | SET ADD_IMM
891: 510 511 512 513 | JMP JMP_IMM
892: 511 512 513 513, r6 -> p100, r6 -> p100, r44 -> p14 [p110], r49 -> p98 [p105] | TEST AND
893: 512 513 514 514, r1 -> p44, r13 -> p45 | MOV STORE
894: 512 513 514 514, r49 -> p98 | J JMP_IMM
895: 512 513 514 514, r13 -> p45, r6 -> p100 | MOV STORE
896: 512 513 514 514, r14 -> p93, r14 -> p93, r44 -> p94 [p14], r49 -> p62 [p98] | TEST AND
897: 513 514 515 515, r2 -> p81, r44 -> p116 [p94] | MOV LEA
898: 513 515 516 516, r13 -> p45, r44 -> p116 | MOV STORE
899: 513 514 515 516, r49 -> p62 | J JMP_IMM
900: 513 514 517 517, r14 -> p93, r12 -> p6 [p113] | MOV LOAD
901: 514 515 518 518, r13 -> p45, r6 -> p106 [p100] | MOV LOAD
902: 514 515 518 518, r13 -> p45, r8 -> p120 [p1] | MOV LOAD
903: 514 517 520 520, r12 -> p6, r0 -> p52 [p10] | MOV LOAD
904: 514 517 520 520, r12 -> p6, r2 -> p3 [p81] | MOV LOAD
905: 515 520 521 521, r0 -> p52, r6 -> p106, r44 -> p104 [p116], r49 -> p95 [p62] | CMP SUB
906: 516 521 522 522, r49 -> p95 | J JMP_IMM
907: 516 520 521 522, r2 -> p3, r8 -> p120, r44 -> p121 [p104], r49 -> p76 [p95] | CMP SUB
908: 517 521 522 522, r49 -> p76 | J JMP_IMM
909: 518 519 520 522, r8 -> p120, r44 -> p108 [p121], r49 -> p61 [p76] | CMP SUB_IMM
910: 518 520 521 523, r49 -> p61 | J JMP_IMM
911: 520 521 522 523, r2 -> p3, r44 -> p124 [p108], r49 -> p66 [p61] | CMP SUB_IMM
912: 520 522 523 523, r49 -> p66 | J JMP_IMM
913: 521 522 523 523, r0 -> p52, r6 -> p106, r44 -> p103 [p124], r49 -> p49 [p66] | CMP SUB
914: 522 523 524 524 | XCHG NOP
915: 522 523 524 524, r49 -> p49 | J JMP_IMM
916: 522 523 524 524, r2 -> p3, r8 -> p120, r44 -> p7 [p103], r49 -> p89 [p49] | CMP SUB
917: 522 523 524 524 | NOP NOP
918: 523 524 525 525, r49 -> p89 | J JMP_IMM
919: 523 524 525 525, r8 -> p120, r0 -> p59 [p52] | MOV ADD
920: 523 525 526 526, r0 -> p59, r2 -> p3, r0 -> p8 [p59], r49 -> p91 [p89] | SUB SUB
921: 523 524 525 526 | NOP NOP
922: 524 525 526 526 | JMP JMP_IMM
923: 524 526 527 527, r0 -> p8, r0 -> p8, r44 -> p53 [p7], r49 -> p60 [p91] | TEST AND
924: 524 527 528 528, r49 -> p60 | J JMP_IMM
925: 524 525 526 528, r8 -> p120, r44 -> p125 [p53], r49 -> p114 [p60] | CMP SUB_IMM
926: 525 526 527 528, r49 -> p114 | J JMP_IMM
927: 525 526 527 528, r6 -> p106, r44 -> p51 [p125], r49 -> p99 [p114] | CMP SUB_IMM
928: 526 527 528 529, r49 -> p99 | J JMP_IMM
929: 526 527 528 529, r12 -> p6, r7 -> p69 [p118] | MOV ADD
930: 526 527 528 529 | JMP JMP_IMM
931: 527 528 531 531, r7 -> p69, r1 -> p112 [p44] | MOV LOAD
932: 528 531 532 532, r1 -> p112, r1 -> p112, r44 -> p0 [p51], r49 -> p5 [p99] | TEST AND
933: 528 532 533 533, r49 -> p5 | J JMP_IMM
934: 528 531 534 534, r1 -> p112, r0 -> p78 [p8] | MOV LOAD
935: 528 531 534 534, r1 -> p112, r2 -> p92 [p3] | MOV LOAD
936: 529 534 535 535, r0 -> p78, r6 -> p106, r44 -> p102 [p0], r49 -> p96 [p5] | CMP SUB
937: 529 535 536 536, r49 -> p96 | J JMP_IMM
938: 529 534 535 536, r8 -> p120, r2 -> p92, r44 -> p107 [p102], r49 -> p57 [p96] | CMP SUB
939: 531 535 536 536, r49 -> p57 | J JMP_IMM
940: 532 534 535 536, r0 -> p78, r6 -> p106, r44 -> p74 [p107], r49 -> p68 [p57] | CMP SUB
941: 533 535 536 537, r49 -> p68 | J JMP_IMM
942: 534 535 536 537, r8 -> p120, r2 -> p92, r44 -> p82 [p74], r49 -> p4 [p68] | CMP SUB
943: 534 536 537 537 | NOP NOP
944: 535 536 537 537, r49 -> p4 | J JMP_IMM
945: 536 537 538 538, r1 -> p112, r13 -> p45 | MOV STORE
946: 536 537 538 538, r13 -> p45, r1 -> p112 | MOV STORE
947: 536 537 538 538, r7 -> p69, r13 -> p45 | MOV STORE
948: 536 537 538 538, r13 -> p45, r7 -> p69 | MOV STORE
949: 537 538 539 539, r12 -> p6, r13 -> p45 | MOV STORE
950: 537 538 541 541, r13 -> p45, r45 -> p56 [p122] | CMP LOAD
951: 537 541 542 542, r45 -> p56, r44 -> p109 [p82], r49 -> p84 [p4] | CMP SUB
952: 537 542 543 543, r49 -> p84 | J JMP_IMM
953: 538 539 542 543, r5 -> p12, r45 -> p77 [p56] | CMP LOAD
954: 538 542 543 543, r45 -> p77, r44 -> p117 [p109], r49 -> p115 [p84] | CMP SUB_IMM
955: 538 543 544 544, r49 -> p115 | J JMP_IMM
956: 538 539 542 544, r5 -> p12, r3 -> p88 [p79] | MOV LOAD
957: 539 540 541 544, r45 -> p50 [p77] | CMP SAVE_PC
958: 541 542 545 545, r45 -> p50, r45 -> p101 [p50] | CMP LOAD
959: 542 545 546 546, r3 -> p88, r45 -> p101, r44 -> p75 [p117], r49 -> p2 [p115] | CMP SUB
960: 543 546 547 547, r49 -> p2 | J JMP_IMM
961: 543 544 545 547, r44 -> p13 [p75] | MOV SAVE_PC
962: 543 545 548 548, r44 -> p13, r2 -> p86 [p92] | MOV LOAD
963: 544 548 549 549, r2 -> p86, r2 -> p86, r44 -> p127 [p13], r49 -> p64 [p2] | TEST AND
964: 544 549 550 550, r49 -> p64 | J JMP_IMM
965: 544 548 551 551, r2 -> p86, r44 -> p85 [p127] | MOVSX LOAD
966: 545 551 552 552, r44 -> p85, r0 -> p71 [p78] | MOVSX SEXT_DWORD_TO_QWORD
967: 546 547 548 552, r44 -> p119 [p85] | MOV SAVE_PC
968: 547 548 551 552, r44 -> p119, r2 -> p15 [p86] | MOV LOAD
969: 547 552 553 553, r0 -> p71, r0 -> p71, r0 -> p87 [p71] | LEA LEA
970: 548 553 554 554, r0 -> p87, r0 -> p90 [p87], r49 -> p63 [p64] | SHL SHL_IMM
971: 549 554 557 557, r2 -> p15, r0 -> p90, r45 -> p54 [p101] | CMP LOAD
972: 550 557 558 558, r45 -> p54, r44 -> p97 [p119], r49 -> p83 [p63] | CMP SUB
973: 551 558 559 559, r49 -> p83 | J JMP_IMM
974: 552 553 556 559, r5 -> p12, r45 -> p55 [p54] | CMP LOAD
975: 552 556 557 559, r45 -> p55, r44 -> p67 [p97], r49 -> p58 [p83] | CMP SUB_IMM
976: 552 557 558 559, r49 -> p58 | J JMP_IMM
977: 553 554 557 560, r5 -> p12, r3 -> p123 [p88] | MOV LOAD
978: 554 555 556 560, r45 -> p73 [p55] | CMP SAVE_PC
979: 557 558 561 561, r45 -> p73, r45 -> p111 [p73] | CMP LOAD
980: 558 561 562 562, r3 -> p123, r45 -> p111, r44 -> p9 [p67], r49 -> p65 [p58] | CMP SUB
981: 559 562 563 563, r49 -> p65 | J JMP_IMM
982: 559 560 561 563, r44 -> p110 [p9] | MOV SAVE_PC
983: 559 561 564 564, r44 -> p110, r2 -> p105 [p15] | MOV LOAD
984: 559 564 565 565, r2 -> p105, r2 -> p105, r44 -> p14 [p110], r49 -> p98 [p65] | TEST AND
985: 560 565 566 566, r49 -> p98 | J JMP_IMM
986: 560 564 567 567, r2 -> p105, r44 -> p94 [p14] | MOVSX LOAD
987: 561 567 568 568, r44 -> p94, r0 -> p113 [p90] | MOVSX SEXT_DWORD_TO_QWORD
988: 562 563 564 568, r44 -> p100 [p94] | MOV SAVE_PC
989: 563 564 567 568, r44 -> p100, r6 -> p1 [p106] | MOV LOAD
990: 563 568 569 569, r0 -> p113, r0 -> p113, r0 -> p10 [p113] | LEA LEA
991: 564 569 570 570, r0 -> p10, r0 -> p81 [p10], r49 -> p116 [p98] | SHL SHL_IMM
992: 565 570 573 573, r6 -> p1, r0 -> p81, r45 -> p62 [p111] | CMP LOAD
993: 566 573 574 574, r45 -> p62, r44 -> p104 [p100], r49 -> p95 [p116] | CMP SUB
994: 567 574 575 575, r49 -> p95 | J JMP_IMM
995: 568 569 572 575, r5 -> p12, r3 -> p121 [p123] | MOV LOAD
996: 568 569 570 575, r45 -> p76 [p62] | CMP SAVE_PC
997: 568 570 573 575, r45 -> p76, r45 -> p108 [p76] | CMP LOAD
998: 569 573 574 576, r3 -> p121, r45 -> p108, r44 -> p61 [p104], r49 -> p124 [p95] | CMP SUB
999: 570 571 574 576, r5 -> p12, r44 -> p66 [p61] | MOVZX LOAD
1000: 573 574 575 576, r44 -> p66, r14 -> p103 [p93] | MOVZX ZEXT_BYTE_TO_DWORD
Processed 1000 trace records.
Micro-ops: 1000
Macro-ops: 754
TotalCycles: 577
uIPC: 1.7331
