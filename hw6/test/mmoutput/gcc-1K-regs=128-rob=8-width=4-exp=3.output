Processing trace...
1: 0 1 2 2, r13 -> p50 [p13] | SET ADD
2: 0 1 2 2, r49 -> p49, r13 -> p51 [p50] | SET ADD_IMM
3: 0 1 4 4, r5 -> p5, r45 -> p52 [p45] | CMP LOAD
4: 0 4 5 5, r45 -> p52, r3 -> p3, r44 -> p53 [p44], r49 -> p54 [p49] | CMP SUB
5: 1 2 5 5, r5 -> p5, r3 -> p55 [p3] | MOV LOAD
6: 1 2 3 5, r0 -> p56 [p0] | SET ADD
7: 1 5 6 6, r49 -> p54, r0 -> p57 [p56] | SET ADD_IMM
8: 1 2 3 6, r12 -> p58 [p12] | XOR ADD
9: 2 6 7 7, r13 -> p51, r0 -> p57, r13 -> p59 [p51], r49 -> p60 [p54] | OR OR
10: 2 3 4 7 | JMP JMP_IMM
11: 4 5 8 8, r3 -> p55, r0 -> p61 [p57] | MOV LOAD
12: 5 8 9 9, r0 -> p61, r0 -> p61, r44 -> p62 [p53], r49 -> p63 [p60] | TEST AND
13: 5 9 10 10, r49 -> p63 | J JMP_IMM
14: 5 8 11 11, r0 -> p61, r7 -> p64 [p7] | MOV LOAD
15: 6 11 14 14, r7 -> p64, r44 -> p65 [p62] | MOVZX LOAD
16: 6 14 15 15, r44 -> p65, r0 -> p66 [p61] | MOVZX ZEXT_WORD_TO_DWORD
17: 7 15 16 16, r0 -> p66, r44 -> p67 [p65], r49 -> p68 [p63] | CMP SUB_IMM
18: 7 16 17 17, r49 -> p68 | J JMP_IMM
19: 8 9 10 17, r6 -> p69 [p6] | XOR ADD
20: 9 10 11 17, r44 -> p70 [p67] | CALL SAVE_PC
21: 10 11 12 17, r4 -> p4, r4 -> p71 [p4] | CALL SUB_IMM
22: 11 12 13 18, r44 -> p70, r4 -> p71 | CALL STORE
23: 14 15 16 18 | CALL JMP_IMM
24: 15 16 17 18, r15 -> p15, r4 -> p71 | PUSH STORE
25: 16 17 18 18, r4 -> p71, r4 -> p72 [p71] | PUSH SUB_IMM
26: 17 18 19 19, r14 -> p14, r4 -> p72 | PUSH STORE
27: 17 18 19 19, r4 -> p72, r4 -> p73 [p72] | PUSH SUB_IMM
28: 17 19 20 20, r13 -> p59, r4 -> p73 | PUSH STORE
29: 17 19 20 20, r4 -> p73, r4 -> p74 [p73] | PUSH SUB_IMM
30: 18 19 20 20, r7 -> p64, r13 -> p75 [p59] | MOV ADD
31: 18 20 21 21, r12 -> p58, r4 -> p74 | PUSH STORE
32: 18 20 21 21, r4 -> p74, r4 -> p76 [p74] | PUSH SUB_IMM
33: 18 19 20 21, r6 -> p69, r12 -> p77 [p58] | MOV ADD
34: 19 21 22 22, r5 -> p5, r4 -> p76 | PUSH STORE
35: 19 21 22 22, r4 -> p76, r4 -> p78 [p76] | PUSH SUB_IMM
36: 20 22 23 23, r3 -> p55, r4 -> p78 | PUSH STORE
37: 20 22 23 23, r4 -> p78, r4 -> p79 [p78] | PUSH SUB_IMM
38: 20 23 24 24, r4 -> p79, r4 -> p80 [p79], r49 -> p81 [p68] | SUB SUB_IMM
39: 21 22 25 25, r7 -> p64, r44 -> p82 [p70] | MOVZX LOAD
40: 21 25 26 26, r44 -> p82, r0 -> p83 [p66] | MOVZX ZEXT_WORD_TO_DWORD
41: 21 26 27 27, r0 -> p83, r44 -> p84 [p82], r49 -> p85 [p81] | CMP SUB_IMM
42: 22 27 28 28, r49 -> p85 | J JMP_IMM
43: 22 23 26 28, r7 -> p64, r5 -> p86 [p5] | MOV LOAD
44: 23 26 27 28, r5 -> p86, r44 -> p87 [p84], r49 -> p88 [p85] | CMP SUB_IMM
45: 23 27 28 28, r49 -> p88 | J JMP_IMM
46: 24 25 26 29, r45 -> p89 [p52] | CMP SAVE_PC
47: 25 26 29 29, r45 -> p89, r45 -> p90 [p89] | CMP LOAD
48: 26 29 30 30, r5 -> p86, r45 -> p90, r44 -> p91 [p87], r49 -> p92 [p88] | CMP SUB
49: 27 30 31 31, r49 -> p92 | J JMP_IMM
50: 28 29 30 31, r44 -> p93 [p91] | MOV SAVE_PC
51: 28 30 33 33, r44 -> p93, r2 -> p94 [p2] | MOV LOAD
52: 28 33 34 34, r2 -> p94, r2 -> p94, r44 -> p95 [p93], r49 -> p96 [p92] | TEST AND
53: 28 34 35 35, r49 -> p96 | J JMP_IMM
54: 29 33 36 36, r2 -> p94, r12 -> p97 [p77] | MOV LOAD
55: 29 36 37 37, r12 -> p97, r12 -> p98 [p97], r49 -> p99 [p96] | AND AND_IMM
56: 30 31 32 37, r45 -> p100 [p90] | CMP SAVE_PC
57: 31 32 35 37, r45 -> p100, r45 -> p101 [p100] | CMP LOAD
58: 31 35 36 37, r5 -> p86, r45 -> p101, r44 -> p102 [p95], r49 -> p103 [p99] | CMP SUB
59: 33 36 37 38, r49 -> p103 | J JMP_IMM
60: 34 35 36 38, r44 -> p104 [p102] | MOV SAVE_PC
61: 35 36 39 39, r44 -> p104, r2 -> p105 [p94] | MOV LOAD
62: 36 39 40 40, r2 -> p105, r2 -> p105, r44 -> p106 [p104], r49 -> p107 [p103] | TEST AND
63: 37 40 41 41, r49 -> p107 | J JMP_IMM
64: 37 39 42 42, r2 -> p105, r0 -> p108 [p83] | MOV LOAD
65: 37 42 43 43, r5 -> p86, r0 -> p108, r44 -> p109 [p106], r49 -> p110 [p107] | CMP SUB
66: 37 43 44 44, r49 -> p110 | J JMP_IMM
67: 38 39 40 44, r45 -> p111 [p101] | CMP SAVE_PC
68: 38 40 43 44, r45 -> p111, r45 -> p112 [p111] | CMP LOAD
69: 39 43 44 44, r5 -> p86, r45 -> p112, r44 -> p113 [p109], r49 -> p114 [p110] | CMP SUB
70: 40 44 45 45, r49 -> p114 | J JMP_IMM
71: 41 42 43 45, r44 -> p115 [p113] | MOV SAVE_PC
72: 42 43 46 46, r44 -> p115, r2 -> p116 [p105] | MOV LOAD
73: 43 46 47 47, r2 -> p116, r2 -> p116, r44 -> p117 [p115], r49 -> p118 [p114] | TEST AND
74: 44 47 48 48, r49 -> p118 | J JMP_IMM
75: 44 46 49 49, r2 -> p116, r45 -> p119 [p112] | ADD LOAD
76: 44 49 50 50, r45 -> p119, r44 -> p120 [p117], r49 -> p121 [p118] | ADD ADD_IMM
77: 44 50 51 51, r44 -> p120, r2 -> p116 | ADD STORE
78: 45 46 47 51, r5 -> p86, r44 -> p122 [p120], r49 -> p123 [p121] | CMP SUB_IMM
79: 45 46 47 51, r12 -> p98, r12 -> p124 [p98] | MOV ADD
80: 46 47 48 51, r49 -> p123 | J JMP_IMM
81: 47 48 51 52, r13 -> p75, r45 -> p125 [p119] | CMP LOAD
82: 48 51 52 52, r45 -> p125, r44 -> p126 [p122], r49 -> p127 [p123] | CMP SUB_IMM
83: 49 50 53 53, r13 -> p75, r44 -> p13 [p126] | MOVZX LOAD
84: 50 53 54 54, r44 -> p13, r5 -> p50 [p86] | MOVZX ZEXT_BYTE_TO_DWORD
85: 51 52 53 54, r49 -> p127 | J JMP_IMM
86: 51 52 55 55, r12 -> p124, r3 -> p45 [p55] | MOV LOAD
87: 51 52 55 55, r13 -> p75, r2 -> p44 [p116] | MOV LOAD
88: 51 55 56 56, r3 -> p45, r3 -> p45, r44 -> p49 [p13], r49 -> p3 [p127] | TEST AND
89: 52 56 57 57, r49 -> p3 | J JMP_IMM
90: 52 55 58 58, r3 -> p45, r0 -> p0 [p108] | MOV LOAD
91: 53 58 61 61, r0 -> p0, r45 -> p56 [p125] | CMP LOAD
92: 54 61 62 62, r45 -> p56, r44 -> p12 [p49], r49 -> p51 [p3] | CMP SUB_IMM
93: 54 62 63 63, r49 -> p51 | J JMP_IMM
94: 55 56 59 63, r3 -> p45, r3 -> p54 [p45] | MOV LOAD
95: 55 59 60 63, r3 -> p54, r3 -> p54, r44 -> p57 [p12], r49 -> p53 [p51] | TEST AND
96: 56 60 61 63, r49 -> p53 | J JMP_IMM
97: 57 58 59 64, r4 -> p80, r4 -> p60 [p80], r49 -> p7 [p53] | ADD ADD_IMM
98: 58 59 62 64, r4 -> p60, r3 -> p62 [p54] | POP LOAD
99: 61 62 63 64, r4 -> p60, r4 -> p61 [p60] | POP ADD_IMM
100: 62 63 66 66, r4 -> p61, r5 -> p65 [p50] | POP LOAD
101: 63 64 65 66, r4 -> p61, r4 -> p63 [p61] | POP ADD_IMM
102: 63 65 68 68, r4 -> p63, r12 -> p6 [p124] | POP LOAD
103: 63 65 66 68, r4 -> p63, r4 -> p67 [p63] | POP ADD_IMM
104: 63 66 69 69, r4 -> p67, r13 -> p4 [p75] | POP LOAD
105: 64 66 67 69, r4 -> p67, r4 -> p71 [p67] | POP ADD_IMM
106: 64 67 70 70, r4 -> p71, r14 -> p72 [p14] | POP LOAD
107: 64 67 68 70, r4 -> p71, r4 -> p73 [p71] | POP ADD_IMM
108: 66 68 71 71, r4 -> p73, r15 -> p59 [p15] | POP LOAD
109: 66 68 69 71, r4 -> p73, r4 -> p74 [p73] | POP ADD_IMM
110: 68 69 72 72, r4 -> p74, r44 -> p58 [p57] | RET LOAD
111: 68 69 70 72, r4 -> p74, r4 -> p76 [p74] | RET ADD_IMM
112: 69 72 73 73, r44 -> p58 | RET JMP_REG
113: 69 70 71 73 | JMP JMP_IMM
114: 70 71 72 73, r12 -> p6, r12 -> p78 [p6], r49 -> p79 [p7] | ADD ADD_IMM
115: 70 71 72 73, r3 -> p62, r3 -> p68 [p62], r49 -> p70 [p79] | ADD ADD_IMM
116: 71 72 75 75, r5 -> p65, r45 -> p66 [p56] | CMP LOAD
117: 71 75 76 76, r12 -> p78, r45 -> p66, r44 -> p82 [p58], r49 -> p81 [p70] | CMP SUB
118: 72 76 77 77, r49 -> p81 | J JMP_IMM
119: 72 73 76 77, r5 -> p65, r0 -> p5 [p0] | MOV LOAD
120: 73 76 79 79, r0 -> p5, r45 -> p84 [p66] | CMP LOAD
121: 73 79 80 80, r45 -> p84, r44 -> p85 [p82], r49 -> p52 [p81] | CMP SUB_IMM
122: 73 80 81 81, r49 -> p52 | J JMP_IMM
123: 73 76 79 81, r0 -> p5, r0 -> p89 [p5] | MOV LOAD
124: 75 79 82 82, r0 -> p89, r0 -> p87 [p89] | MOV LOAD
125: 76 82 83 83, r0 -> p87, r0 -> p88 [p87], r49 -> p91 [p52] | AND AND_IMM
126: 77 83 84 84, r0 -> p88, r44 -> p2 [p85], r49 -> p93 [p91] | CMP SUB_IMM
127: 77 84 85 85, r49 -> p93 | J JMP_IMM
128: 79 80 83 85, r5 -> p65, r11 -> p92 [p11] | MOV LOAD
129: 80 83 84 85, r11 -> p92, r11 -> p92, r44 -> p77 [p2], r49 -> p97 [p93] | TEST AND
130: 81 84 85 85, r49 -> p97 | J JMP_IMM
131: 81 82 85 86, r5 -> p65, r1 -> p96 [p1] | MOV LOAD
132: 82 83 84 86, r5 -> p65 | MOV STORE
133: 83 85 86 86, r1 -> p96, r5 -> p65 | MOV STORE
134: 84 85 86 86 | JMP JMP_IMM
135: 85 86 89 89, r5 -> p65, r3 -> p90 [p68] | MOV LOAD
136: 85 89 92 92, r3 -> p90, r0 -> p100 [p88] | MOV LOAD
137: 85 92 93 93, r0 -> p100, r0 -> p100, r44 -> p95 [p77], r49 -> p99 [p97] | TEST AND
138: 85 93 94 94, r49 -> p99 | J JMP_IMM
139: 86 92 95 95, r0 -> p100, r7 -> p102 [p64] | MOV LOAD
140: 86 95 98 98, r7 -> p102, r45 -> p94 [p84] | CMP LOAD
141: 86 98 99 99, r45 -> p94, r44 -> p104 [p95], r49 -> p103 [p99] | CMP SUB_IMM
142: 86 99 100 100, r49 -> p103 | J JMP_IMM
143: 89 95 98 100, r7 -> p102, r1 -> p83 [p96] | MOV LOAD
144: 92 98 99 100, r1 -> p83, r44 -> p106 [p104], r49 -> p107 [p103] | CMP SUB_IMM
145: 93 99 100 100, r49 -> p107 | J JMP_IMM
146: 94 95 96 101, r0 -> p101 [p100] | MOV ADD_IMM
147: 95 96 97 101 | JMP JMP_IMM
148: 98 99 100 101, r0 -> p101, r1 -> p83, r0 -> p111 [p101], r49 -> p109 [p107] | ADD ADD
149: 99 100 101 101, r1 -> p83, r0 -> p111, r44 -> p110 [p106], r49 -> p113 [p109] | CMP SUB
150: 100 101 102 102, r49 -> p113 | J JMP_IMM
151: 100 101 102 102, r1 -> p83, r13 -> p105 [p4] | MOV ADD
152: 100 101 102 102, r45 -> p115 [p94] | CMP SAVE_PC
153: 100 102 105 105, r45 -> p115, r45 -> p114 [p115] | CMP LOAD
154: 101 105 106 106, r45 -> p114, r13 -> p105, r44 -> p112 [p110], r49 -> p117 [p113] | CMP SUB
155: 101 102 103 106, r0 -> p111, r5 -> p65 | MOV STORE
156: 101 106 107 107, r49 -> p117 | J JMP_IMM
157: 101 102 103 107, r44 -> p118 [p112] | MOV SAVE_PC
158: 102 103 106 107, r44 -> p118, r2 -> p120 [p44] | MOV LOAD
159: 102 106 107 107, r2 -> p120, r2 -> p120, r44 -> p121 [p118], r49 -> p98 [p117] | TEST AND
160: 102 107 108 108, r49 -> p98 | J JMP_IMM
161: 105 106 109 109, r2 -> p120, r10 -> p119 [p10] | MOV LOAD
162: 106 109 110 110, r10 -> p119, r10 -> p119, r44 -> p122 [p121], r49 -> p123 [p98] | TEST AND
163: 106 110 111 111, r49 -> p123 | J JMP_IMM
164: 107 108 109 111, r13 -> p105, r13 -> p126 [p105], r49 -> p86 [p123] | ADD ADD_IMM
165: 107 108 111 111, r5 -> p65, r45 -> p55 [p114] | CMP LOAD
166: 107 111 112 112, r45 -> p55, r13 -> p126, r44 -> p116 [p122], r49 -> p13 [p86] | CMP SUB
167: 107 112 113 113, r49 -> p13 | J JMP_IMM
168: 108 109 112 113, r5 -> p65, r45 -> p127 [p55] | ADD LOAD
169: 109 112 113 113, r45 -> p127, r44 -> p108 [p116], r49 -> p125 [p13] | ADD ADD_IMM
170: 110 113 114 114, r44 -> p108, r5 -> p65 | ADD STORE
171: 111 112 115 115, r5 -> p65, r45 -> p49 [p127] | ADD LOAD
172: 111 115 116 116, r45 -> p49, r44 -> p3 [p108], r49 -> p45 [p125] | ADD ADD_IMM
173: 111 116 117 117, r44 -> p3, r5 -> p65 | ADD STORE
174: 112 113 116 117, r5 -> p65, r0 -> p12 [p111] | MOV LOAD
175: 113 114 117 117, r5 -> p65, r45 -> p51 [p49] | CMP LOAD
176: 113 117 118 118, r45 -> p51, r0 -> p12, r44 -> p80 [p3], r49 -> p53 [p45] | CMP SUB
177: 113 118 119 119, r49 -> p53 | J JMP_IMM
178: 114 115 118 119, r5 -> p65, r1 -> p54 [p83] | MOV LOAD
179: 115 116 117 119, r6 -> p60 [p69] | XOR ADD
180: 116 117 118 119 | XCHG NOP
181: 117 118 119 120 | JMP JMP_IMM
182: 117 118 121 121, r1 -> p54, r45 -> p50 [p51] | CMP LOAD
183: 117 121 122 122, r45 -> p50, r44 -> p61 [p80], r49 -> p124 [p53] | CMP SUB
184: 118 122 123 123, r49 -> p124 | J JMP_IMM
185: 119 120 123 123, r1 -> p54, r0 -> p63 [p12] | MOV LOAD
186: 119 123 124 124, r0 -> p63, r0 -> p63, r44 -> p75 [p61], r49 -> p67 [p124] | TEST AND
187: 119 124 125 125, r49 -> p67 | J JMP_IMM
188: 119 123 126 126, r0 -> p63, r45 -> p14 [p50] | CMP LOAD
189: 120 126 127 127, r45 -> p14, r44 -> p71 [p75], r49 -> p15 [p67] | CMP SUB
190: 121 127 128 128, r49 -> p15 | J JMP_IMM
191: 122 123 124 128, r6 -> p60, r6 -> p73 [p60], r49 -> p57 [p15] | ADD ADD_IMM
192: 123 124 125 128, r1 -> p54, r1 -> p74 [p54], r49 -> p6 [p57] | ADD ADD_IMM
193: 123 124 127 128, r5 -> p65, r45 -> p7 [p14] | CMP LOAD
194: 124 127 128 129, r6 -> p73, r45 -> p7, r44 -> p62 [p71], r49 -> p79 [p6] | CMP SUB
195: 125 128 129 129, r49 -> p79 | J JMP_IMM
196: 126 127 130 130, r5 -> p65, r1 -> p56 [p74] | MOV LOAD
197: 127 128 129 130, r5 -> p65 | MOV STORE
198: 128 130 131 131, r1 -> p56, r5 -> p65 | MOV STORE
199: 128 129 130 131 | JMP JMP_IMM
200: 128 131 134 134, r5 -> p65, r2 -> p58 [p120] | MOV LOAD
201: 128 134 137 137, r2 -> p58, r0 -> p70 [p63] | MOV LOAD
202: 129 137 138 138, r0 -> p70, r0 -> p70, r44 -> p0 [p62], r49 -> p66 [p79] | TEST AND
203: 129 138 139 139, r49 -> p66 | J JMP_IMM
204: 130 131 132 139, r44 -> p82 [p0] | MOV SAVE_PC
205: 130 132 135 139, r44 -> p82, r9 -> p81 [p9] | MOV LOAD
206: 131 137 140 140, r0 -> p70, r12 -> p5 [p78] | MOV LOAD
207: 131 134 137 140, r2 -> p58, r14 -> p89 [p72] | MOV LOAD
208: 134 135 136 140, r9 -> p81, r9 -> p81, r44 -> p87 [p82], r49 -> p52 [p66] | TEST AND
209: 137 138 139 140, r49 -> p52 | J JMP_IMM
210: 138 140 143 143, r12 -> p5, r44 -> p85 [p87] | MOVZX LOAD
211: 139 143 144 144, r44 -> p85, r2 -> p91 [p58] | MOVZX ZEXT_BYTE_TO_DWORD
212: 139 144 145 145, r2 -> p91, r44 -> p11 [p85], r49 -> p2 [p52] | CMP SUB_IMM
213: 139 145 146 146, r49 -> p2 | J JMP_IMM
214: 140 141 144 146, r5 -> p65, r45 -> p93 [p7] | CMP LOAD
215: 140 144 145 146, r45 -> p93, r44 -> p1 [p11], r49 -> p68 [p2] | CMP SUB
216: 140 145 146 146, r49 -> p68 | J JMP_IMM
217: 140 141 144 147, r5 -> p65, r1 -> p88 [p56] | MOV LOAD
218: 143 144 147 147, r1 -> p88, r6 -> p77 [p73] | MOV LOAD
219: 144 147 148 148, r6 -> p77, r6 -> p77, r44 -> p97 [p1], r49 -> p64 [p68] | TEST AND
220: 145 146 147 148 | NOP NOP
221: 146 148 149 149, r49 -> p64 | J JMP_IMM
222: 146 147 150 150, r12 -> p5, r44 -> p84 [p97] | MOVZX LOAD
223: 146 150 151 151, r44 -> p84, r0 -> p95 [p70] | MOVZX ZEXT_WORD_TO_DWORD
224: 146 151 152 152, r0 -> p95, r44 -> p99 [p84], r49 -> p96 [p64] | CMP SUB_IMM
225: 147 152 153 153, r49 -> p96 | J JMP_IMM
226: 147 151 152 153, r0 -> p95, r44 -> p104 [p99], r49 -> p103 [p96] | CMP SUB_IMM
227: 148 152 153 153, r49 -> p103 | J JMP_IMM
228: 148 151 152 153, r0 -> p95, r44 -> p100 [p104], r49 -> p101 [p103] | CMP SUB_IMM
229: 149 152 153 154, r49 -> p101 | J JMP_IMM
230: 150 151 152 154, r2 -> p107 [p91] | MOV ADD_IMM
231: 151 152 153 154, r12 -> p5, r7 -> p106 [p102] | MOV ADD
232: 152 153 154 154, r44 -> p109 [p100] | CALL SAVE_PC
233: 153 154 155 155, r4 -> p76, r4 -> p4 [p76] | CALL SUB_IMM
234: 153 155 156 156, r44 -> p109, r4 -> p4 | CALL STORE
235: 153 154 155 156 | CALL JMP_IMM
236: 153 155 156 156, r14 -> p89, r4 -> p4 | PUSH STORE
237: 154 155 156 156, r4 -> p4, r4 -> p94 [p4] | PUSH SUB_IMM
238: 154 155 156 157, r2 -> p107, r14 -> p115 [p89] | MOV ADD
239: 154 156 157 157, r13 -> p126, r4 -> p94 | PUSH STORE
240: 154 156 157 157, r4 -> p94, r4 -> p110 [p94] | PUSH SUB_IMM
241: 155 156 157 157, r6 -> p77, r13 -> p113 [p126] | MOV ADD
242: 156 157 158 158, r12 -> p5, r4 -> p110 | PUSH STORE
243: 156 157 158 158, r4 -> p110, r4 -> p112 [p110] | PUSH SUB_IMM
244: 156 158 159 159, r5 -> p65, r4 -> p112 | PUSH STORE
245: 156 158 159 159, r4 -> p112, r4 -> p44 [p112] | PUSH SUB_IMM
246: 157 158 159 159, r7 -> p106, r5 -> p118 [p65] | MOV ADD
247: 157 159 160 160, r3 -> p90, r4 -> p44 | PUSH STORE
248: 157 159 160 160, r4 -> p44, r4 -> p117 [p44] | PUSH SUB_IMM
249: 157 158 161 161, r7 -> p106, r44 -> p10 [p109] | MOVZX LOAD
250: 158 161 162 162, r44 -> p10, r0 -> p121 [p95] | MOVZX ZEXT_WORD_TO_DWORD
251: 158 162 163 163, r0 -> p121, r44 -> p98 [p10], r49 -> p105 [p101] | CMP SUB_IMM
252: 159 163 164 164, r49 -> p105 | J JMP_IMM
253: 159 160 163 164, r7 -> p106, r3 -> p123 [p90] | MOV LOAD
254: 159 160 161 164, r45 -> p114 [p93] | CMP SAVE_PC
255: 160 161 164 164, r45 -> p114, r45 -> p122 [p114] | CMP LOAD
256: 160 164 165 165, r3 -> p123, r45 -> p122, r44 -> p86 [p98], r49 -> p55 [p105] | CMP SUB
257: 161 165 166 166, r49 -> p55 | J JMP_IMM
258: 162 163 164 166, r44 -> p116 [p86] | MOV SAVE_PC
259: 163 164 167 167, r44 -> p116, r2 -> p13 [p107] | MOV LOAD
260: 164 167 168 168, r2 -> p13, r2 -> p13, r44 -> p127 [p116], r49 -> p108 [p55] | TEST AND
261: 164 168 169 169, r49 -> p108 | J JMP_IMM
262: 164 167 170 170, r2 -> p13, r45 -> p125 [p122] | CMP LOAD
263: 164 170 171 171, r45 -> p125, r3 -> p123, r44 -> p111 [p127], r49 -> p49 [p108] | CMP SUB
264: 165 171 172 172, r49 -> p49 | J JMP_IMM
265: 166 167 168 172, r13 -> p113, r13 -> p113, r44 -> p3 [p111], r49 -> p45 [p49] | TEST AND
266: 166 168 169 172, r49 -> p45 | J JMP_IMM
267: 167 168 171 172, r13 -> p113, r1 -> p83 [p88] | MOV LOAD
268: 168 171 172 173, r1 -> p83, r1 -> p83, r44 -> p69 [p3], r49 -> p51 [p45] | TEST AND
269: 169 172 173 173, r49 -> p51 | J JMP_IMM
270: 170 171 174 174, r1 -> p83, r2 -> p80 [p13] | MOV LOAD
271: 171 174 177 177, r2 -> p80, r45 -> p53 [p125] | CMP LOAD
272: 172 177 178 178, r45 -> p53, r44 -> p12 [p69], r49 -> p61 [p51] | CMP SUB_IMM
273: 172 178 179 179, r49 -> p61 | J JMP_IMM
274: 172 173 176 179, r1 -> p83, r1 -> p124 [p83] | MOV LOAD
275: 172 176 177 179, r1 -> p124, r1 -> p124, r44 -> p50 [p12], r49 -> p75 [p61] | TEST AND
276: 173 177 178 179, r49 -> p75 | J JMP_IMM
277: 173 176 179 180, r1 -> p124, r2 -> p67 [p80] | MOV LOAD
278: 174 179 182 182, r2 -> p67, r45 -> p60 [p53] | CMP LOAD
279: 177 182 183 183, r45 -> p60, r44 -> p15 [p50], r49 -> p54 [p75] | CMP SUB_IMM
280: 178 183 184 184, r49 -> p54 | J JMP_IMM
281: 179 180 183 184, r2 -> p67, r44 -> p57 [p15] | MOVZX LOAD
282: 179 183 184 184, r44 -> p57, r0 -> p14 [p121] | MOVZX ZEXT_BYTE_TO_DWORD
283: 179 180 183 184, r5 -> p118, r45 -> p71 [p60] | CMP LOAD
284: 179 184 185 185, r0 -> p14, r45 -> p71, r44 -> p6 [p57], r49 -> p74 [p54] | CMP SUB
285: 180 185 186 186, r49 -> p74 | J JMP_IMM
286: 182 183 186 186, r2 -> p67, r5 -> p120 [p118] | MOV LOAD
287: 183 184 185 186, r45 -> p63 [p71] | CMP SAVE_PC
288: 184 185 188 188, r45 -> p63, r45 -> p62 [p63] | CMP LOAD
289: 184 188 189 189, r5 -> p120, r45 -> p62, r44 -> p79 [p6], r49 -> p0 [p74] | CMP SUB
290: 184 189 190 190, r49 -> p0 | J JMP_IMM
291: 184 186 187 190, r5 -> p120, r0 -> p9 [p14] | MOV ADD
292: 185 187 188 190, r0 -> p9, r0 -> p78 [p9], r49 -> p72 [p0] | SHR SHR_IMM
293: 186 188 189 190, r0 -> p78, r5 -> p120, r0 -> p82 [p78], r49 -> p66 [p72] | XOR XOR
294: 186 189 190 191, r0 -> p82, r0 -> p87 [p82], r49 -> p58 [p66] | AND AND_IMM
295: 186 190 191 191, r0 -> p87, r0 -> p85 [p87], r49 -> p52 [p58] | SHL SHL_IMM
296: 188 191 194 194, r0 -> p85, r2 -> p7 [p67] | MOV LOAD
297: 189 191 192 194, r0 -> p85, r12 -> p11 [p5] | LEA LEA
298: 190 194 195 195, r2 -> p7, r2 -> p7, r44 -> p2 [p79], r49 -> p56 [p52] | TEST AND
299: 190 195 196 196, r49 -> p56 | J JMP_IMM
300: 190 194 197 197, r2 -> p7, r45 -> p73 [p62] | CMP LOAD
301: 190 197 198 198, r45 -> p73, r5 -> p120, r44 -> p1 [p2], r49 -> p68 [p56] | CMP SUB
302: 191 198 199 199, r49 -> p68 | J JMP_IMM
303: 191 192 193 199 | JMP JMP_IMM
304: 194 195 198 199, r2 -> p7, r12 -> p97 [p11] | MOV LOAD
305: 194 195 196 199, r44 -> p70 [p1] | MOV SAVE_PC
306: 195 196 197 200, r5 -> p120, r44 -> p70 | MOV STORE
307: 196 197 198 200, r44 -> p84 [p70] | MOV SAVE_PC
308: 197 198 199 200, r2 -> p7, r44 -> p84 | MOV STORE
309: 198 199 200 200, r12 -> p97, r0 -> p64 [p85] | MOVSX SEXT_DWORD_TO_QWORD
310: 199 200 201 201, r0 -> p64, r0 -> p64, r14 -> p99 [p115] | LEA LEA
311: 199 201 202 202, r14 -> p99, r14 -> p96 [p99], r49 -> p104 [p68] | SHL SHL_IMM
312: 199 202 203 203, r14 -> p96, r13 -> p103 [p113] | MOV ADD
313: 199 200 201 203, r44 -> p91 [p84] | ADD SAVE_PC
314: 200 201 204 204, r44 -> p91, r44 -> p102 [p91] | ADD LOAD
315: 200 204 205 205, r13 -> p103, r44 -> p102, r13 -> p100 [p103], r49 -> p76 [p104] | ADD ADD
316: 200 201 204 205, r2 -> p7, r45 -> p4 [p73] | CMP LOAD
317: 200 204 205 205, r45 -> p4, r5 -> p120, r44 -> p89 [p102], r49 -> p94 [p76] | CMP SUB
318: 201 205 206 206, r49 -> p94 | J JMP_IMM
319: 202 203 204 206, r45 -> p126 [p4] | CMP SAVE_PC
320: 203 204 207 207, r45 -> p126, r45 -> p110 [p126] | CMP LOAD
321: 203 207 208 208, r3 -> p123, r45 -> p110, r44 -> p112 [p89], r49 -> p65 [p94] | CMP SUB
322: 204 208 209 209, r49 -> p65 | J JMP_IMM
323: 205 206 207 209, r3 -> p123, r0 -> p44 [p64] | MOV ADD
324: 205 207 208 209, r0 -> p44, r0 -> p109 [p44], r49 -> p95 [p65] | SHR SHR_IMM
325: 205 208 209 209, r0 -> p109, r3 -> p123, r0 -> p10 [p109], r49 -> p101 [p95] | XOR XOR
326: 206 209 210 210, r0 -> p10, r0 -> p90 [p10], r49 -> p93 [p101] | AND AND_IMM
327: 206 210 211 211, r0 -> p90, r0 -> p114 [p90], r49 -> p98 [p93] | SHL SHL_IMM
328: 207 211 214 214, r0 -> p114, r2 -> p105 [p7] | MOV LOAD
329: 208 211 212 214, r0 -> p114, r5 -> p86 [p120] | LEA LEA
330: 209 214 215 215, r2 -> p105, r2 -> p105, r44 -> p107 [p112], r49 -> p116 [p98] | TEST AND
331: 209 215 216 216, r49 -> p116 | J JMP_IMM
332: 209 214 217 217, r2 -> p105, r45 -> p55 [p110] | CMP LOAD
333: 209 217 218 218, r3 -> p123, r45 -> p55, r44 -> p122 [p107], r49 -> p127 [p116] | CMP SUB
334: 210 218 219 219, r49 -> p127 | J JMP_IMM
335: 211 212 213 219, r44 -> p108 [p122] | MOV SAVE_PC
336: 214 215 216 219, r3 -> p123, r44 -> p108 | MOV STORE
337: 214 215 216 219, r44 -> p111 [p108] | MOV SAVE_PC
338: 215 216 217 220, r2 -> p105, r44 -> p111 | MOV STORE
339: 216 217 218 220, r12 -> p97, r2 -> p105 | MOV STORE
340: 217 218 221 221, r13 -> p100, r2 -> p49 [p105] | MOV LOAD
341: 218 219 222 222, r13 -> p100, r7 -> p88 [p106] | MOV LOAD
342: 219 221 222 222, r2 -> p49, r44 -> p3 [p111], r49 -> p45 [p127] | CMP SUB_IMM
343: 219 222 223 223, r49 -> p45 | J JMP_IMM
344: 219 220 221 223, r3 -> p123, r44 -> p13 [p3], r49 -> p125 [p45] | CMP SUB_IMM
345: 219 221 222 223, r49 -> p125 | J JMP_IMM
346: 220 221 222 223, r2 -> p49, r44 -> p69 [p13], r49 -> p51 [p125] | CMP SUB_IMM
347: 220 221 222 224, r2 -> p49, r1 -> p83 [p124] | MOV ADD
348: 221 222 223 224, r3 -> p123, r8 -> p12 [p8] | MOV ADD
349: 222 223 224 224, r49 -> p51 | J JMP_IMM
350: 222 223 224 224, r44 -> p61 [p69] | MOV SAVE_PC
351: 223 224 227 227, r44 -> p61, r10 -> p80 [p119] | MOV LOAD
352: 223 224 225 227, r44 -> p53 [p61] | MOV SAVE_PC
353: 223 225 228 228, r44 -> p53, r6 -> p50 [p77] | MOV LOAD
354: 223 227 230 230, r8 -> p12, r10 -> p80, r1 -> p75 [p83] | MOV LOAD
355: 224 230 233 233, r1 -> p75, r44 -> p15 [p53] | MOVSX LOAD
356: 224 233 234 234, r44 -> p15, r0 -> p121 [p114] | MOVSX SEXT_DWORD_TO_QWORD
357: 224 234 237 237, r0 -> p121, r6 -> p50, r9 -> p60 [p81] | MOV LOAD
358: 224 225 226 237, r45 -> p57 [p55] | CMP SAVE_PC
359: 227 228 231 237, r45 -> p57, r45 -> p54 [p57] | CMP LOAD
360: 227 237 238 238, r9 -> p60, r45 -> p54, r44 -> p118 [p15], r49 -> p71 [p51] | CMP SUB
361: 228 238 239 239, r49 -> p71 | J JMP_IMM
362: 230 231 234 239, r1 -> p75, r44 -> p63 [p118] | MOVSX LOAD
363: 233 234 235 239, r44 -> p63, r0 -> p6 [p121] | MOVSX SEXT_DWORD_TO_QWORD
364: 234 235 238 239, r0 -> p6, r6 -> p50, r0 -> p74 [p6] | MOV LOAD
365: 237 238 239 240, r45 -> p14 [p54] | CMP SAVE_PC
366: 237 239 242 242, r45 -> p14, r45 -> p9 [p14] | CMP LOAD
367: 237 242 243 243, r0 -> p74, r45 -> p9, r44 -> p0 [p63], r49 -> p78 [p71] | CMP SUB
368: 238 243 244 244, r49 -> p78 | J JMP_IMM
369: 239 240 241 244, r7 -> p88, r44 -> p72 [p0], r49 -> p82 [p78] | CMP SUB_IMM
370: 239 241 242 244, r49 -> p82 | J JMP_IMM
371: 239 240 241 244, r44 -> p66 [p72] | MOV SAVE_PC
372: 239 241 244 245, r44 -> p66, r6 -> p87 [p50] | MOV LOAD
373: 240 241 242 245, r7 -> p88, r0 -> p58 [p74] | MOV ADD
374: 242 243 244 245, r0 -> p58, r0 -> p67 [p58], r49 -> p5 [p82] | SHL SHL_IMM
375: 243 244 245 245 | JMP JMP_IMM
376: 244 245 246 246, r0 -> p67, r6 -> p87, r2 -> p79 [p49] | LEA LEA
377: 244 245 246 246, r8 -> p12, r6 -> p87, r1 -> p52 [p75] | LEA LEA
378: 244 246 249 249, r2 -> p79, r0 -> p62 [p67] | MOV LOAD
379: 244 249 250 250, r0 -> p62, r1 -> p52 | MOV STORE
380: 245 246 249 250, r2 -> p79, r0 -> p2 [p62] | MOV LOAD
381: 245 249 250 250, r0 -> p2, r0 -> p2, r44 -> p56 [p66], r49 -> p11 [p5] | TEST AND
382: 245 250 251 251, r49 -> p11 | J JMP_IMM
383: 245 246 247 251, r44 -> p1 [p56] | MOV SAVE_PC
384: 246 247 250 251, r44 -> p1, r0 -> p70 [p2] | MOV LOAD
385: 246 250 251 251, r14 -> p96, r0 -> p70, r44 -> p85 [p1] | MOV LEA
386: 249 251 252 252, r3 -> p123, r44 -> p85 | MOV STORE
387: 250 251 252 252 | JMP JMP_IMM
388: 250 251 252 252, r0 -> p115 [p70] | MOV ADD_IMM
389: 250 251 252 252, r3 -> p123, r2 -> p79 | MOV STORE
390: 251 252 253 253, r7 -> p88, r1 -> p52 | MOV STORE
391: 251 252 253 253 | JMP JMP_IMM
392: 251 252 255 255, r4 -> p117, r3 -> p99 [p123] | POP LOAD
393: 251 252 253 255, r4 -> p117, r4 -> p68 [p117] | POP ADD_IMM
394: 252 253 256 256, r4 -> p68, r5 -> p113 [p86] | POP LOAD
395: 252 253 254 256, r4 -> p68, r4 -> p84 [p68] | POP ADD_IMM
396: 252 254 257 257, r4 -> p84, r12 -> p91 [p97] | POP LOAD
397: 252 254 255 257, r4 -> p84, r4 -> p103 [p84] | POP ADD_IMM
398: 253 255 258 258, r4 -> p103, r13 -> p104 [p100] | POP LOAD
399: 253 255 256 258, r4 -> p103, r4 -> p73 [p103] | POP ADD_IMM
400: 255 256 259 259, r4 -> p73, r14 -> p102 [p96] | POP LOAD
401: 255 256 257 259, r4 -> p73, r4 -> p76 [p73] | POP ADD_IMM
402: 256 257 260 260, r4 -> p76, r44 -> p4 [p85] | RET LOAD
403: 256 257 258 260, r4 -> p76, r4 -> p126 [p76] | RET ADD_IMM
404: 257 260 261 261, r44 -> p4 | RET JMP_REG
405: 257 258 259 261, r0 -> p115, r0 -> p115, r44 -> p89 [p4], r49 -> p94 [p11] | TEST AND
406: 258 259 260 261, r49 -> p94 | J JMP_IMM
407: 258 259 260 261, r12 -> p91, r7 -> p64 [p88] | MOV ADD
408: 259 260 261 262, r44 -> p44 [p89] | CALL SAVE_PC
409: 259 260 261 262, r4 -> p126, r4 -> p65 [p126] | CALL SUB_IMM
410: 260 261 262 262, r44 -> p44, r4 -> p65 | CALL STORE
411: 260 261 262 262 | CALL JMP_IMM
412: 261 262 263 263, r15 -> p59, r4 -> p65 | PUSH STORE
413: 261 262 263 263, r4 -> p65, r4 -> p109 [p65] | PUSH SUB_IMM
414: 261 262 263 263, r7 -> p64, r15 -> p95 [p59] | MOV ADD
415: 261 263 264 264, r14 -> p102, r4 -> p109 | PUSH STORE
416: 262 263 264 264, r4 -> p109, r4 -> p10 [p109] | PUSH SUB_IMM
417: 262 264 265 265, r13 -> p104, r4 -> p10 | PUSH STORE
418: 262 264 265 265, r4 -> p10, r4 -> p101 [p10] | PUSH SUB_IMM
419: 262 265 266 266, r12 -> p91, r4 -> p101 | PUSH STORE
420: 263 265 266 266, r4 -> p101, r4 -> p90 [p101] | PUSH SUB_IMM
421: 263 266 267 267, r5 -> p113, r4 -> p90 | PUSH STORE
422: 263 266 267 267, r4 -> p90, r4 -> p93 [p90] | PUSH SUB_IMM
423: 264 267 268 268, r3 -> p99, r4 -> p93 | PUSH STORE
424: 264 267 268 268, r4 -> p93, r4 -> p7 [p93] | PUSH SUB_IMM
425: 265 268 269 269, r4 -> p7, r4 -> p120 [p7], r49 -> p112 [p94] | SUB SUB_IMM
426: 265 266 269 269, r7 -> p64, r45 -> p98 [p9] | CMP LOAD
427: 266 269 270 270, r45 -> p98, r44 -> p110 [p44], r49 -> p107 [p112] | CMP SUB_IMM
428: 266 270 271 271, r49 -> p107 | J JMP_IMM
429: 267 268 271 271, r15 -> p95, r45 -> p116 [p98] | CMP LOAD
430: 267 271 272 272, r45 -> p116, r44 -> p122 [p110], r49 -> p108 [p107] | CMP SUB_IMM
431: 268 272 273 273, r49 -> p108 | J JMP_IMM
432: 268 269 272 273, r15 -> p95, r3 -> p105 [p99] | MOV LOAD
433: 269 270 271 273, r45 -> p106 [p116] | CMP SAVE_PC
434: 269 271 274 274, r45 -> p106, r45 -> p111 [p106] | CMP LOAD
435: 270 274 275 275, r3 -> p105, r45 -> p111, r44 -> p127 [p122], r49 -> p3 [p108] | CMP SUB
436: 271 275 276 276, r49 -> p3 | J JMP_IMM
437: 271 272 273 276, r44 -> p45 [p127] | MOV SAVE_PC
438: 272 273 276 276, r44 -> p45, r2 -> p13 [p79] | MOV LOAD
439: 273 276 277 277, r2 -> p13, r2 -> p13, r44 -> p125 [p45], r49 -> p124 [p3] | TEST AND
440: 273 277 278 278, r49 -> p124 | J JMP_IMM
441: 273 276 279 279, r2 -> p13, r5 -> p8 [p113] | MOV LOAD
442: 274 279 280 280, r5 -> p8, r5 -> p8, r44 -> p69 [p125], r49 -> p119 [p124] | TEST AND
443: 275 280 281 281, r49 -> p119 | J JMP_IMM
444: 276 277 278 281, r4 -> p120, r4 -> p61 [p120], r49 -> p77 [p119] | ADD ADD_IMM
445: 276 278 281 281, r4 -> p61, r3 -> p83 [p105] | POP LOAD
446: 276 278 279 281, r4 -> p61, r4 -> p53 [p61] | POP ADD_IMM
447: 277 279 282 282, r4 -> p53, r5 -> p114 [p8] | POP LOAD
448: 278 279 280 282, r4 -> p53, r4 -> p81 [p53] | POP ADD_IMM
449: 279 280 283 283, r4 -> p81, r12 -> p55 [p91] | POP LOAD
450: 280 281 282 283, r4 -> p81, r4 -> p57 [p81] | POP ADD_IMM
451: 281 282 285 285, r4 -> p57, r13 -> p15 [p104] | POP LOAD
452: 281 282 283 285, r4 -> p57, r4 -> p51 [p57] | POP ADD_IMM
453: 281 283 286 286, r4 -> p51, r14 -> p118 [p102] | POP LOAD
454: 281 283 284 286, r4 -> p51, r4 -> p121 [p51] | POP ADD_IMM
455: 282 284 287 287, r4 -> p121, r15 -> p6 [p95] | POP LOAD
456: 282 284 285 287, r4 -> p121, r4 -> p54 [p121] | POP ADD_IMM
457: 283 285 288 288, r4 -> p54, r44 -> p14 [p69] | RET LOAD
458: 283 285 286 288, r4 -> p54, r4 -> p63 [p54] | RET ADD_IMM
459: 285 288 289 289, r44 -> p14 | RET JMP_REG
460: 285 286 289 289, r12 -> p55, r45 -> p71 [p111] | CMP LOAD
461: 286 289 290 290, r45 -> p71, r44 -> p0 [p14], r49 -> p78 [p77] | CMP SUB_IMM
462: 286 290 291 291, r49 -> p78 | J JMP_IMM
463: 287 288 291 291, r12 -> p55, r3 -> p72 [p83] | MOV LOAD
464: 287 291 292 292, r3 -> p72, r44 -> p50 [p0], r49 -> p74 [p78] | CMP SUB_IMM
465: 288 292 293 293, r49 -> p74 | J JMP_IMM
466: 288 289 290 293, r45 -> p58 [p71] | CMP SAVE_PC
467: 289 290 293 293, r45 -> p58, r45 -> p82 [p58] | CMP LOAD
468: 289 293 294 294, r3 -> p72, r45 -> p82, r44 -> p49 [p50], r49 -> p75 [p74] | CMP SUB
469: 290 294 295 295, r49 -> p75 | J JMP_IMM
470: 291 292 293 295, r44 -> p67 [p49] | MOV SAVE_PC
471: 291 293 296 296, r44 -> p67, r2 -> p62 [p13] | MOV LOAD
472: 292 296 297 297, r2 -> p62, r2 -> p62, r44 -> p66 [p67], r49 -> p5 [p75] | TEST AND
473: 293 297 298 298, r49 -> p5 | J JMP_IMM
474: 293 296 299 299, r2 -> p62, r0 -> p56 [p115] | MOV LOAD
475: 293 299 300 300, r0 -> p56, r0 -> p2 [p56], r49 -> p1 [p5] | AND AND_IMM
476: 294 295 298 300, r5 -> p114, r2 -> p70 [p62] | MOV LOAD
477: 295 300 301 301, r0 -> p2, r2 -> p70 | MOV STORE
478: 295 296 297 301 | JMP JMP_IMM
479: 296 297 300 301, r14 -> p118, r45 -> p123 [p82] | CMP LOAD
480: 297 300 301 301, r45 -> p123, r44 -> p117 [p66], r49 -> p86 [p1] | CMP SUB_IMM
481: 298 301 302 302, r49 -> p86 | J JMP_IMM
482: 299 300 303 303, r5 -> p114, r0 -> p68 [p2] | MOV LOAD
483: 300 301 304 304, r12 -> p55, r44 -> p97 [p117] | MOVZX LOAD
484: 300 304 305 305, r44 -> p97, r1 -> p84 [p52] | MOVZX ZEXT_BYTE_TO_DWORD
485: 301 302 303 305, r12 -> p55, r7 -> p100 [p64] | MOV ADD
486: 301 303 306 306, r0 -> p68, r2 -> p103 [p70] | MOV LOAD
487: 301 303 306 306, r0 -> p68, r6 -> p96 [p87] | MOV LOAD
488: 301 302 303 306, r44 -> p73 [p97] | CALL SAVE_PC
489: 302 303 304 306, r4 -> p63, r4 -> p85 [p63] | CALL SUB_IMM
490: 303 304 305 307, r44 -> p73, r4 -> p85 | CALL STORE
491: 304 305 306 307 | CALL JMP_IMM
492: 305 306 307 307, r15 -> p6, r4 -> p85 | PUSH STORE
493: 305 306 307 307, r4 -> p85, r4 -> p76 [p85] | PUSH SUB_IMM
494: 306 307 308 308, r2 -> p103, r15 -> p4 [p6] | MOV ADD
495: 306 307 308 308, r14 -> p118, r4 -> p76 | PUSH STORE
496: 306 307 308 308, r4 -> p76, r4 -> p11 [p76] | PUSH SUB_IMM
497: 306 307 308 308, r6 -> p96, r14 -> p88 [p118] | MOV ADD
498: 307 308 309 309, r13 -> p15, r4 -> p11 | PUSH STORE
499: 307 308 309 309, r4 -> p11, r4 -> p89 [p11] | PUSH SUB_IMM
500: 307 309 310 310, r12 -> p55, r4 -> p89 | PUSH STORE
501: 307 309 310 310, r4 -> p89, r4 -> p126 [p89] | PUSH SUB_IMM
502: 308 310 311 311, r5 -> p114, r4 -> p126 | PUSH STORE
503: 308 310 311 311, r4 -> p126, r4 -> p65 [p126] | PUSH SUB_IMM
504: 308 309 310 311, r7 -> p100, r5 -> p59 [p114] | MOV ADD
505: 308 311 312 312, r3 -> p72, r4 -> p65 | PUSH STORE
506: 309 311 312 312, r4 -> p65, r4 -> p109 [p65] | PUSH SUB_IMM
507: 309 312 313 313, r4 -> p109, r4 -> p10 [p109], r49 -> p101 [p86] | SUB SUB_IMM
508: 310 311 314 314, r7 -> p100, r45 -> p90 [p123] | CMP LOAD
509: 310 314 315 315, r45 -> p90, r44 -> p93 [p73], r49 -> p7 [p101] | CMP SUB_IMM
510: 311 313 314 315, r1 -> p84, r4 -> p10 | MOV STORE
511: 311 315 316 316, r49 -> p7 | J JMP_IMM
512: 311 312 315 316, r7 -> p100, r3 -> p94 [p72] | MOV LOAD
513: 312 313 314 316, r45 -> p9 [p90] | CMP SAVE_PC
514: 312 314 317 317, r45 -> p9, r45 -> p44 [p9] | CMP LOAD
515: 313 317 318 318, r3 -> p94, r45 -> p44, r44 -> p112 [p93], r49 -> p98 [p7] | CMP SUB
516: 314 318 319 319, r49 -> p98 | J JMP_IMM
517: 315 316 317 319, r44 -> p110 [p112] | MOV SAVE_PC
518: 315 317 320 320, r44 -> p110, r2 -> p107 [p103] | MOV LOAD
519: 316 320 321 321, r2 -> p107, r2 -> p107, r44 -> p99 [p110], r49 -> p116 [p98] | TEST AND
520: 316 321 322 322, r49 -> p116 | J JMP_IMM
521: 316 320 323 323, r2 -> p107, r45 -> p106 [p44] | CMP LOAD
522: 317 323 324 324, r45 -> p106, r3 -> p94, r44 -> p122 [p99], r49 -> p108 [p116] | CMP SUB
523: 318 324 325 325, r49 -> p108 | J JMP_IMM
524: 319 320 323 325, r5 -> p59, r45 -> p127 [p106] | CMP LOAD
525: 319 323 324 325, r45 -> p127, r44 -> p79 [p122], r49 -> p45 [p108] | CMP SUB_IMM
526: 320 324 325 325, r49 -> p45 | J JMP_IMM
527: 321 322 323 326, r3 -> p94, r44 -> p3 [p79], r49 -> p113 [p45] | CMP SUB_IMM
528: 322 323 324 326, r49 -> p113 | J JMP_IMM
529: 323 324 325 326, r44 -> p125 [p3] | MOV SAVE_PC
530: 324 325 328 328, r44 -> p125, r13 -> p124 [p15] | MOV LOAD
531: 325 328 329 329, r13 -> p124, r13 -> p124, r44 -> p120 [p125], r49 -> p119 [p113] | TEST AND
532: 325 329 330 330, r49 -> p119 | J JMP_IMM
533: 325 328 331 331, r13 -> p124, r0 -> p105 [p68] | MOV LOAD
534: 325 326 327 331, r44 -> p61 [p120] | MOV SAVE_PC
535: 326 331 332 332, r0 -> p105, r44 -> p61 | MOV STORE
536: 326 328 329 332, r5 -> p59, r13 -> p124 | MOV STORE
537: 326 328 329 332, r13 -> p124 | MOV STORE
538: 328 329 332 332, r5 -> p59, r44 -> p8 [p61] | MOVZX LOAD
539: 329 332 333 333, r44 -> p8, r0 -> p53 [p105] | MOVZX ZEXT_WORD_TO_DWORD
540: 330 333 334 334, r0 -> p53, r44 -> p91 [p8], r49 -> p81 [p119] | CMP SUB_IMM
541: 331 334 335 335, r49 -> p81 | J JMP_IMM
542: 331 332 333 335, r0 -> p104 [p53] | XOR ADD
543: 332 333 334 335 | JMP JMP_IMM
544: 332 333 334 335, r0 -> p104, r13 -> p124 | MOV STORE
545: 332 333 334 336, r5 -> p59, r7 -> p57 [p100] | MOV ADD
546: 332 334 335 336, r44 -> p102 [p91] | CALL SAVE_PC
547: 333 334 335 336, r4 -> p10, r4 -> p51 [p10] | CALL SUB_IMM
548: 334 335 336 336, r44 -> p102, r4 -> p51 | CALL STORE
549: 335 336 337 337 | CALL JMP_IMM
550: 335 336 337 337, r12 -> p55, r4 -> p51 | PUSH STORE
551: 335 336 337 337, r4 -> p51, r4 -> p95 [p51] | PUSH SUB_IMM
552: 335 337 338 338, r5 -> p59, r4 -> p95 | PUSH STORE
553: 336 337 338 338, r4 -> p95, r4 -> p121 [p95] | PUSH SUB_IMM
554: 336 337 338 338, r5 -> p69 [p59] | XOR ADD
555: 336 338 339 339, r3 -> p94, r4 -> p121 | PUSH STORE
556: 336 338 339 339, r4 -> p121, r4 -> p54 [p121] | PUSH SUB_IMM
557: 337 338 339 339, r3 -> p111 [p94] | XOR ADD
558: 337 339 340 340, r4 -> p54, r4 -> p14 [p54], r49 -> p77 [p81] | SUB SUB_IMM
559: 337 340 341 341, r4 -> p14, r12 -> p83 [p55] | LEA LEA
560: 338 340 341 341, r7 -> p57, r4 -> p14 | MOV STORE
561: 338 341 342 342, r12 -> p83, r7 -> p0 [p57] | MOV ADD
562: 338 339 340 342, r44 -> p78 [p102] | CALL SAVE_PC
563: 339 340 341 342, r4 -> p14, r4 -> p71 [p14] | CALL SUB_IMM
564: 339 341 342 342, r44 -> p78, r4 -> p71 | CALL STORE
565: 339 340 341 343 | CALL JMP_IMM
566: 340 342 343 343, r7 -> p0, r0 -> p58 [p104] | MOV ADD
567: 341 342 343 343, r7 -> p0 | MOV STORE
568: 341 342 343 343, r7 -> p0 | MOV STORE
569: 342 343 346 346, r4 -> p71, r44 -> p50 [p78] | RET LOAD
570: 342 343 344 346, r4 -> p71, r4 -> p74 [p71] | RET ADD_IMM
571: 342 346 347 347, r44 -> p50 | RET JMP_REG
572: 342 344 345 347, r4 -> p74, r7 -> p49 [p0] | LEA LEA
573: 343 344 345 347, r12 -> p83, r2 -> p13 [p107] | MOV ADD
574: 343 344 345 347, r6 -> p67 [p96] | MOV ADD_IMM
575: 343 344 345 348, r44 -> p75 [p50] | CALL SAVE_PC
576: 343 345 346 348, r4 -> p74, r4 -> p115 [p74] | CALL SUB_IMM
577: 346 347 348 348, r44 -> p75, r4 -> p115 | CALL STORE
578: 346 347 348 348 | CALL JMP_IMM
579: 347 348 349 349, r15 -> p4, r4 -> p115 | PUSH STORE
580: 347 348 349 349, r4 -> p115, r4 -> p56 [p115] | PUSH SUB_IMM
581: 347 348 349 349, r6 -> p67, r15 -> p5 [p4] | MOV ADD
582: 347 348 349 349, r2 -> p13, r6 -> p62 [p67] | MOV ADD
583: 348 349 350 350, r14 -> p88, r4 -> p56 | PUSH STORE
584: 348 349 350 350, r4 -> p56, r4 -> p82 [p56] | PUSH SUB_IMM
585: 348 349 350 350, r2 -> p13, r14 -> p66 [p88] | MOV ADD
586: 348 350 351 351, r13 -> p124, r4 -> p82 | PUSH STORE
587: 349 350 351 351, r4 -> p82, r4 -> p1 [p82] | PUSH SUB_IMM
588: 349 351 352 352, r12 -> p83, r4 -> p1 | PUSH STORE
589: 349 351 352 352, r4 -> p1, r4 -> p2 [p1] | PUSH SUB_IMM
590: 349 352 353 353, r5 -> p69, r4 -> p2 | PUSH STORE
591: 350 352 353 353, r4 -> p2, r4 -> p117 [p2] | PUSH SUB_IMM
592: 350 353 354 354, r3 -> p111, r4 -> p117 | PUSH STORE
593: 350 353 354 354, r4 -> p117, r4 -> p52 [p117] | PUSH SUB_IMM
594: 351 354 355 355, r4 -> p52, r4 -> p64 [p52], r49 -> p70 [p77] | SUB SUB_IMM
595: 351 355 356 356, r7 -> p49, r4 -> p64 | MOV STORE
596: 352 353 354 356, r44 -> p87 [p75] | CALL SAVE_PC
597: 352 355 356 356, r4 -> p64, r4 -> p97 [p64] | CALL SUB_IMM
598: 353 356 357 357, r44 -> p87, r4 -> p97 | CALL STORE
599: 353 354 355 357, r15 -> p5 | CALL JMP_REG
600: 354 356 357 357, r4 -> p97, r4 -> p63 [p97], r49 -> p85 [p70] | SUB SUB_IMM
601: 354 355 358 358, r7 -> p49, r0 -> p6 [p58] | MOV LOAD
602: 355 356 357 358, r6 -> p62, r2 -> p76 [p13] | MOV ADD
603: 356 358 359 359, r0 -> p6, r0 -> p6, r44 -> p118 [p87], r49 -> p11 [p85] | TEST AND
604: 356 359 360 360, r49 -> p11 | J JMP_IMM
605: 356 358 361 361, r0 -> p6, r45 -> p89 [p127] | CMP LOAD
606: 357 361 362 362, r45 -> p89, r44 -> p126 [p118], r49 -> p114 [p11] | CMP SUB_IMM
607: 357 362 363 363, r49 -> p114 | J JMP_IMM
608: 357 358 361 363, r0 -> p6, r6 -> p65 [p62] | MOV LOAD
609: 358 359 360 363, r2 -> p76, r7 -> p109 [p49] | MOV ADD
610: 358 359 360 363, r44 -> p86 [p126] | CALL SAVE_PC
611: 359 360 361 364, r4 -> p63, r4 -> p123 [p63] | CALL SUB_IMM
612: 360 361 362 364, r44 -> p86, r4 -> p123 | CALL STORE
613: 361 362 363 364 | CALL JMP_IMM
614: 362 363 364 364, r12 -> p83, r4 -> p123 | PUSH STORE
615: 363 364 365 365, r4 -> p123, r4 -> p73 [p123] | PUSH SUB_IMM
616: 363 364 365 365, r6 -> p65, r12 -> p101 [p83] | MOV ADD
617: 363 365 366 366, r12 -> p101, r12 -> p72 [p101], r49 -> p90 [p114] | SHR SHR_IMM
618: 363 365 366 366, r5 -> p69, r4 -> p73 | PUSH STORE
619: 364 365 366 366, r4 -> p73, r4 -> p9 [p73] | PUSH SUB_IMM
620: 364 365 366 366, r7 -> p109, r5 -> p93 [p69] | MOV ADD
621: 364 366 367 367, r3 -> p111, r4 -> p9 | PUSH STORE
622: 364 366 367 367, r4 -> p9, r4 -> p7 [p9] | PUSH SUB_IMM
623: 365 366 369 369, r7 -> p109, r7 -> p112 [p109] | MOV LOAD
624: 365 366 367 369, r6 -> p65, r3 -> p103 [p111] | MOV ADD
625: 366 369 370 370, r7 -> p112, r7 -> p112, r44 -> p110 [p86], r49 -> p98 [p90] | TEST AND
626: 366 370 371 371, r49 -> p98 | J JMP_IMM
627: 366 367 368 371, r44 -> p44 [p110] | MOV SAVE_PC
628: 366 368 371 371, r44 -> p44, r6 -> p99 [p65] | MOV LOAD
629: 367 371 372 372, r6 -> p99, r6 -> p99, r44 -> p116 [p44], r49 -> p106 [p98] | TEST AND
630: 367 372 373 373, r49 -> p106 | J JMP_IMM
631: 369 371 374 374, r6 -> p99, r0 -> p122 [p6] | MOV LOAD
632: 369 370 371 374, r44 -> p108 [p116] | MOV SAVE_PC
633: 370 374 375 375, r0 -> p122, r44 -> p108 | MOV STORE
634: 371 372 373 375, r3 -> p103, r2 -> p79 [p76] | MOV ADD
635: 371 372 373 375, r3 -> p103, r3 -> p45 [p103], r49 -> p3 [p106] | AND AND_IMM
636: 371 372 373 375, r0 -> p15 [p122] | MOV ADD_IMM
637: 372 373 374 376, r2 -> p79, r2 -> p125 [p79], r49 -> p113 [p3] | SHR SHR_IMM
638: 373 374 375 376, r3 -> p45, r1 -> p68 [p84] | MOV ADD
639: 374 375 376 376, r6 -> p99 | MOV STORE
640: 374 375 376 376, r6 -> p99 | MOV STORE
641: 375 376 377 377, r2 -> p125, r2 -> p120 [p125], r49 -> p61 [p113] | AND AND_IMM
642: 375 376 377 377, r0 -> p15, r1 -> p68, r0 -> p105 [p15], r49 -> p8 [p61] | SHL SHL
643: 375 376 379 379, r5 -> p93, r45 -> p119 [p89] | CMP LOAD
644: 375 379 380 380, r45 -> p119, r44 -> p53 [p108], r49 -> p100 [p8] | CMP SUB
645: 376 377 378 380, r12 -> p72, r6 -> p99 | MOV STORE
646: 376 377 378 380, r2 -> p120, r6 -> p99, r44 -> p91 [p53] | MOV LEA
647: 376 378 379 380, r0 -> p105, r44 -> p91 | MOV STORE
648: 376 380 381 381, r49 -> p100 | J JMP_IMM
649: 377 378 379 381, r6 -> p99 | MOV STORE
650: 377 378 379 381, r6 -> p99 | MOV STORE
651: 379 380 381 381, r6 -> p99, r5 -> p93 | MOV STORE
652: 380 381 382 382 | JMP JMP_IMM
653: 380 381 382 382, r6 -> p99, r5 -> p93 | MOV STORE
654: 380 381 382 382, r12 -> p72, r5 -> p93 | MOV STORE
655: 380 381 384 384, r4 -> p7, r3 -> p10 [p45] | POP LOAD
656: 381 382 383 384, r4 -> p7, r4 -> p51 [p7] | POP ADD_IMM
657: 381 383 386 386, r4 -> p51, r5 -> p95 [p93] | POP LOAD
658: 381 383 384 386, r4 -> p51, r4 -> p59 [p51] | POP ADD_IMM
659: 381 384 387 387, r4 -> p59, r12 -> p121 [p72] | POP LOAD
660: 382 384 385 387, r4 -> p59, r4 -> p94 [p59] | POP ADD_IMM
661: 382 385 388 388, r4 -> p94, r44 -> p54 [p91] | RET LOAD
662: 382 385 386 388, r4 -> p94, r4 -> p81 [p94] | RET ADD_IMM
663: 384 388 389 389, r44 -> p54 | RET JMP_REG
664: 384 385 386 389, r0 -> p55 [p105] | XOR ADD
665: 386 387 388 389, r4 -> p81, r4 -> p57 [p81], r49 -> p102 [p100] | ADD ADD_IMM
666: 386 388 391 391, r4 -> p57, r44 -> p14 [p54] | RET LOAD
667: 387 388 389 391, r4 -> p57, r4 -> p104 [p57] | RET ADD_IMM
668: 387 391 392 392, r44 -> p14 | RET JMP_REG
669: 388 389 390 392, r0 -> p55, r4 -> p104 | MOV STORE
670: 388 389 390 392, r0 -> p55, r0 -> p78 [p55], r49 -> p71 [p102] | ADD ADD_IMM
671: 389 390 391 392, r49 -> p71 | J JMP_IMM
672: 389 390 393 393, r4 -> p104, r11 -> p0 [p92] | MOV LOAD
673: 389 393 394 394, r11 -> p0, r11 -> p0, r44 -> p107 [p14], r49 -> p96 [p71] | TEST AND
674: 391 394 395 395, r49 -> p96 | J JMP_IMM
675: 391 392 395 395, r4 -> p104, r2 -> p50 [p120] | MOV LOAD
676: 392 395 398 398, r2 -> p50, r0 -> p74 [p78] | MOV LOAD
677: 392 398 399 399, r0 -> p74, r0 -> p74, r44 -> p115 [p107], r49 -> p4 [p96] | TEST AND
678: 392 399 400 400, r49 -> p4 | J JMP_IMM
679: 392 398 401 401, r0 -> p74, r44 -> p67 [p115] | MOVZX LOAD
680: 393 401 402 402, r44 -> p67, r0 -> p56 [p74] | MOVZX ZEXT_WORD_TO_DWORD
681: 394 402 405 405, r0 -> p56, r1 -> p88 [p68] | MOV LOAD
682: 395 402 405 405, r0 -> p56, r44 -> p82 [p67] | MOVZX LOAD
683: 395 405 406 406, r44 -> p82, r0 -> p1 [p56] | MOVZX ZEXT_BYTE_TO_DWORD
684: 398 405 406 406, r1 -> p88, r4 -> p104 | MOV STORE
685: 399 406 407 407, r0 -> p1, r0 -> p1, r44 -> p2 [p82], r49 -> p117 [p4] | TEST AND
686: 400 407 408 408, r49 -> p117 | J JMP_IMM
687: 401 406 407 408, r0 -> p1, r0 -> p52 [p1], r49 -> p77 [p117] | SUB SUB_IMM
688: 402 403 404 408, r4 -> p104 | MOV STORE
689: 405 407 408 408, r0 -> p52, r0 -> p75 [p52], r49 -> p64 [p77] | ADD ADD_IMM
690: 405 408 409 409, r0 -> p75, r4 -> p104 | MOV STORE
691: 406 407 410 410, r4 -> p104, r3 -> p97 [p10] | MOV LOAD
692: 406 407 410 410, r4 -> p104, r1 -> p70 [p88] | MOV LOAD
693: 407 408 411 411, r4 -> p104, r2 -> p58 [p50] | MOV LOAD
694: 408 410 413 413, r1 -> p70, r3 -> p97, r44 -> p13 [p2] | MOVZX LOAD
695: 408 413 414 414, r44 -> p13, r0 -> p87 [p75] | MOVZX ZEXT_BYTE_TO_DWORD
696: 408 414 415 415, r0 -> p87, r44 -> p85 [p13], r49 -> p127 [p64] | CMP SUB_IMM
697: 408 415 416 416, r49 -> p127 | J JMP_IMM
698: 409 414 415 416, r0 -> p87, r44 -> p118 [p85], r49 -> p11 [p127] | CMP SUB_IMM
699: 410 415 416 416, r49 -> p11 | J JMP_IMM
700: 410 414 415 416, r0 -> p87, r44 -> p62 [p118], r49 -> p49 [p11] | CMP SUB_IMM
701: 411 415 416 417, r49 -> p49 | J JMP_IMM
702: 413 414 417 417, r4 -> p104, r45 -> p126 [p119] | ADD LOAD
703: 414 417 418 418, r45 -> p126, r44 -> p63 [p62], r49 -> p123 [p49] | ADD ADD_IMM
704: 415 418 419 419, r44 -> p63, r4 -> p104 | ADD STORE
705: 416 417 420 420, r4 -> p104, r0 -> p83 [p87] | MOV LOAD
706: 416 419 422 422, r4 -> p104, r45 -> p101 [p126] | CMP LOAD
707: 416 422 423 423, r45 -> p101, r0 -> p83, r44 -> p114 [p63], r49 -> p73 [p123] | CMP SUB
708: 416 423 424 424, r49 -> p73 | J JMP_IMM
709: 417 419 422 424, r4 -> p104, r3 -> p69 [p97] | MOV LOAD
710: 417 418 421 424, r4 -> p104, r1 -> p9 [p70] | MOV LOAD
711: 418 419 422 424, r4 -> p104, r2 -> p109 [p58] | MOV LOAD
712: 419 422 425 425, r1 -> p9, r3 -> p69, r44 -> p111 [p114] | MOVZX LOAD
713: 420 425 426 426, r44 -> p111, r0 -> p86 [p83] | MOVZX ZEXT_BYTE_TO_DWORD
714: 422 426 427 427, r0 -> p86, r44 -> p90 [p111], r49 -> p110 [p73] | CMP SUB_IMM
715: 423 427 428 428, r49 -> p110 | J JMP_IMM
716: 424 426 427 428, r0 -> p86, r44 -> p65 [p90], r49 -> p44 [p110] | CMP SUB_IMM
717: 424 427 428 428, r49 -> p44 | J JMP_IMM
718: 424 426 427 428, r0 -> p86, r44 -> p98 [p65], r49 -> p6 [p44] | CMP SUB_IMM
719: 424 427 428 429, r49 -> p6 | J JMP_IMM
720: 425 426 429 429, r4 -> p104, r45 -> p116 [p101] | ADD LOAD
721: 426 429 430 430, r45 -> p116, r44 -> p76 [p98], r49 -> p103 [p6] | ADD ADD_IMM
722: 427 430 431 431, r44 -> p76, r4 -> p104 | ADD STORE
723: 428 429 432 432, r4 -> p104, r0 -> p106 [p86] | MOV LOAD
724: 428 431 434 434, r4 -> p104, r45 -> p122 [p116] | CMP LOAD
725: 428 434 435 435, r45 -> p122, r0 -> p106, r44 -> p79 [p76], r49 -> p3 [p103] | CMP SUB
726: 428 435 436 436, r49 -> p3 | J JMP_IMM
727: 429 430 431 436 | NOP NOP
728: 429 430 433 436, r4 -> p104, r0 -> p84 [p106] | MOV LOAD
729: 430 431 432 436, r4 -> p104, r4 -> p125 [p104], r49 -> p113 [p3] | ADD ADD_IMM
730: 431 432 435 437, r4 -> p125, r3 -> p15 [p69] | POP LOAD
731: 432 433 434 437, r4 -> p125, r4 -> p61 [p125] | POP ADD_IMM
732: 434 435 438 438, r4 -> p61, r5 -> p89 [p95] | POP LOAD
733: 435 436 437 438, r4 -> p61, r4 -> p108 [p61] | POP ADD_IMM
734: 436 437 440 440, r4 -> p108, r12 -> p8 [p121] | POP LOAD
735: 436 437 438 440, r4 -> p108, r4 -> p53 [p108] | POP ADD_IMM
736: 436 438 441 441, r4 -> p53, r13 -> p45 [p124] | POP LOAD
737: 436 438 439 441, r4 -> p53, r4 -> p7 [p53] | POP ADD_IMM
738: 437 439 442 442, r4 -> p7, r14 -> p93 [p66] | POP LOAD
739: 437 439 440 442, r4 -> p7, r4 -> p51 [p7] | POP ADD_IMM
740: 438 440 443 443, r4 -> p51, r15 -> p72 [p5] | POP LOAD
741: 438 440 441 443, r4 -> p51, r4 -> p59 [p51] | POP ADD_IMM
742: 440 441 444 444, r4 -> p59, r44 -> p91 [p79] | RET LOAD
743: 440 441 442 444, r4 -> p59, r4 -> p94 [p59] | RET ADD_IMM
744: 441 444 445 445, r44 -> p91 | RET JMP_REG
745: 441 442 445 445, r4 -> p94, r8 -> p105 [p12] | MOV LOAD
746: 442 445 446 446, r8 -> p105, r8 -> p105, r44 -> p81 [p91], r49 -> p100 [p113] | TEST AND
747: 442 446 447 447, r49 -> p100 | J JMP_IMM
748: 443 444 445 447, r9 -> p54 [p60] | XOR ADD
749: 443 445 448 448, r9 -> p54, r8 -> p105, r6 -> p57 [p99] | MOV LOAD
750: 444 445 446 448, r9 -> p54, r10 -> p55 [p80] | MOV ADD
751: 444 448 449 449, r6 -> p57, r6 -> p57, r44 -> p102 [p81], r49 -> p92 [p100] | TEST AND
752: 445 449 450 450, r49 -> p92 | J JMP_IMM
753: 445 446 447 450, r7 -> p14 [p112] | XOR ADD
754: 446 447 448 450, r11 -> p71 [p0] | MOV ADD_IMM
755: 447 448 449 450 | NOP NOP
756: 447 448 449 451, r7 -> p14, r1 -> p120 [p9] | MOV ADD
757: 448 449 450 451, r11 -> p71, r0 -> p78 [p84] | MOV ADD
758: 448 450 451 451, r0 -> p78, r1 -> p120, r0 -> p107 [p78], r49 -> p96 [p92] | SHL SHL
759: 449 451 452 452, r0 -> p107, r6 -> p57, r44 -> p115 [p102], r49 -> p74 [p96] | TEST AND
760: 450 452 453 453, r49 -> p74 | J JMP_IMM
761: 450 451 452 453, r0 -> p107, r0 -> p68 [p107] | NOT NOT
762: 450 452 453 453, r6 -> p57, r0 -> p68, r6 -> p67 [p57], r49 -> p56 [p74] | AND AND
763: 450 451 454 454, r8 -> p105, r0 -> p82 [p68] | MOV LOAD
764: 451 454 455 455, r0 -> p82, r10 -> p55, r0 -> p4 [p82] | LEA LEA
765: 451 455 456 456, r0 -> p4, r0 -> p1 [p4], r49 -> p117 [p56] | SHL SHL_IMM
766: 451 456 457 457, r1 -> p120, r0 -> p1, r2 -> p52 [p109] | LEA LEA
767: 452 457 458 458, r2 -> p52, r44 -> p77 [p115], r49 -> p10 [p117] | CMP SUB_IMM
768: 453 458 459 459, r49 -> p10 | J JMP_IMM
769: 453 457 458 459, r2 -> p52, r44 -> p88 [p77], r49 -> p50 [p10] | CMP SUB_IMM
770: 453 458 459 459, r49 -> p50 | J JMP_IMM
771: 454 457 458 459, r2 -> p52, r44 -> p2 [p88], r49 -> p75 [p50] | CMP SUB_IMM
772: 455 458 459 460, r49 -> p75 | J JMP_IMM
773: 456 457 458 460, r2 -> p52, r44 -> p13 [p2], r49 -> p64 [p75] | CMP SUB_IMM
774: 457 458 459 460, r49 -> p64 | J JMP_IMM
775: 458 459 460 460, r2 -> p52, r0 -> p85 [p1] | LEA LEA
776: 459 460 461 461, r0 -> p85, r44 -> p127 [p13], r49 -> p118 [p64] | CMP SUB_IMM
777: 459 461 462 462, r49 -> p118 | J JMP_IMM
778: 459 460 461 462, r2 -> p52, r44 -> p11 [p127], r49 -> p119 [p118] | CMP SUB_IMM
779: 459 460 461 462, r0 -> p62 [p85] | MOV ADD_IMM
780: 460 461 462 462, r49 -> p119 | J JMP_IMM
781: 460 461 462 463, r3 -> p15, r0 -> p62, r3 -> p49 [p15], r49 -> p87 [p119] | ADD ADD
782: 460 461 462 463, r6 -> p67, r6 -> p67, r44 -> p126 [p11], r49 -> p63 [p87] | TEST AND
783: 460 462 463 463, r49 -> p63 | J JMP_IMM
784: 461 462 463 463, r9 -> p54, r9 -> p123 [p54], r49 -> p97 [p63] | ADD ADD_IMM
785: 462 463 464 464, r9 -> p123, r44 -> p70 [p126], r49 -> p58 [p97] | CMP SUB_IMM
786: 462 464 465 465, r49 -> p58 | J JMP_IMM
787: 462 463 466 466, r9 -> p123, r8 -> p105, r6 -> p114 [p67] | MOV LOAD
788: 462 463 464 466, r9 -> p123, r10 -> p83 [p55] | MOV ADD
789: 463 466 467 467, r6 -> p114, r6 -> p114, r44 -> p111 [p70], r49 -> p73 [p58] | TEST AND
790: 463 467 468 468, r49 -> p73 | J JMP_IMM
791: 463 464 465 468, r9 -> p123, r9 -> p90 [p123], r49 -> p110 [p73] | ADD ADD_IMM
792: 463 465 466 468, r9 -> p90, r44 -> p65 [p111], r49 -> p44 [p110] | CMP SUB_IMM
793: 464 466 467 468, r49 -> p44 | J JMP_IMM
794: 465 466 469 469, r8 -> p105, r8 -> p101 [p105] | MOV LOAD
795: 466 469 470 470, r8 -> p101, r8 -> p101, r44 -> p98 [p65], r49 -> p6 [p44] | TEST AND
796: 466 470 471 471, r49 -> p6 | J JMP_IMM
797: 467 468 469 471, r12 -> p8, r7 -> p86 [p14] | MOV ADD
798: 468 469 470 471, r44 -> p116 [p98] | CALL SAVE_PC
799: 468 469 470 471, r4 -> p94, r4 -> p76 [p94] | CALL SUB_IMM
800: 468 470 471 472, r44 -> p116, r4 -> p76 | CALL STORE
801: 468 469 470 472 | CALL JMP_IMM
802: 469 470 473 473, r7 -> p86, r0 -> p103 [p62] | MOV LOAD
803: 470 473 474 474, r0 -> p103, r0 -> p103, r44 -> p106 [p116], r49 -> p104 [p6] | TEST AND
804: 471 474 475 475, r49 -> p104 | J JMP_IMM
805: 471 472 473 475, r44 -> p3 [p106] | MOV SAVE_PC
806: 471 473 476 476, r44 -> p3, r1 -> p69 [p120] | MOV LOAD
807: 471 472 473 476 | JMP JMP_IMM
808: 472 473 476 476, r0 -> p103, r2 -> p125 [p52] | MOV LOAD
809: 472 476 477 477, r1 -> p69, r0 -> p103 | MOV STORE
810: 473 476 477 477, r2 -> p125, r2 -> p125, r44 -> p95 [p3], r49 -> p61 [p104] | TEST AND
811: 474 477 478 478, r49 -> p61 | J JMP_IMM
812: 475 476 477 478, r44 -> p121 [p95] | MOV SAVE_PC
813: 475 477 478 478, r0 -> p103, r44 -> p121 | MOV STORE
814: 476 477 478 478, r7 -> p86 | MOV STORE
815: 476 477 478 479, r7 -> p86 | MOV STORE
816: 476 478 481 481, r4 -> p76, r44 -> p108 [p121] | RET LOAD
817: 477 478 479 481, r4 -> p76, r4 -> p124 [p76] | RET ADD_IMM
818: 477 481 482 482, r44 -> p108 | RET JMP_REG
819: 478 479 480 482, r5 -> p89, r5 -> p89, r44 -> p53 [p108], r49 -> p66 [p61] | TEST AND
820: 478 480 481 482, r49 -> p66 | J JMP_IMM
821: 478 479 480 482, r4 -> p124, r4 -> p7 [p124], r49 -> p5 [p66] | ADD ADD_IMM
822: 478 479 480 483, r3 -> p49, r0 -> p51 [p103] | MOV ADD
823: 479 480 483 483, r4 -> p7, r3 -> p79 [p49] | POP LOAD
824: 481 482 483 483, r4 -> p7, r4 -> p59 [p7] | POP ADD_IMM
825: 481 483 486 486, r4 -> p59, r5 -> p12 [p89] | POP LOAD
826: 482 483 484 486, r4 -> p59, r4 -> p91 [p59] | POP ADD_IMM
827: 482 484 487 487, r4 -> p91, r12 -> p113 [p8] | POP LOAD
828: 482 484 485 487, r4 -> p91, r4 -> p60 [p91] | POP ADD_IMM
829: 482 485 488 488, r4 -> p60, r44 -> p99 [p53] | RET LOAD
830: 483 485 486 488, r4 -> p60, r4 -> p80 [p60] | RET ADD_IMM
831: 483 488 489 489, r44 -> p99 | RET JMP_REG
832: 483 484 485 489, r15 -> p72, r2 -> p81 [p125] | MOV ADD
833: 486 487 488 489, r0 -> p51, r13 -> p45 | MOV STORE
834: 486 487 488 489, r13 -> p45 | MOV STORE
835: 487 488 489 490, r13 -> p45 | MOV STORE
836: 487 488 491 491, r2 -> p81, r6 -> p100 [p114] | MOV LOAD
837: 488 489 490 491, r13 -> p45 | MOV STORE
838: 488 489 492 492, r4 -> p80, r0 -> p112 [p51] | MOV LOAD
839: 489 490 491 492, r13 -> p45 | MOV STORE
840: 489 490 491 492, r13 -> p45 | MOV STORE
841: 489 491 492 492, r6 -> p100, r13 -> p45 | MOV STORE
842: 489 492 493 493, r0 -> p112, r13 -> p45 | MOV STORE
843: 490 491 494 494, r5 -> p12, r44 -> p0 [p99] | MOVZX LOAD
844: 491 494 495 495, r44 -> p0, r1 -> p9 [p69] | MOVZX ZEXT_WORD_TO_DWORD
845: 491 495 496 496, r1 -> p9, r0 -> p84 [p112] | LEA LEA
846: 492 496 497 497, r0 -> p84, r44 -> p78 [p0], r49 -> p92 [p5] | CMP SUB_IMM
847: 492 497 498 498, r49 -> p92 | J JMP_IMM
848: 492 495 496 498, r1 -> p9, r44 -> p102 [p78], r49 -> p96 [p92] | CMP SUB_IMM
849: 492 496 497 498, r49 -> p96 | J JMP_IMM
850: 493 495 496 498, r1 -> p9, r44 -> p107 [p102], r49 -> p57 [p96] | CMP SUB_IMM
851: 494 496 497 499, r49 -> p57 | J JMP_IMM
852: 495 496 497 499, r1 -> p9, r44 -> p74 [p107], r49 -> p68 [p57] | CMP SUB_IMM
853: 496 497 498 499 | NOP NOP
854: 497 498 499 499, r49 -> p68 | J JMP_IMM
855: 498 499 500 500, r1 -> p9, r44 -> p82 [p74], r49 -> p4 [p68] | CMP SUB_IMM
856: 498 499 500 500 | NOP NOP
857: 498 500 501 501, r49 -> p4 | J JMP_IMM
858: 498 499 500 501, r1 -> p9, r44 -> p56 [p82], r49 -> p109 [p4] | CMP SUB_IMM
859: 499 500 501 501, r49 -> p109 | J JMP_IMM
860: 499 500 501 501, r1 -> p9, r44 -> p115 [p56], r49 -> p117 [p109] | CMP SUB_IMM
861: 499 501 502 502, r49 -> p117 | J JMP_IMM
862: 499 500 503 503, r5 -> p12, r0 -> p77 [p84] | MOV LOAD
863: 500 503 504 504, r0 -> p77, r0 -> p10 [p77], r49 -> p88 [p117] | AND AND_IMM
864: 500 504 505 505, r0 -> p10, r44 -> p50 [p115], r49 -> p2 [p88] | CMP SUB_IMM
865: 501 505 506 506, r49 -> p2 | J JMP_IMM
866: 501 502 503 506, r44 -> p75 [p50] | MOV SAVE_PC
867: 501 503 506 506, r44 -> p75, r8 -> p1 [p101] | MOV LOAD
868: 501 506 507 507, r5 -> p12, r8 -> p1, r44 -> p13 [p75], r49 -> p64 [p2] | CMP SUB
869: 502 507 508 508, r49 -> p64 | J JMP_IMM
870: 503 504 505 508, r44 -> p127 [p13] | MOV SAVE_PC
871: 504 505 508 508, r44 -> p127, r7 -> p118 [p86] | MOV LOAD
872: 505 508 509 509, r5 -> p12, r7 -> p118, r44 -> p85 [p127], r49 -> p15 [p64] | CMP SUB
873: 506 509 510 510, r49 -> p15 | J JMP_IMM
874: 506 507 508 510, r44 -> p119 [p85] | MOV SAVE_PC
875: 506 508 511 511, r44 -> p119, r11 -> p11 [p71] | MOV LOAD
876: 507 511 512 512, r5 -> p12, r11 -> p11, r44 -> p87 [p119], r49 -> p54 [p15] | CMP SUB
877: 508 512 513 513, r49 -> p54 | J JMP_IMM
878: 508 509 510 513, r44 -> p63 [p87] | MOV SAVE_PC
879: 508 510 513 513, r44 -> p63, r9 -> p126 [p90] | MOV LOAD
880: 509 513 514 514, r5 -> p12, r9 -> p126, r44 -> p97 [p63], r49 -> p67 [p54] | CMP SUB
881: 510 514 515 515, r49 -> p67 | J JMP_IMM
882: 510 511 512 515, r44 -> p55 [p97] | MOV SAVE_PC
883: 511 512 515 515, r44 -> p55, r10 -> p70 [p83] | MOV LOAD
884: 512 515 516 516, r5 -> p12, r10 -> p70, r44 -> p58 [p55], r49 -> p123 [p67] | CMP SUB
885: 513 516 517 517, r49 -> p123 | J JMP_IMM
886: 513 514 515 517, r1 -> p9, r44 -> p73 [p58], r49 -> p111 [p123] | CMP SUB_IMM
887: 513 515 516 517, r49 -> p111 | J JMP_IMM
888: 514 515 516 517, r1 -> p9, r44 -> p110 [p73], r49 -> p105 [p111] | CMP SUB_IMM
889: 515 516 517 518, r1 -> p65 [p9] | SET ADD
890: 515 516 517 518, r49 -> p105, r1 -> p44 [p65] | SET ADD_IMM
891: 515 516 517 518 | JMP JMP_IMM
892: 516 517 518 518, r6 -> p100, r6 -> p100, r44 -> p14 [p110], r49 -> p98 [p105] | TEST AND
893: 517 518 519 519, r1 -> p44, r13 -> p45 | MOV STORE
894: 517 518 519 519, r49 -> p98 | J JMP_IMM
895: 517 518 519 519, r13 -> p45, r6 -> p100 | MOV STORE
896: 517 518 519 519, r14 -> p93, r14 -> p93, r44 -> p94 [p14], r49 -> p62 [p98] | TEST AND
897: 518 519 520 520, r2 -> p81, r44 -> p116 [p94] | MOV LEA
898: 518 520 521 521, r13 -> p45, r44 -> p116 | MOV STORE
899: 518 519 520 521, r49 -> p62 | J JMP_IMM
900: 518 519 522 522, r14 -> p93, r12 -> p6 [p113] | MOV LOAD
901: 519 520 523 523, r13 -> p45, r6 -> p106 [p100] | MOV LOAD
902: 519 520 523 523, r13 -> p45, r8 -> p120 [p1] | MOV LOAD
903: 519 522 525 525, r12 -> p6, r0 -> p52 [p10] | MOV LOAD
904: 519 522 525 525, r12 -> p6, r2 -> p3 [p81] | MOV LOAD
905: 520 525 526 526, r0 -> p52, r6 -> p106, r44 -> p104 [p116], r49 -> p95 [p62] | CMP SUB
906: 521 526 527 527, r49 -> p95 | J JMP_IMM
907: 521 525 526 527, r2 -> p3, r8 -> p120, r44 -> p121 [p104], r49 -> p76 [p95] | CMP SUB
908: 522 526 527 527, r49 -> p76 | J JMP_IMM
909: 523 524 525 527, r8 -> p120, r44 -> p108 [p121], r49 -> p61 [p76] | CMP SUB_IMM
910: 523 525 526 528, r49 -> p61 | J JMP_IMM
911: 525 526 527 528, r2 -> p3, r44 -> p124 [p108], r49 -> p66 [p61] | CMP SUB_IMM
912: 525 527 528 528, r49 -> p66 | J JMP_IMM
913: 526 527 528 528, r0 -> p52, r6 -> p106, r44 -> p103 [p124], r49 -> p49 [p66] | CMP SUB
914: 527 528 529 529 | XCHG NOP
915: 527 528 529 529, r49 -> p49 | J JMP_IMM
916: 527 528 529 529, r2 -> p3, r8 -> p120, r44 -> p7 [p103], r49 -> p89 [p49] | CMP SUB
917: 527 528 529 529 | NOP NOP
918: 528 529 530 530, r49 -> p89 | J JMP_IMM
919: 528 529 530 530, r8 -> p120, r0 -> p59 [p52] | MOV ADD
920: 528 530 531 531, r0 -> p59, r2 -> p3, r0 -> p8 [p59], r49 -> p91 [p89] | SUB SUB
921: 528 529 530 531 | NOP NOP
922: 529 530 531 531 | JMP JMP_IMM
923: 529 531 532 532, r0 -> p8, r0 -> p8, r44 -> p53 [p7], r49 -> p60 [p91] | TEST AND
924: 529 532 533 533, r49 -> p60 | J JMP_IMM
925: 529 530 531 533, r8 -> p120, r44 -> p125 [p53], r49 -> p114 [p60] | CMP SUB_IMM
926: 530 531 532 533, r49 -> p114 | J JMP_IMM
927: 530 531 532 533, r6 -> p106, r44 -> p51 [p125], r49 -> p99 [p114] | CMP SUB_IMM
928: 531 532 533 534, r49 -> p99 | J JMP_IMM
929: 531 532 533 534, r12 -> p6, r7 -> p69 [p118] | MOV ADD
930: 531 532 533 534 | JMP JMP_IMM
931: 532 533 536 536, r7 -> p69, r1 -> p112 [p44] | MOV LOAD
932: 533 536 537 537, r1 -> p112, r1 -> p112, r44 -> p0 [p51], r49 -> p5 [p99] | TEST AND
933: 533 537 538 538, r49 -> p5 | J JMP_IMM
934: 533 536 539 539, r1 -> p112, r0 -> p78 [p8] | MOV LOAD
935: 533 536 539 539, r1 -> p112, r2 -> p92 [p3] | MOV LOAD
936: 534 539 540 540, r0 -> p78, r6 -> p106, r44 -> p102 [p0], r49 -> p96 [p5] | CMP SUB
937: 534 540 541 541, r49 -> p96 | J JMP_IMM
938: 534 539 540 541, r8 -> p120, r2 -> p92, r44 -> p107 [p102], r49 -> p57 [p96] | CMP SUB
939: 536 540 541 541, r49 -> p57 | J JMP_IMM
940: 537 539 540 541, r0 -> p78, r6 -> p106, r44 -> p74 [p107], r49 -> p68 [p57] | CMP SUB
941: 538 540 541 542, r49 -> p68 | J JMP_IMM
942: 539 540 541 542, r8 -> p120, r2 -> p92, r44 -> p82 [p74], r49 -> p4 [p68] | CMP SUB
943: 539 541 542 542 | NOP NOP
944: 540 541 542 542, r49 -> p4 | J JMP_IMM
945: 541 542 543 543, r1 -> p112, r13 -> p45 | MOV STORE
946: 541 542 543 543, r13 -> p45, r1 -> p112 | MOV STORE
947: 541 542 543 543, r7 -> p69, r13 -> p45 | MOV STORE
948: 541 542 543 543, r13 -> p45, r7 -> p69 | MOV STORE
949: 542 543 544 544, r12 -> p6, r13 -> p45 | MOV STORE
950: 542 543 546 546, r13 -> p45, r45 -> p56 [p122] | CMP LOAD
951: 542 546 547 547, r45 -> p56, r44 -> p109 [p82], r49 -> p84 [p4] | CMP SUB
952: 542 547 548 548, r49 -> p84 | J JMP_IMM
953: 543 544 547 548, r5 -> p12, r45 -> p77 [p56] | CMP LOAD
954: 543 547 548 548, r45 -> p77, r44 -> p117 [p109], r49 -> p115 [p84] | CMP SUB_IMM
955: 543 548 549 549, r49 -> p115 | J JMP_IMM
956: 543 544 547 549, r5 -> p12, r3 -> p88 [p79] | MOV LOAD
957: 544 545 546 549, r45 -> p50 [p77] | CMP SAVE_PC
958: 546 547 550 550, r45 -> p50, r45 -> p101 [p50] | CMP LOAD
959: 547 550 551 551, r3 -> p88, r45 -> p101, r44 -> p75 [p117], r49 -> p2 [p115] | CMP SUB
960: 548 551 552 552, r49 -> p2 | J JMP_IMM
961: 548 549 550 552, r44 -> p13 [p75] | MOV SAVE_PC
962: 548 550 553 553, r44 -> p13, r2 -> p86 [p92] | MOV LOAD
963: 549 553 554 554, r2 -> p86, r2 -> p86, r44 -> p127 [p13], r49 -> p64 [p2] | TEST AND
964: 549 554 555 555, r49 -> p64 | J JMP_IMM
965: 549 553 556 556, r2 -> p86, r44 -> p85 [p127] | MOVSX LOAD
966: 550 556 557 557, r44 -> p85, r0 -> p71 [p78] | MOVSX SEXT_DWORD_TO_QWORD
967: 551 552 553 557, r44 -> p119 [p85] | MOV SAVE_PC
968: 552 553 556 557, r44 -> p119, r2 -> p15 [p86] | MOV LOAD
969: 552 557 558 558, r0 -> p71, r0 -> p71, r0 -> p87 [p71] | LEA LEA
970: 553 558 559 559, r0 -> p87, r0 -> p90 [p87], r49 -> p63 [p64] | SHL SHL_IMM
971: 554 559 562 562, r2 -> p15, r0 -> p90, r45 -> p54 [p101] | CMP LOAD
972: 555 562 563 563, r45 -> p54, r44 -> p97 [p119], r49 -> p83 [p63] | CMP SUB
973: 556 563 564 564, r49 -> p83 | J JMP_IMM
974: 557 558 561 564, r5 -> p12, r45 -> p55 [p54] | CMP LOAD
975: 557 561 562 564, r45 -> p55, r44 -> p67 [p97], r49 -> p58 [p83] | CMP SUB_IMM
976: 557 562 563 564, r49 -> p58 | J JMP_IMM
977: 558 559 562 565, r5 -> p12, r3 -> p123 [p88] | MOV LOAD
978: 559 560 561 565, r45 -> p73 [p55] | CMP SAVE_PC
979: 562 563 566 566, r45 -> p73, r45 -> p111 [p73] | CMP LOAD
980: 563 566 567 567, r3 -> p123, r45 -> p111, r44 -> p9 [p67], r49 -> p65 [p58] | CMP SUB
981: 564 567 568 568, r49 -> p65 | J JMP_IMM
982: 564 565 566 568, r44 -> p110 [p9] | MOV SAVE_PC
983: 564 566 569 569, r44 -> p110, r2 -> p105 [p15] | MOV LOAD
984: 564 569 570 570, r2 -> p105, r2 -> p105, r44 -> p14 [p110], r49 -> p98 [p65] | TEST AND
985: 565 570 571 571, r49 -> p98 | J JMP_IMM
986: 565 569 572 572, r2 -> p105, r44 -> p94 [p14] | MOVSX LOAD
987: 566 572 573 573, r44 -> p94, r0 -> p113 [p90] | MOVSX SEXT_DWORD_TO_QWORD
988: 567 568 569 573, r44 -> p100 [p94] | MOV SAVE_PC
989: 568 569 572 573, r44 -> p100, r6 -> p1 [p106] | MOV LOAD
990: 568 573 574 574, r0 -> p113, r0 -> p113, r0 -> p10 [p113] | LEA LEA
991: 569 574 575 575, r0 -> p10, r0 -> p81 [p10], r49 -> p116 [p98] | SHL SHL_IMM
992: 570 575 578 578, r6 -> p1, r0 -> p81, r45 -> p62 [p111] | CMP LOAD
993: 571 578 579 579, r45 -> p62, r44 -> p104 [p100], r49 -> p95 [p116] | CMP SUB
994: 572 579 580 580, r49 -> p95 | J JMP_IMM
995: 573 574 577 580, r5 -> p12, r3 -> p121 [p123] | MOV LOAD
996: 573 574 575 580, r45 -> p76 [p62] | CMP SAVE_PC
997: 573 575 578 580, r45 -> p76, r45 -> p108 [p76] | CMP LOAD
998: 574 578 579 581, r3 -> p121, r45 -> p108, r44 -> p61 [p104], r49 -> p124 [p95] | CMP SUB
999: 575 576 579 581, r5 -> p12, r44 -> p66 [p61] | MOVZX LOAD
1000: 578 579 580 581, r44 -> p66, r14 -> p103 [p93] | MOVZX ZEXT_BYTE_TO_DWORD
Processed 1000 trace records.
Micro-ops: 1000
Macro-ops: 754
TotalCycles: 582
uIPC: 1.71821
